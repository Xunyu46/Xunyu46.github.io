import{_ as e,r as o,o as c,c as l,b as n,d as s,e as t,a as p}from"./app-9abed726.js";const i={},u=p('<h1 id="微信小程序云开发实现注册登录-与-多终端常见登录方式" tabindex="-1"><a class="header-anchor" href="#微信小程序云开发实现注册登录-与-多终端常见登录方式" aria-hidden="true">#</a> 微信小程序云开发实现注册登录 与 多终端常见登录方式</h1><p>TIP</p><p>从本节内容开始，正式进入到微信小程序云开发快速入门和实践应用了，对前面学到的基础知识进行综合实践。</p><p>通过前面艾编程-coffee 项目的开发实践，完成并掌握小程序项目的开发对我们后期 Vue 的学习打好基础，同时也是我们未来学习 uni-app 多终端：iOS、Android、以及各种小程序（微信/支付宝/百度/头条/飞书/QQ/快手/钉钉/淘宝）、快应用等的必备前提条件。</p><blockquote><p>如下是前面已完成的微信小程序 <code>icoding-coffee</code> 项目（这部分内容没有图文教程，具体代码实践查看直播视频回放即可）</p></blockquote><p><img src="https://www.arryblog.com/assets/img/image-20230528204150323.60080c0a.png" alt="image-20230528204150323"></p><p>蓝湖 UI 设计稿</p><h2 id="一、当前常见的多终端登录方式" tabindex="-1"><a class="header-anchor" href="#一、当前常见的多终端登录方式" aria-hidden="true">#</a> 一、当前常见的多终端登录方式</h2><p>TIP</p><p>深入浅出市面上常见的多终端登录方式，账号、密码登录，手机验证码登录，第三方登录，APP 扫码登录，身份证、人脸识别登录，包括本节我们会学习的微信小程序的登录等</p><h3 id="_1、账号、密码登录" tabindex="-1"><a class="header-anchor" href="#_1、账号、密码登录" aria-hidden="true">#</a> 1、账号、密码登录</h3><p>TIP</p><p>以艾编程 PC 端官网为例，需要先注册一个账号 -&gt; 在登录窗口输入用户名 和 密码 -&gt; 点击登录按钮，登录成功</p><p><img src="https://www.arryblog.com/assets/img/image-20230525170142645.f9045f49.png" alt="image-20230525170142645"></p><p>账号、密码登录方式的特点</p><ul><li>输入麻烦</li><li>不便于记忆</li></ul><blockquote><p>该方式已经开始淡出市场，很多平台已经开始降低 账号、密码登录方式展示的优先级。有些终端就直接去掉了 账号、密码登录的方式。</p></blockquote><h3 id="_2、手机验证码登录" tabindex="-1"><a class="header-anchor" href="#_2、手机验证码登录" aria-hidden="true">#</a> 2、手机验证码登录</h3><p>TIP</p><p>第二种比较常见的通过手机验证码的方式登录</p><p><img src="https://www.arryblog.com/assets/img/image-20230525170658146.1e3195ef.png" alt="image-20230525170658146"></p><p>手机验证码登录的特点</p><ul><li>麻烦度适中</li><li>无需记忆（自己的手机号正常不会忘记）</li><li>跨平台方便</li><li>必备的登录方式之一</li></ul><h3 id="_3、第三方登录" tabindex="-1"><a class="header-anchor" href="#_3、第三方登录" aria-hidden="true">#</a> 3、第三方登录</h3><p>TIP</p><p>目前很多应用不论是 PC 端 还是 移动端 都会提供第三方登录（微信、QQ、微博、支付宝等），只需通过点击对应的登录渠道来使用第三方 APP 授权当前应用即可</p><blockquote><p>这种方式的好处：可以直接使用已有的账号体系来授权即可</p></blockquote><p><img src="https://www.arryblog.com/assets/img/image-20230525171944729.72abffed.png" alt="image-20230525171944729"></p><p>第三方登录的特点</p><ul><li>扫一扫、唤起 APP 授权登录</li><li>无需记忆</li><li>必备的登录方式之一</li></ul><h3 id="_4、app-扫码登录" tabindex="-1"><a class="header-anchor" href="#_4、app-扫码登录" aria-hidden="true">#</a> 4、APP 扫码登录</h3><p>TIP</p><p>APP 扫码登录仅限于同时使用 PC 端 和 移动 APP 端的用户，在手机上打开 APP 应用完成登录 -&gt; 使用 APP 中扫一扫功能、授权 -&gt; 完成 PC 端的快捷登录</p><p><img src="https://www.arryblog.com/assets/img/image-20230525172738842.f7862958.png" alt="image-20230525172738842"></p><p>APP 扫码登录的特点</p><ul><li>扫一扫授权登录（必须保证 APP 上已经完成登录的情况下）</li><li>无需记忆</li><li>只会在 PC 端 上才会有</li></ul><h3 id="_5、身份证、人脸识别登录" tabindex="-1"><a class="header-anchor" href="#_5、身份证、人脸识别登录" aria-hidden="true">#</a> 5、身份证、人脸识别登录</h3><p>TIP</p><p>在金融 或 政务类的应用中会经常使用 身份证、人脸识别登录，在实际中通常会将这两者结合来使用</p><p><img src="https://www.arryblog.com/assets/img/image-20230525174357728.a7f5c7e3.png" alt="image-20230525174357728"></p><p>身份证、人脸识别登录的特点</p><ul><li>金融、政务</li><li>无需记忆</li><li>主要应用在移动端上 或 一些专用的设备来实现（本质需要具备摄像头）</li></ul><blockquote><p>当然，还有指纹识别、虹膜等登录方式</p></blockquote><h3 id="_6、登录的目的" tabindex="-1"><a class="header-anchor" href="#_6、登录的目的" aria-hidden="true">#</a> 6、登录的目的</h3><p>TIP</p><p>在千行百业中，有各种各样的登录方式，不论使用哪一种方式来实现登录最终的实现目的都是一样的。</p><blockquote><p><strong>登录的目的：</strong> 在对应的系统中建立当前用户的唯一标识，即 用户 ID</p></blockquote><p>注：</p><p>一个系统是可以被多个用户使用的，每个用户应该都是唯一的，并且每个用户都会在平台上产生不同的数据。我们需要区分不同用户产生的数据。</p><p>登录方式的多样化，只是社会发展 与 科技进步，使用习惯改变的必然产物，但它的目的一直没有变过。</p><blockquote><p>那么，在小程序中它的登录方式又是怎样的呢 ？</p></blockquote><h2 id="二、小程序登录" tabindex="-1"><a class="header-anchor" href="#二、小程序登录" aria-hidden="true">#</a> 二、小程序登录</h2><p>TIP</p><p>在小程序中用户登录的方式有两种</p>',54),r=n("li",null,"借助微信小程序生态的能力，获取当前手机号 或 让用户输入手机号、再获取手机验证码的方式",-1),k={href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html",target:"_blank",rel:"noopener noreferrer"},v=p(`<p><img src="https://www.arryblog.com/assets/img/api-login.2fcc9f35.2fcc9f35.jpg" alt="img"></p><h3 id="_1、前后端分离架构登录流程" tabindex="-1"><a class="header-anchor" href="#_1、前后端分离架构登录流程" aria-hidden="true">#</a> 1、前后端分离架构登录流程</h3><p>TIP</p><p>在前后端分离架构下，大致的登录流程都一样，以下为主流登录的实现的流程</p><p><img src="https://www.arryblog.com/assets/img/image-20230525184340135.843744b7.png" alt="image-20230525184340135"></p><p>注：</p><ul><li>在客户端提供登录信息，即：在浏览器、APP 上做登录操作</li><li>将信息提交给服务端做判断</li><li>建立唯一标识，本质上就是生成一个用户 ID</li><li>服务端会经过一系列的逻辑运算，最终生成一个 令牌（一串加密的字符串）</li><li>再将该令牌返回给客户端</li></ul><blockquote><p>其中，服务端判断、建立唯一标识的过程会根据业务的复杂度 与 安全要求的不同，每一个公司的具体实现流程不一定一样。作为前端开发也并不需要这块是如何实现的，本身是由服务端开发的同学负责的。</p></blockquote><p>令牌</p><p>即一段经过加密的字符串。具体表现：不能一眼从该字符串中提取出有用的信息</p><p>通过调用一个登录的接口，传递一些私有的信息，服务端就会给我们返回一个令牌，这个过程就是登录的过程</p><p><strong>令牌的用途：</strong></p><p>客户端在接收到令牌后，通常是需要保存令牌的，然后在所有需要身份鉴权的接口调用中附带这个令牌，服务端相关鉴权的模块就会去解密这个令牌（加密字符串）。</p><p>拿到解密后的身份信息，接着来判断当前的请求是否合法。这也是目前很常见的一种接口鉴权的流程</p><h3 id="_2、个人中心页面结构" tabindex="-1"><a class="header-anchor" href="#_2、个人中心页面结构" aria-hidden="true">#</a> 2、个人中心页面结构</h3><p>TIP</p><ul><li>页面结构的编写</li><li>登录前 和 登录后的页面结构</li><li>登录前后的条件控制</li></ul><p>在 <code>pages/me/me.wxml</code> 中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/me/me.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>users<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 未授权登录状态 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userinfo<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{!userInfo}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>
        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://web.arryblog.com/applets-img/default-avatar.png<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cover<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-avatar<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-desc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录获取更多会员权益<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-login<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleLogin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>授权登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 授权登录状态 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userinfo<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>else</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-login-suc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{userInfo.avatarUrl}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cover<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-avatar<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-login-desc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hi {{userInfo.nickName}} ~ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-login<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outLogin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>退出登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 登录后显示：个人订单 和 收货地址，否则不显示 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>block</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{userInfo}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dingdan1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#FF5A62<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>个人订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-line<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>didian_dingwei<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#FF5A62<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>收货地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-line<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>block</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gonggao_tongzhi<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#FF5A62<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>系统消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-line<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kefu<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#FF5A62<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!-- &lt;text class=&quot;icon-text&quot;&gt;在线客服&lt;/text&gt; --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contact<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>在线客服<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-line<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zhengzaijinhang<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#FF5A62<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!-- &lt;text class=&quot;icon-text&quot;&gt;意见反馈&lt;/text&gt; --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>feedback<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>意见反馈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-line<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>33<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>adv-con<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span>
      <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://web.arryblog.com/applets-img/me-adv-banner-1.png<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cover<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>me-adv-img<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、个人中心页面样式" tabindex="-1"><a class="header-anchor" href="#_3、个人中心页面样式" aria-hidden="true">#</a> 3、个人中心页面样式</h3><p>在 <code>pages/me/me.wxss</code> 中</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* pages/me/me.wxss */</span>
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.users</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 249rpx<span class="token punctuation">;</span>
  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://web.arryblog.com/applets-img/me-bgc-banner.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.userinfo</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0 20rpx<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.user-login-suc</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.user-login-desc</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.user-desc</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.user-avatar</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 128rpx<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 128rpx<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.btn-login:not([size=&quot;mini&quot;])</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 150rpx<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 60rpx<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 26rpx<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 60rpx<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #ffca8c<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item-list</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 116rpx<span class="token punctuation">;</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #f6f6f6<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.icon-text</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 30rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.icon-right-line</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #cacad6<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.adv-con</span> <span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.me-adv-img</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 623rpx<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 177rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item-wrap</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 去掉按钮的默认样式 */</span>
<span class="token selector">.btn-text:not([size=&quot;mini&quot;])</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 1.3<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 30rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 去掉边框 */</span>
<span class="token selector">.btn-text::after</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、个人中心逻辑处理" tabindex="-1"><a class="header-anchor" href="#_4、个人中心逻辑处理" aria-hidden="true">#</a> 4、个人中心逻辑处理</h3><p>TIP</p>`,24),m={href:"https://developers.weixin.qq.com/community/develop/doc/000cacfa20ce88df04cb468bc52801?highLine=login",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,"将用户头像和昵称存储在 本地存储中，当用户再次进入小程序时，不必重复授权登录",-1),g=n("li",null,"退出登录，清空本地存储数据 同时 清空页面数据",-1),h=p(`<p>在 <code>pages/me/me.js</code> 中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/me/me.js</span>

<span class="token comment">// 获取应用的实例</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">userInfo</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 授权登录</span>
  <span class="token keyword">async</span> <span class="token function">handleLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 推荐使用wx.getUserProfile获取用户信息，开发者每次通过该接口获取用户个人信息均需用户确认</span>
    <span class="token comment">// 开发者妥善保管用户快速填写的头像昵称，避免重复弹窗</span>

    <span class="token comment">// 获取用户信息</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> wx<span class="token punctuation">.</span><span class="token function">getUserProfile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token string">&quot;用于完善会员资料&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 声明获取用户个人信息后的用途，后续会展示在弹窗中，请谨慎填写</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 实现用户注册（如果用户已注册，直接登录即可）</span>
    <span class="token comment">// 设置加载中的提示</span>
    <span class="token comment">// wx.showLoading({</span>
    <span class="token comment">//  title: &#39;正在授权中 ...&#39;,</span>
    <span class="token comment">// })</span>

    <span class="token comment">// 使用微信小程序云开发 或 对接我们的后端注册登录 API 接口</span>

    <span class="token comment">// 授权成功后</span>
    <span class="token comment">// 将用户信息存储在本地存储中，用于用户下次进入小程序时，不必重复授权登录</span>
    <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span><span class="token string">&quot;userInfo&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 更新 data</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">userInfo</span><span class="token operator">:</span> res<span class="token punctuation">.</span>userInfo<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 退出登录</span>
  <span class="token function">outLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 清除本地缓存</span>
    app<span class="token punctuation">.</span><span class="token function">rmStorage</span><span class="token punctuation">(</span><span class="token string">&quot;userInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 更新 data</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 清空页面数据</span>
      <span class="token literal-property property">userInfo</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 生命周期函数 - 页面加载时执行</span>
  <span class="token keyword">async</span> <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取本地缓存中的用户登录信息</span>
    <span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token string">&quot;userInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 更新data</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      userInfo<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、微信小程序云开发快速入门" tabindex="-1"><a class="header-anchor" href="#三、微信小程序云开发快速入门" aria-hidden="true">#</a> 三、微信小程序云开发快速入门</h2><p>TIP</p><p>快速了解微信小程序云开发常见基础概念，掌握登录注册必备的基础</p><h3 id="_1、企业项目开发到上线的环境配置" tabindex="-1"><a class="header-anchor" href="#_1、企业项目开发到上线的环境配置" aria-hidden="true">#</a> 1、企业项目开发到上线的环境配置</h3><p>TIP</p><p>一般企业项目开发到上线的几个阶段：开发 -&gt; 测试 -&gt; 预发布 -&gt; 生产，其中生产环境也就是通常说的真实线上环境。（根据企业和项目规模的不同会有不同，大致流程都一样）</p><h3 id="_1-1、dev-开发环境" tabindex="-1"><a class="header-anchor" href="#_1-1、dev-开发环境" aria-hidden="true">#</a> 1.1、dev（开发环境）</h3><p>TIP</p><p>DEV （Development Environment）<strong>开发环境</strong>，用于软件开发人员开发联调时使用。</p><p>即：开发同学开发时使用的环境，就是与测试环境分开的独立客户机、服务器、配置管理工具等。开发同学专门用于开发及调试的服务器，配置可以比较随意， 为了开发调试方便，打开错误报告方便调试。通常表示<code>最低</code>环境，由代码开发人员直接使用和维护，是代码最超前版本的一个环境。</p><blockquote><p>每位开发同学在自己的 dev 分支上干活，提测前或者开发到一定程度，各位同学会合并代码，进行联调。</p></blockquote><h3 id="_1-2、test-或-fat-测试环境" tabindex="-1"><a class="header-anchor" href="#_1-2、test-或-fat-测试环境" aria-hidden="true">#</a> 1.2、test 或 FAT（测试环境）</h3><p>TIP</p><p>FAT （Feature Acceptance Test Environment）<strong>功能验收测试环境</strong>，也就是俗称的测试环境。</p><p>测试同学干活的环境，测试人员利用一些工具及数据所模拟出的、接近真实用户使用环境的环境。 目的：为了使测试结果更加真实有效。</p><p>测试环境应该与开发环境分隔开，使用独立的客户机、服务器和配置管理工具。是测试者测试及改 bug 的环境；这个环境要和生产环境类似。</p><p>开发人员确认代码分支在开发环境自测没有问题后，提交测试环境进行测试。测试环境对代码和系统已经集成，可以供测试人员进行功能模块测试，集成测试，系统测试，测试环境有独立的数据库和账号权限管理系统，由测试人员使用和管理，功能型 bug 一般在测试环境中暴露较多。</p><h3 id="_1-3、uat-预发布环境" tabindex="-1"><a class="header-anchor" href="#_1-3、uat-预发布环境" aria-hidden="true">#</a> 1.3、uat（预发布环境）</h3><p>TIP</p><p>UAT （User Acceptance Test Environment）<strong>用户验收测试环境，类似于预发布环境。</strong></p><p>预发布环境是正式发布前最后一次测试，所有的功能和配置，数据库都已经与线上环境高度相似，仅准入本次需要上线的功能代码，测试人员确认代码在测试环境经过测试用例测试没有问题后，提交预发布环境进行测试。因为在少数情况下即使预发布通过了，都不能保证正式生产环境可以 100%不出问题；</p><p>预发布环境的配置，数据库等都是跟线上一样，有些公司的预发布环境数据库是连接线上环境，有些公司预发布环境是单独的数据库；如果不设预发布环境，如果开发合并代码有问题，会直接将问题发布到线上，增加维护的成本；</p><p><strong>预发布环境和测试环境的区别：</strong></p><p>预生产环境和生产系统的同步性更高，几乎一样，有些测试，比如需要大数据量的，用预生产环境看程序性能比用测试环境（一般情况下数据会较少）会更准确。</p><p>注：</p><p>预发布环境一般会连接生产环境的数据库（看企业和项目规模不同），测试时要注意，以免产生脏数据，避免影响生产环境的使用</p><h3 id="_1-4、prod-生产环境" tabindex="-1"><a class="header-anchor" href="#_1-4、prod-生产环境" aria-hidden="true">#</a> 1.4、prod（生产环境）</h3><p>TIP</p><p>PRO （Production Environment）<strong>生产环境</strong>。</p><p>即发布正式线上环境，真实用户访问的环境（最高环境，直接面向真实的用户）。由特定人员来维护，一般人没有权限去修改。该环境是指正式提供对外服务的，真实用户线上使用的环境；关闭错误报告，打开错误日志。</p><p><strong>预发布环境和生产环境区别：</strong></p><ul><li>预发环境中新功能为最新代码，其他功能代码和生产环境一致。</li><li>预发环境和生产环境的访问域名不同。</li></ul><h3 id="_1-5、灰度发布" tabindex="-1"><a class="header-anchor" href="#_1-5、灰度发布" aria-hidden="true">#</a> 1.5、灰度发布</h3><p>TIP</p><p>灰度发布，发生在预发布环境之后，生产环境之前。</p><p>生产环境一般会部署在多台机器上（跨地域、跨机房部署），以防某地域、某机房、某台机器出现故障，这样其他机器可以继续运行，不影响用户使用。灰度发布会发布到其中的几台机器上，验证新功能是否正常。如果失败，只需回滚这几台机器即可。</p><h3 id="_2、创建小程序云开发环境" tabindex="-1"><a class="header-anchor" href="#_2、创建小程序云开发环境" aria-hidden="true">#</a> 2、创建小程序云开发环境</h3><p>TIP</p><p>在微信开发中工具左上角的工具栏中，点击云开发按钮，进入 “创建云开发环境”</p><p><img src="https://www.arryblog.com/assets/img/image-20230526153131132.bfad232f.png" alt="image-20230526153131132"></p><p>注：</p><p>点击确认后，需要等待一点时间，即可创建成功。</p><p>学习阶段，创建好云开发环境后不要随意删除，删除后再创建就需要付费使用了，免费额度只有一次机会。</p><p>创建成功后，会进入如下面板</p><p><img src="https://www.arryblog.com/assets/img/image-20230526163154030.1d13fbb1.png" alt="image-20230526163154030"></p><h3 id="_3、常用的云开发服务" tabindex="-1"><a class="header-anchor" href="#_3、常用的云开发服务" aria-hidden="true">#</a> 3、常用的云开发服务</h3><p>TIP</p><p>使用微信小程序云开发常用的云开发服务有：云函数、数据库、存储</p><h3 id="_3-1、云函数" tabindex="-1"><a class="header-anchor" href="#_3-1、云函数" aria-hidden="true">#</a> 3.1、云函数</h3><p>TIP</p>`,52),w={href:"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E4%BA%91%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},q={href:"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/functions/wx-server-sdk.html",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"wx-server-sdk",-1),f={href:"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/utils/Cloud.getWXContext.html",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"getWXContext",-1),_=n("code",null,"appid",-1),I=n("code",null,"openid",-1),P=n("code",null,"openid",-1),j={href:"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E4%BA%91%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},T=n("h3",{id:"_3-2、数据库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-2、数据库","aria-hidden":"true"},"#"),s(" 3.2、数据库")],-1),N=n("p",null,"TIP",-1),A=n("p",null,"云开发提供了一个 JSON 数据库，顾名思义，数据库中的每条记录都是一个 JSON 格式的对象。一个数据库可以有多个集合（相当于关系型数据中的表），集合可看做一个 JSON 数组，数组中的每个对象就是一条记录，记录的格式是 JSON 对象。",-1),E={href:"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E6%95%B0%E6%8D%AE%E5%BA%93",target:"_blank",rel:"noopener noreferrer"},C=n("h3",{id:"_3-3、存储",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-3、存储","aria-hidden":"true"},"#"),s(" 3.3、存储")],-1),D=n("p",null,"TIP",-1),U=n("p",null,"云开发提供了一块存储空间，提供了上传文件到云端、带权限管理的云端下载能力，开发者可以在小程序端和云函数端通过 API 使用云存储功能。",-1),z=n("p",null,[s("在小程序端可以分别调用 "),n("code",null,"wx.cloud.uploadFile"),s(" 和 "),n("code",null,"wx.cloud.downloadFile"),s(" 完成上传和下载云文件操作。")],-1),S={href:"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"},F=p(`<h2 id="四、使用微信小程序云开发实现注册登录" tabindex="-1"><a class="header-anchor" href="#四、使用微信小程序云开发实现注册登录" aria-hidden="true">#</a> 四、使用微信小程序云开发实现注册登录</h2><p>TIP</p><p>深入浅出微信小程序云开发的具体实践与应用。</p><h3 id="_1、创建云开发环境" tabindex="-1"><a class="header-anchor" href="#_1、创建云开发环境" aria-hidden="true">#</a> 1、创建云开发环境</h3><p>TIP</p><p>在项目根目录 <code>project.config.json</code> 项目配置文件中，初始化配置云函数的文件夹的目录</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;cloudfunctionRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cloud/&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目根目录中，新建 <code>cloud</code> 文件夹</p><p><img src="https://www.arryblog.com/assets/img/image-20230526171013771.6545cccb.png" alt="image-20230526171013771"></p><p>选择项目对应的环境</p><p><img src="https://www.arryblog.com/assets/img/image-20230526171213622.0e0158e7.png" alt="image-20230526171213622"></p><h3 id="_2、注册用户账号" tabindex="-1"><a class="header-anchor" href="#_2、注册用户账号" aria-hidden="true">#</a> 2、注册用户账号</h3><p>TIP</p><p>当点击登录按钮后，通过微信的开发能力获取了微信昵称和头像基础信息后，将这些基础信息或其他信息一并提交给后端，用于创建一个用户账号（注册）。</p><blockquote><p>但这两个字段不能作为用户的唯一标识 ！（微信昵称是会有重复的不能作为唯一标识）</p></blockquote><p>注：</p><p>注册用户账号的同时，在小程序中就需要一个唯一字段 openId 来标识（伴随着微信账户本身，类似当前用户的身份证 ID 或 一样），既不会重复也不会失效。</p>`,17),B={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html",target:"_blank",rel:"noopener noreferrer"},O=p(`<h3 id="_2-1、新建数据库表-集合" tabindex="-1"><a class="header-anchor" href="#_2-1、新建数据库表-集合" aria-hidden="true">#</a> 2.1、新建数据库表（集合）</h3><p>TIP</p><p>在云开发控制台中，创建数据表 <code>users</code> 用于存储用户信息</p><p><img src="https://www.arryblog.com/assets/img/image-20230526191738515.a4109ce7.png" alt="image-20230526191738515"></p><h3 id="_2-2、新建登录云函数" tabindex="-1"><a class="header-anchor" href="#_2-2、新建登录云函数" aria-hidden="true">#</a> 2.2、新建登录云函数</h3><p>TIP</p><p>在 <code>cloud</code> 文件夹上右键 -&gt; 选择 ”新建 Node.js 云函数“</p><p><img src="https://www.arryblog.com/assets/img/image-20230526192212487.02d706fc.png" alt="image-20230526192212487"></p><p>输入云函数名称 <code>login</code> 即可新建成功</p><p><img src="https://www.arryblog.com/assets/img/image-20230526192526889.92fb422c.png" alt="image-20230526192526889"></p><p>在 <code>cloud/login/index.js</code> 中编写云函数的逻辑</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 云函数入口文件</span>
<span class="token keyword">const</span> cloud <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;wx-server-sdk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1、指定云函数的环境，注：使用云函数前必须指定环境进行初始化</span>
cloud<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">env</span><span class="token operator">:</span> cloud<span class="token punctuation">.</span><span class="token constant">DYNAMIC_CURRENT_ENV</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用当前云环境</span>

<span class="token comment">// 云函数入口函数</span>
<span class="token comment">// event 指：前端传给后端的字段</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wxContext <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">getWXContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    event<span class="token punctuation">,</span>
    <span class="token comment">// 微信的唯一标识符，返回给前端</span>
    <span class="token literal-property property">openid</span><span class="token operator">:</span> wxContext<span class="token punctuation">.</span><span class="token constant">OPENID</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3、在微信端调用云函数" tabindex="-1"><a class="header-anchor" href="#_2-3、在微信端调用云函数" aria-hidden="true">#</a> 2.3、在微信端调用云函数</h3><p>在 <code>pages/me/me.js</code> 中调用云函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/me/me.js</span>

<span class="token comment">// 获取应用的实例</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">userInfo</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hasUserInfo</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 授权登录</span>
  <span class="token keyword">async</span> <span class="token function">handleLogin</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1、获取用户信息</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> userInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> wx
      <span class="token punctuation">.</span><span class="token function">getUserProfile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 授权成功后</span>
      <span class="token comment">// 将用户信息存储在 本地存储中，用于用户下次进入小程序时，不必重复授权登录</span>
      app<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span><span class="token string">&quot;userInfo&quot;</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 实现用户注册（如果用户已注册，直接登录即可）</span>
      <span class="token comment">// 设置加载中的提示</span>
      wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;正在授权中 ...&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 调用云函数 -------------------</span>
      <span class="token comment">// 2、把当前用户信息提交给后端，用于创建生成一个用户账号（即：注册用户信息</span>
      wx<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> userInfo<span class="token punctuation">.</span>avatarUrl<span class="token punctuation">,</span>
          <span class="token literal-property property">nickName</span><span class="token operator">:</span> userInfo<span class="token punctuation">.</span>nickName<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 更新 data</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        userInfo<span class="token punctuation">,</span>
        <span class="token literal-property property">hasUserInfo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 省略部分代码 ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>当点击登录后，控制台会报错 “请先调用 wx.cloud.init() 完成初始化后再调用其他云 API。”</p><p><img src="https://www.arryblog.com/assets/img/image-20230527154735854.9edd5dd5.png" alt="image-20230527154735854"></p><h3 id="_2-4、在小程序-app-js-中初始化云函数" tabindex="-1"><a class="header-anchor" href="#_2-4、在小程序-app-js-中初始化云函数" aria-hidden="true">#</a> 2.4、在小程序 app.js 中初始化云函数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Storage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./utils/storage&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> storage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">setStorage</span><span class="token operator">:</span> storage<span class="token punctuation">.</span>set<span class="token punctuation">,</span>
  <span class="token literal-property property">getStorage</span><span class="token operator">:</span> storage<span class="token punctuation">.</span>get<span class="token punctuation">,</span>
  <span class="token literal-property property">rmStorage</span><span class="token operator">:</span> storage<span class="token punctuation">.</span>rm<span class="token punctuation">,</span>
  <span class="token comment">// 小程序初始化完成时触发，全局只触发一次。</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token string">&quot;cartInfo&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 设置 tarBar 图标</span>
        res<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>
          <span class="token operator">?</span> wx<span class="token punctuation">.</span><span class="token function">setTabBarBadge</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
              <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token operator">:</span> wx<span class="token punctuation">.</span><span class="token function">removeTabBarBadge</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 小程序端初始化 --------------</span>
    wx<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// API 调用的默认环境配置</span>
      <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token string">&quot;icoding-coffee-dev-5dontd2874c31&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 将用户访问记录到用户管理中，在控制台中可见</span>
      <span class="token literal-property property">traceUser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>以上 env 环境 ID 需要在云开发控制台中 复制自己的 环境 ID 即可。</p><p>此次，再次点击登录测试，后端就返回了我们需要的 openId 和 我们前端传过去的用户信息了。</p><p><img src="https://www.arryblog.com/assets/img/image-20230527155550303.434b2682.png" alt="image-20230527155550303"></p><h3 id="_2-5、注册用户信息-至-数据库中" tabindex="-1"><a class="header-anchor" href="#_2-5、注册用户信息-至-数据库中" aria-hidden="true">#</a> 2.5、注册用户信息 至 数据库中</h3><p>TIP</p><p>当我们拿到了注册用户所需要的信息后，就开始正式注册用户信息了，即往数据库中插入一条用户数据</p><p>注：</p><ul><li>如果数据库中存在当前用户的信息（已注册过），则直接返回当前用户信息（登录）</li><li>如果数据库中没有当前用户的信息（注册）</li></ul><blockquote><p>先完成用户信息的注册，如下</p></blockquote><p>在 <code>cloud/login/index.js</code> 云函数中完成用户信息的注册，即往数据库中插入一条数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 云函数入口文件</span>
<span class="token keyword">const</span> cloud <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;wx-server-sdk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1、指定云函数的环境，注：使用云函数前必须指定环境进行初始化</span>
cloud<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">env</span><span class="token operator">:</span> cloud<span class="token punctuation">.</span><span class="token constant">DYNAMIC_CURRENT_ENV</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用当前云环境</span>

<span class="token comment">// 云函数入口函数</span>
<span class="token comment">// event 指：前端传给后端的字段</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wxContext <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">getWXContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 解构前端传入的字段</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> avatarUrl<span class="token punctuation">,</span> nickName <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">;</span>

  <span class="token comment">// 如果数据库中没有当前用户的信息（注册）</span>

  <span class="token comment">// 1、初始化数据库（获取数据库的引用）</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2、指定集合（数据表），获取集合的引用</span>
  <span class="token keyword">const</span> users <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 3、在数据库中新增用户数据（注册）</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> users<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      avatarUrl<span class="token punctuation">,</span>
      nickName<span class="token punctuation">,</span>
      <span class="token comment">// 注册时所需要的其他字段信息也可以再次加入 ...</span>

      <span class="token comment">// 账户余额</span>
      <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>

      <span class="token comment">// 注册时一定要加入 openid 作为唯一标识</span>
      <span class="token literal-property property">_openid</span><span class="token operator">:</span> wxContext<span class="token punctuation">.</span><span class="token constant">OPENID</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 添加数据库信息后，返回值（即：当前用户信息的 ID）</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>编译运行后，点击登录按钮，发现 NetWork 发送请求 和 服务器返回的数据并没有发生变化。同时，数据库中也并没有插入用户信息 ！</p><blockquote><p>原因是：我们重新修改了云函数后，并没有上传，因此不会生效</p></blockquote><p><img src="https://www.arryblog.com/assets/img/image-20230527163058861.71d081ac.png" alt="image-20230527163058861"></p><blockquote><p>等待上传成功后，即可正常运行，并插入数据库成功</p></blockquote><p><img src="https://www.arryblog.com/assets/img/image-20230527164814794.345db195.png" alt="image-20230527164814794"></p><p>查看云数据库中 <code>users</code> 集合中添加成功的数据</p><p><img src="https://www.arryblog.com/assets/img/image-20230527165108824.8aa140c4.png" alt="image-20230527165108824"></p><h3 id="_3、实现登录逻辑" tabindex="-1"><a class="header-anchor" href="#_3、实现登录逻辑" aria-hidden="true">#</a> 3、实现登录逻辑</h3><p>TIP</p><p>当我们再次，点击登录时，就会重复注册当前用户的信息。并没有走登录逻辑，因此，我们需要来处理用户重复注册的问题。</p><p><strong>思路：</strong> 如果数据库中存在当前用户的信息（已注册过），则直接返回当前用户信息（登录）</p><p>在 <code>cloud/login/index.js</code> 中编写根据 openId 查询用户信息的方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 云函数入口文件</span>
<span class="token keyword">const</span> cloud <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;wx-server-sdk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1、指定云函数的环境，注：使用云函数前必须指定环境进行初始化</span>
cloud<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">env</span><span class="token operator">:</span> cloud<span class="token punctuation">.</span><span class="token constant">DYNAMIC_CURRENT_ENV</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用当前云环境</span>

<span class="token comment">// 云函数入口函数</span>
<span class="token comment">// event 指：前端传给后端的字段</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wxContext <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">getWXContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 解构前端传入的字段</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> avatarUrl<span class="token punctuation">,</span> nickName <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">;</span>

  <span class="token comment">// 如果数据库中没有当前用户的信息（注册）</span>

  <span class="token comment">// 1、初始化数据库（获取数据库的引用）</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2、指定集合（数据表），获取集合的引用</span>
  <span class="token keyword">const</span> users <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 在新增用户数据之前</span>
  <span class="token comment">// 3、先查询当前用户是否已注册过</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> users
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">_openId</span><span class="token operator">:</span> wxContext<span class="token punctuation">.</span><span class="token constant">OPENID</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 3、在数据库中新增用户数据（注册）</span>
  <span class="token comment">// const data = await users.add({</span>
  <span class="token comment">//   data: {</span>
  <span class="token comment">//     avatarUrl,</span>
  <span class="token comment">//     nickName,</span>
  <span class="token comment">//     // 注册时所需要的其他字段信息也可以再次加入 ...</span>

  <span class="token comment">//     // 账户余额</span>
  <span class="token comment">//     money: 0,</span>

  <span class="token comment">//     // 注册时一定要加入 openid 作为唯一标识</span>
  <span class="token comment">//     _openId: wxContext.OPENID</span>
  <span class="token comment">//   }</span>
  <span class="token comment">// })</span>

  <span class="token comment">// 添加数据库信息后，返当前用户信息的 ID</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>当数据库中存在该用户信息时，查询结果返回一个 数组（当前用户的信息）</p><blockquote><p>如果没有查询到该用户数据时，数组即为空</p></blockquote><p><img src="https://www.arryblog.com/assets/img/image-20230527171728396.f2effc35.png" alt="image-20230527171728396"></p><h3 id="_3-1、登录注册逻辑判断" tabindex="-1"><a class="header-anchor" href="#_3-1、登录注册逻辑判断" aria-hidden="true">#</a> 3.1、登录注册逻辑判断</h3><p>TIP</p><p>如果数据库中存在当前用户的信息（已注册过），则直接返回当前用户信息（登录），如果数据库中没有当前用户的信息（注册）</p><p>即可通过以上根据 openId 查询返回的数组的长度来进行判断，是否已存在该用户</p><p>在 <code>cloud/login/index.js</code> 中修改逻辑</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 云函数入口文件</span>
<span class="token keyword">const</span> cloud <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;wx-server-sdk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1、指定云函数的环境，注：使用云函数前必须指定环境进行初始化</span>
cloud<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">env</span><span class="token operator">:</span> cloud<span class="token punctuation">.</span><span class="token constant">DYNAMIC_CURRENT_ENV</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用当前云环境</span>

<span class="token comment">// 云函数入口函数</span>
<span class="token comment">// event 指：前端传给后端的字段</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wxContext <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">getWXContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 解构前端传入的字段</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> avatarUrl<span class="token punctuation">,</span> nickName <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">;</span>

  <span class="token comment">// 如果数据库中没有当前用户的信息（注册）</span>

  <span class="token comment">// 1、初始化数据库（获取数据库的引用）</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2、指定集合（数据表），获取集合的引用</span>
  <span class="token keyword">const</span> users <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 在新增用户数据之前</span>
  <span class="token comment">// 3、先查询当前用户是否已注册过</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> users
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">_openId</span><span class="token operator">:</span> wxContext<span class="token punctuation">.</span><span class="token constant">OPENID</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 根据返回的 data 数组的长度来进行判断，是否已存在该用户</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 等于 0 ，数据库中没有当前用户的信息（注册）</span>

    <span class="token comment">// 在数据库中新增用户数据（注册）</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> users<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        avatarUrl<span class="token punctuation">,</span>
        nickName<span class="token punctuation">,</span>
        <span class="token comment">// 注册时所需要的其他字段信息也可以再次加入 ...</span>

        <span class="token comment">// 账户余额</span>
        <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>

        <span class="token comment">// 注册时一定要加入 openid 作为唯一标识</span>
        <span class="token literal-property property">_openId</span><span class="token operator">:</span> wxContext<span class="token punctuation">.</span><span class="token constant">OPENID</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 注册成功后，返回信息</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果数据库中存在当前用户的信息（已注册过），则直接返回当前用户信息（登录）</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>更新完逻辑后，重新上传并部署云函数，再次测试</p><p>可以正常新增用户 和 登录用户了，登录成功后会成功返回用户信息。但注册成功后，后端只会返回了当前的用户 ID，这里就不对了。注册成功后同样需要返回当前用户信息（用于页面的展示）</p><h3 id="_3-2、优化注册成功后-返回用户信息" tabindex="-1"><a class="header-anchor" href="#_3-2、优化注册成功后-返回用户信息" aria-hidden="true">#</a> 3.2、优化注册成功后，返回用户信息</h3><p>TIP</p><p>当用户注册成功后，根据 ID 快速查询当前用户的信息，并返回给前端</p><p>在 <code>cloud/login/index.js</code> 中修改逻辑</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 云函数入口文件</span>
<span class="token keyword">const</span> cloud <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;wx-server-sdk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1、指定云函数的环境，注：使用云函数前必须指定环境进行初始化</span>
cloud<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">env</span><span class="token operator">:</span> cloud<span class="token punctuation">.</span><span class="token constant">DYNAMIC_CURRENT_ENV</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用当前云环境</span>

<span class="token comment">// 云函数入口函数</span>
<span class="token comment">// event 指：前端传给后端的字段</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wxContext <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">getWXContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 解构前端传入的字段</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> avatarUrl<span class="token punctuation">,</span> nickName <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">;</span>

  <span class="token comment">// 如果数据库中没有当前用户的信息（注册）</span>

  <span class="token comment">// 1、初始化数据库（获取数据库的引用）</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> cloud<span class="token punctuation">.</span><span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2、指定集合（数据表），获取集合的引用</span>
  <span class="token keyword">const</span> users <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 在新增用户数据之前</span>
  <span class="token comment">// 3、先查询当前用户是否已注册过</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> users
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">_openId</span><span class="token operator">:</span> wxContext<span class="token punctuation">.</span><span class="token constant">OPENID</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 根据返回的 data 数组的长度来进行判断，是否已存在该用户</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 等于 0 ，数据库中没有当前用户的信息（注册）</span>

    <span class="token comment">// 在数据库中新增用户数据（注册）</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> users<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        avatarUrl<span class="token punctuation">,</span>
        nickName<span class="token punctuation">,</span>
        <span class="token comment">// 注册时所需要的其他字段信息也可以再次加入 ...</span>

        <span class="token comment">// 账户余额</span>
        <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>

        <span class="token comment">// 注册时一定要加入 openid 作为唯一标识</span>
        <span class="token literal-property property">_openId</span><span class="token operator">:</span> wxContext<span class="token punctuation">.</span><span class="token constant">OPENID</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// ---------------------</span>
    <span class="token comment">// 当用户注册成功后，根据 ID 快速查询当前用户的信息，并返回给前端</span>
    <span class="token comment">// doc：接收 _id 快速返回该 id 的数据</span>
    <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> users<span class="token punctuation">.</span><span class="token function">doc</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>_id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 注册成功后，返回当前用户数据</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> user<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果数据库中存在当前用户的信息（已注册过），则直接返回当前用户信息（登录）</span>
    <span class="token comment">// 登录成功后，返回当前用户数据</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、在小程序页面逻辑获取登录后的数据" tabindex="-1"><a class="header-anchor" href="#_4、在小程序页面逻辑获取登录后的数据" aria-hidden="true">#</a> 4、在小程序页面逻辑获取登录后的数据</h3><p>TIP</p><ul><li>在页面逻辑中获取登录后的用户数据</li><li>并将数据库中真实的用户信息同步到本地存储中，做数据的持久化</li></ul><p>在 <code>pages/me/me.js</code> 中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/me/me.js</span>

<span class="token comment">// 获取应用的实例</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">userInfo</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hasUserInfo</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 授权登录</span>
  <span class="token keyword">async</span> <span class="token function">handleLogin</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1、获取用户信息</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> userInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> wx
      <span class="token punctuation">.</span><span class="token function">getUserProfile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 实现用户注册（如果用户已注册，直接登录即可）</span>
      <span class="token comment">// 设置加载中的提示</span>
      <span class="token comment">// wx.showLoading({</span>
      <span class="token comment">//   title: &#39;正在授权中 ...&#39;,</span>
      <span class="token comment">// })</span>

      <span class="token comment">// 调用云函数</span>
      <span class="token comment">// 2、把当前用户信息提交给后端，用于创建生成一个用户账号（即：注册用户信息</span>
      <span class="token comment">// 也可以使用双重解构 将 res 替换成  {result:{data}}</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> wx<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">avatarUrl</span><span class="token operator">:</span> userInfo<span class="token punctuation">.</span>avatarUrl<span class="token punctuation">,</span>
          <span class="token literal-property property">nickName</span><span class="token operator">:</span> userInfo<span class="token punctuation">.</span>nickName<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// console.log(res)</span>

      <span class="token comment">// 授权成功后</span>
      <span class="token comment">// 将用户信息存储在 本地存储中，用于用户下次进入小程序时，不必重复授权登录</span>
      app<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span><span class="token string">&quot;userInfo&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 更新 data</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// 更新 userInfo 的数据</span>
        <span class="token literal-property property">userInfo</span><span class="token operator">:</span> res<span class="token punctuation">.</span>result<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
        <span class="token literal-property property">hasUserInfo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 省略部分代码 ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、当页面切换时-实时获取最新的用户数据" tabindex="-1"><a class="header-anchor" href="#_5、当页面切换时-实时获取最新的用户数据" aria-hidden="true">#</a> 5、当页面切换时，实时获取最新的用户数据</h3><p>在 <code>pages/me/me.js</code> 中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 生命周期函数--监听页面显示</span>
<span class="token keyword">async</span> <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 获取本地存储中的用户信息</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token string">&#39;userInfo&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token comment">// 如果 res 中有值，表示用户已经登录了</span>
        <span class="token comment">// 此时，需要请求当前用户数据库中的最新数据（与数据库信息保持同步）</span>
        <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> wx<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span><span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doc</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>_id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

        <span class="token comment">// 更新data</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">userInfo</span><span class="token operator">:</span> user<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
            <span class="token literal-property property">hasUserInfo</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当页面切换时，控制台会报错，是因为数据库没有用户可读的权限</p><p><img src="https://www.arryblog.com/assets/img/image-20230527200048635.d59261bd.png" alt="image-20230527200048635"></p><p>在云开发控制台中，修改数据库的权限即可</p><p><img src="https://www.arryblog.com/assets/img/image-20230527195702319.c42868ee.png" alt="image-20230527195702319"></p><p>心语：</p><p>专注，就是将精力集中在某一个领域，消耗的少，聚焦的多，就容易在一个行业里站住脚，再积累几年，就生长出来了。</p><p>要紧的是果敢的迈出第一步，对与错都先不管，自古就没有设计好再开步的事儿，别想把一切都弄清楚再去走路。鲁莽者要学会思考，善思者要克服的是犹豫。目的可求完美，举步之际则无需周全。</p><p>生活不能等待别人来安排，要自己去争取和奋斗。不要质疑你现在写的一行行代码，做的一道道题，开发一个个项目，它终要把你送向更远的远方，你的使命是去看世界，成为更好的自己，这些都是替你打开世界的方式。</p>`,80);function L(R,V){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[r,n("li",null,[s("通过调用小程序的原生 API ，"),n("a",k,[s("wx.login(Object object) (opens new window)"),t(a)]),s("来实现登录，即当前用户在此小程序内的唯一标识：openId")])]),n("blockquote",null,[n("p",null,[s("详细查阅，"),n("a",d,[s("微信小程序官方文档 - 登录流程时序(opens new window)"),t(a)])])]),v,n("ul",null,[n("li",null,[s("用户授权信息，使用 "),n("a",m,[s("wx.getUserProfile() (opens new window)"),t(a)]),s("API 接口获取用户的头像昵称信息")]),b,g]),h,n("p",null,[n("a",w,[s("云函数 (opens new window)"),t(a)]),s("是一段运行在云端的代码，无需管理服务器，在开发工具内编写、一键上传部署即可运行后端代码。")]),n("p",null,[s("小程序内提供了专门用于云函数调用的 API。开发者可以在云函数内使用 "),n("a",q,[y,s(" (opens new window)"),t(a)]),s("提供的 "),n("a",f,[x,s(" (opens new window)"),t(a)]),s("方法获取到每次调用的上下文（"),_,s("、"),I,s(" 等），无需维护复杂的鉴权机制，即可获取天然可信任的用户登录态（"),P,s("）。")]),n("blockquote",null,[n("p",null,[s("详细查阅，"),n("a",j,[s("微信小程序官方文档 - 云函数(opens new window)"),t(a)])])]),T,N,A,n("blockquote",null,[n("p",null,[s("详细查阅，"),n("a",E,[s("微信小程序官方文档 - 数据库(opens new window)"),t(a)])])]),C,D,U,z,n("blockquote",null,[n("p",null,[s("详细查阅，"),n("a",S,[s("微信小程序官方文档 - 存储(opens new window)"),t(a)])])]),F,n("blockquote",null,[n("p",null,[s("这就是微信小程序中的鉴权机制，即 通过 openId 来鉴权。详细查阅，"),n("a",B,[s("微信小程序官方文档 - 小程序登录 (opens new window)"),t(a)]),s("流程时序图可以看到")])]),O])}const X=e(i,[["render",L],["__file","weixinxiaochengxuyunkaifashixianzhucedenglu yu duozhongduanchangjiandenglufangshi.html.vue"]]);export{X as default};
