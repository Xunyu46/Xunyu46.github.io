const l=JSON.parse('{"key":"v-433495a9","path":"/blogs/web/javascript/JavaScript jichengde 6 zhongfangshi、yingyongchangjing，nazhigouzaohanshu.html","title":"JavaScript 继承的 6 种方式、应用场景，内置构造函数","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、什么是继承呢 ？","slug":"一、什么是继承呢","link":"#一、什么是继承呢","children":[]},{"level":2,"title":"二、通过原型链实现继承","slug":"二、通过原型链实现继承","link":"#二、通过原型链实现继承","children":[{"level":3,"title":"1、原型链实现继承的本质","slug":"_1、原型链实现继承的本质","link":"#_1、原型链实现继承的本质","children":[]},{"level":3,"title":"1.1、Student 类继承 People 类关系图","slug":"_1-1、student-类继承-people-类关系图","link":"#_1-1、student-类继承-people-类关系图","children":[]},{"level":3,"title":"2、注意事项 1 - 重写父类方法","slug":"_2、注意事项-1-重写父类方法","link":"#_2、注意事项-1-重写父类方法","children":[]},{"level":3,"title":"3 、注意事项 2 - 子类的 constructor 指向问题","slug":"_3-、注意事项-2-子类的-constructor-指向问题","link":"#_3-、注意事项-2-子类的-constructor-指向问题","children":[]},{"level":3,"title":"4、注意事项 3 - instanceof","slug":"_4、注意事项-3-instanceof","link":"#_4、注意事项-3-instanceof","children":[]},{"level":3,"title":"5、注意事项 4","slug":"_5、注意事项-4","link":"#_5、注意事项-4","children":[]},{"level":3,"title":"6、原型链实现继承的不足之一","slug":"_6、原型链实现继承的不足之一","link":"#_6、原型链实现继承的不足之一","children":[]},{"level":3,"title":"7、原型链实现继承的不足之二","slug":"_7、原型链实现继承的不足之二","link":"#_7、原型链实现继承的不足之二","children":[]}]},{"level":2,"title":"三、借用构造函数（经典继承）","slug":"三、借用构造函数-经典继承","link":"#三、借用构造函数-经典继承","children":[{"level":3,"title":"1、借用构造函数的基本思路","slug":"_1、借用构造函数的基本思路","link":"#_1、借用构造函数的基本思路","children":[]},{"level":3,"title":"2、借用构造函数实现继承的不足之处","slug":"_2、借用构造函数实现继承的不足之处","link":"#_2、借用构造函数实现继承的不足之处","children":[]}]},{"level":2,"title":"四、组合继承","slug":"四、组合继承","link":"#四、组合继承","children":[{"level":3,"title":"1、组合继承的基本思路","slug":"_1、组合继承的基本思路","link":"#_1、组合继承的基本思路","children":[]},{"level":3,"title":"2、组合继承的不足之处","slug":"_2、组合继承的不足之处","link":"#_2、组合继承的不足之处","children":[]}]},{"level":2,"title":"五、原型式继承","slug":"五、原型式继承","link":"#五、原型式继承","children":[{"level":3,"title":"1、原型式继承适用场景","slug":"_1、原型式继承适用场景","link":"#_1、原型式继承适用场景","children":[]},{"level":3,"title":"2、Object.create 方法","slug":"_2、object-create-方法","link":"#_2、object-create-方法","children":[]},{"level":3,"title":"2.1、注意事项","slug":"_2-1、注意事项","link":"#_2-1、注意事项","children":[]},{"level":3,"title":"3、手写 Object.create 方法（经典面试题）","slug":"_3、手写-object-create-方法-经典面试题","link":"#_3、手写-object-create-方法-经典面试题","children":[]},{"level":3,"title":"3、原型式继承注意事项","slug":"_3、原型式继承注意事项","link":"#_3、原型式继承注意事项","children":[]}]},{"level":2,"title":"六、寄生式继承","slug":"六、寄生式继承","link":"#六、寄生式继承","children":[]},{"level":2,"title":"七、寄生式组合继承","slug":"七、寄生式组合继承","link":"#七、寄生式组合继承","children":[{"level":3,"title":"1、组合继承不足之处","slug":"_1、组合继承不足之处","link":"#_1、组合继承不足之处","children":[]},{"level":3,"title":"2、寄生式组合的基本思路","slug":"_2、寄生式组合的基本思路","link":"#_2、寄生式组合的基本思路","children":[]},{"level":3,"title":"3、封装函数 - 寄生式组合继承","slug":"_3、封装函数-寄生式组合继承","link":"#_3、封装函数-寄生式组合继承","children":[]}]},{"level":2,"title":"八、JavaScript 6 种继承方式的实现原理、优缺点总结","slug":"八、javascript-6-种继承方式的实现原理、优缺点总结","link":"#八、javascript-6-种继承方式的实现原理、优缺点总结","children":[]},{"level":2,"title":"九、内置构造函数","slug":"九、内置构造函数","link":"#九、内置构造函数","children":[{"level":3,"title":"1、常用构造函数","slug":"_1、常用构造函数","link":"#_1、常用构造函数","children":[]},{"level":3,"title":"2、Object 构造函数","slug":"_2、object-构造函数","link":"#_2、object-构造函数","children":[]},{"level":3,"title":"3、Array 构造函数","slug":"_3、array-构造函数","link":"#_3、array-构造函数","children":[]},{"level":3,"title":"4、Function 构造函数","slug":"_4、function-构造函数","link":"#_4、function-构造函数","children":[]}]},{"level":2,"title":"十、重难点","slug":"十、重难点","link":"#十、重难点","children":[]}],"git":{"createdTime":1705051907000,"updatedTime":1705051907000,"contributors":[{"name":"xunyu","email":"2548126293@qq.com","commits":1}]},"filePathRelative":"blogs/web/javascript/JavaScript 继承的 6 种方式、应用场景，内置构造函数.md"}');export{l as data};
