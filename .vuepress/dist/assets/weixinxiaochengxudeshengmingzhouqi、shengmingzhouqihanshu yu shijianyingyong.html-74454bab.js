import{_ as o,r as e,o as c,c as i,b as n,d as s,e as t,a as p}from"./app-48690364.js";const l={},u=p('<h1 id="微信小程序的生命周期、生命周期函数-与-实践应用" tabindex="-1"><a class="header-anchor" href="#微信小程序的生命周期、生命周期函数-与-实践应用" aria-hidden="true">#</a> 微信小程序的生命周期、生命周期函数 与 实践应用</h1><p>从本节开始学习小程序中，生命周期、生命周期函数（应用级别、页面级别）相关实践</p><ul><li>生命周期 及 生命周期函数、分类</li><li>应用的（全局）生命周期函数</li><li>页面级别的生命周期函数</li></ul><h2 id="一、关于生命周期-及-生命周期函数" tabindex="-1"><a class="header-anchor" href="#一、关于生命周期-及-生命周期函数" aria-hidden="true">#</a> 一、关于生命周期 及 生命周期函数</h2><p>我们知道小程序的页面有三层：配置层、逻辑层、展示层。</p><p>那么，逻辑层就是 JS 文件相关的内容，逻辑层我们又可以分为两层：一个是页面的逻辑（在页面里面），一个是全局的逻辑（在最外面，即 <code>app.js</code> 中）</p><blockquote><p>接下来我们来看逻辑层中的生命周期函数</p></blockquote><h3 id="_1、什么是生命周期" tabindex="-1"><a class="header-anchor" href="#_1、什么是生命周期" aria-hidden="true">#</a> 1、什么是生命周期</h3><p>生命周期（Life Cycle）是指一个对象从 <strong>创建 -&gt; 运行 -&gt; 销毁</strong> 的整个阶段，强调的是一个时间段。</p><ul><li>一个人的出生，表示这个人生命周期的开始</li><li>一个人的离世，表示这个人生命周期的结束</li><li>在世期间的这一生，就是这个人的生命周期</li></ul><p>因此，我们将每个微信小程序的运行过程，概括为生命周期</p><ul><li>微信小程序的启动，表示小程序生命周期的开始</li><li>微信小程序的关闭，表示小程序生命周期的结束</li><li>期间微信小程序运行的过程，就是小程序的生命周期</li></ul>',12),d={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/runtime/operating-mechanism.html",target:"_blank",rel:"noopener noreferrer"},r=p(`<h3 id="_2、生命周期的分类" tabindex="-1"><a class="header-anchor" href="#_2、生命周期的分类" aria-hidden="true">#</a> 2、生命周期的分类</h3><p>在微信小程序中，生命周期分为两类</p><ul><li>①、应用生命周期</li></ul><p>指小程序从 <strong>启动 -&gt; 运行 -&gt; 销毁</strong> 的过程</p><ul><li>②、页面生命周期</li></ul><p>指小程序中，每个页面的 <strong>加载 -&gt; 渲染 -&gt; 销毁</strong> 的过程</p><blockquote><p>其中，应用程序的生命周期范围较大，页面的生命周期范围较小</p></blockquote><p><img src="https://www.arryblog.com/assets/img/image-20230410013732508.56c5a357.png" alt="image-20230410013732508"></p><p>注：</p><p>通过上图可以看到，小程序的应用生命周期中包含了页面生命周期</p><ul><li>小程序 <strong>启动 -&gt; 运行 -&gt; 销毁</strong> 的过程代表了应用的生命周期</li><li>在整个小程序运行中又包含了每个页面的生命周期，在渲染 页面 1 时 会执行 第一个页面的生命周期 ，在运行 页面 2 时 会执行第二个页面的生命周期 ......</li></ul><blockquote><p>因此，我们讲在整个小程序中分为了两类的生命周期，分别为应用生命周期范围较大，另一是 页面生命周期范围较小</p></blockquote><h3 id="_3、什么是生命周期函数" tabindex="-1"><a class="header-anchor" href="#_3、什么是生命周期函数" aria-hidden="true">#</a> 3、什么是生命周期函数</h3><ul><li>生命周期函数：是由小程序框架提供的<strong>内置函数</strong>，会伴随着生命周期，<strong>自动按次序执行</strong></li><li>生命周期函数的作用：允许开发者在<strong>特定的时间点，执行某些特定的操作</strong>。</li></ul><blockquote><p>如：页面一加载时，可在 onLoad 生命周期函数中初始化页面的数据</p></blockquote><p>注：</p><p>生命周期强调的是<strong>时间段</strong>，生命周期函数强调的是<strong>时间点</strong></p><h3 id="_4、生命周期函数的分类" tabindex="-1"><a class="header-anchor" href="#_4、生命周期函数的分类" aria-hidden="true">#</a> 4、生命周期函数的分类</h3><p>小程序中的生命周期函数分为两类</p><ul><li>①、应用的生命周期函数，也叫 “全局级别的生命周期函数”</li></ul><p>指小程序从 启动 -&gt; 运行 -&gt; 销毁 期间<strong>依次调用的那些函数</strong></p><ul><li>②、页面的生命周期函数</li></ul><p>指小程序中，每个页面从 加载 -&gt; 渲染 -&gt; 销毁 期间<strong>依次调用的那些函数</strong></p><p>因此</p><p>我们讲在小程序中生命周期函数分为两大类：</p><ul><li>一类是伴随着小程序的 启动 -&gt; 运行 -&gt; 销毁 来自动执行的 应用的生命周期函数</li><li>一类是伴随着小程序页面的 加载 -&gt; 渲染 -&gt; 销毁 来自动执行的 页面的生命周期函数</li></ul><h2 id="二、应用的-全局-生命周期函数" tabindex="-1"><a class="header-anchor" href="#二、应用的-全局-生命周期函数" aria-hidden="true">#</a> 二、应用的（全局）生命周期函数</h2><p>在小程序中，应用（全局）的生命周期函数需要在 <code>app.js</code> 中进行声明</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）</span>
  <span class="token function-variable function">onLaunch</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序启动，或从后台进入前台显示，会触发 onShow</span>
  <span class="token function-variable function">onShow</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序从前台进入后台，会触发 onHide</span>
  <span class="token function-variable function">onHide</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序发生脚本错误，或者 api 调用失败时，会触发 onError 并带上错误信息</span>
  <span class="token function-variable function">onError</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>app.js</code> 中输入 <code>App</code> 可快捷创建生成应用级别的生命周期函数</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-10-2-26-54.2912ed2d.gif" alt="GIF-2023-4-10-2-26-54"></p>`,31),k=n("code",null,"app.js",-1),v={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html",target:"_blank",rel:"noopener noreferrer"},m=p('<p>注：</p><p>在 JS 中 <code>onLaunch: function(){}</code> 写法 与 <code>onLaunch(){}</code>区别是什么 ？</p><ul><li>在 JS 中，<code>onLaunch: function(){}</code> 和 <code>onLaunch(){}</code> 的写法语法上是等效的。它们都可以用来定义一个函数属性，其中 <code>onLaunch</code> 是属性名，<code>function(){}</code> 或者 <code>{}</code> 代表该属性所对应的值，也就是一个函数。</li><li>不过，在实际开发中，这两种写法的区别可能涉及到一些概念问题。在 ES6 的规范中，允许我们使用类(class)和对象字面量(object literal)的简写语法，从而省略一些代码，使其更加简洁易读。因此，在使用 ES6 的语法时，我们通常会使用 <code>onLaunch(){}</code> 的写法来定义一个函数属性。</li><li>而在早期版本的 ES 规范中，通常需要使用 <code>onLaunch: function(){}</code> 这种完整的写法来定义一个函数属性。但是，随着各大浏览器逐渐支持 ES6 的语法，这种写法已经逐渐不再推荐使用。</li></ul><blockquote><p>因此，总的来说，这两种写法在语法上并没有本质的区别，只是在实际使用中有一些细微的差别。</p></blockquote><h3 id="_1、onlaunch-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_1、onlaunch-生命周期函数" aria-hidden="true">#</a> 1、onLaunch 生命周期函数</h3><p>在 app.js 中</p><ul><li><code>App(Object object)</code> 注册（创建）小程序。接受一个 <code>Object</code> 参数，其指定小程序的生命周期回调等。</li><li><code>App()</code> 必须在 <code>app.js</code> 中调用，必须调用且只能调用一次。不然会出现无法预期的后果。</li><li>onLaunch 生命周期函数：小程序初始化完成时触发，全局只触发一次</li></ul>',7),g={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onLaunch-Object-object",target:"_blank",rel:"noopener noreferrer"},b=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个小程序</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数，指在某一时刻会自动执行的函数</span>
  <span class="token comment">// 在小程序启动的时候（初始化完成时触发），自动执行的函数，全局只触发一次。</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLaunch&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>当删除掉默认小程序 <code>app.js</code> 中的其他内容如上时，调试器的控制台中就会报错，是因为默认的 首页 <code>index.js</code> 和 日志 <code>logs.js</code> 文件中有相关的引用。</p><blockquote><p>此时，只需要去掉相关内容即不会报错了。具体如下</p></blockquote><p><code>index.js</code> 文件内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>logs.js</code> 文件内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// logs.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>删除 <code>index.wxml</code> 中，无关的内容，如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello World !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1、小程序启动时的参数" tabindex="-1"><a class="header-anchor" href="#_1-1、小程序启动时的参数" aria-hidden="true">#</a> 1.1、小程序启动时的参数</h3><p>小程序启动时，<code>onLaunch</code> 声明周期函数，还会接收一个参数 <code>options</code></p><p>在 <code>app.js</code> 中打印输出 <code>options</code> ，可在控制台中查看</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLaunch&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完代码后，保存控制台打印输出如下</p><p><img src="https://www.arryblog.com/assets/img/image-20230202005237420.f9f4122f.png" alt="image-20230202005237420"></p>`,16),h={href:"https://developers.weixin.qq.com/miniprogram/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html",target:"_blank",rel:"noopener noreferrer"},f=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"说明")])],-1),q=n("tr",null,[n("td",{style:{"text-align":"left"}},"path"),n("td",{style:{"text-align":"left"}},"string"),n("td",{style:{"text-align":"left"}},"启动小程序的路径 (代码包路径)")],-1),w=n("td",{style:{"text-align":"left"}},"scene",-1),_=n("td",{style:{"text-align":"left"}},"number",-1),x={style:{"text-align":"left"}},j={href:"https://developers.weixin.qq.com/miniprogram/dev/component/xr-frame/core/scene.html",target:"_blank",rel:"noopener noreferrer"},y=n("tr",null,[n("td",{style:{"text-align":"left"}},"query"),n("td",{style:{"text-align":"left"}},"Object"),n("td",{style:{"text-align":"left"}},"启动小程序的 query 参数")],-1),S=n("td",{style:{"text-align":"left"}},"shareTicket",-1),L=n("td",{style:{"text-align":"left"}},"string",-1),I={style:{"text-align":"left"}},H={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/share.html",target:"_blank",rel:"noopener noreferrer"},P=n("tr",null,[n("td",{style:{"text-align":"left"}},"referrerInfo"),n("td",{style:{"text-align":"left"}},"Object"),n("td",{style:{"text-align":"left"}},[s("来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 "),n("code",null,"{}"),s("。（参见后文注意）")])],-1),G=n("h3",{id:"_1-2、小程序场景值",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-2、小程序场景值","aria-hidden":"true"},"#"),s(" 1.2、小程序场景值")],-1),R=n("p",null,[s("场景值本质：通过什么方式或入口进入小程序，给对应方式设定的"),n("strong",null,"场景值 ID")],-1),D={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/scene-list.html",target:"_blank",rel:"noopener noreferrer"},A=p('<ul><li>在 “微信开发者工具” 的工具栏中进行前后台切换，也可查找场景值</li><li>工具栏中前后台切换帮助开发者模拟一些客户端的环境操作。</li><li>例如当用户从小程序中回到聊天窗口，会触发一个小程序被设置为后台的回调。</li></ul><p><img src="https://www.arryblog.com/assets/img/image-20230202170659253.c66901f5.png" alt="image-20230202170659253"></p><blockquote><p>以上控制台中 <code>scene: 1001</code> 表示从 “发现栏小程序主入口” 进入小程序</p></blockquote><h3 id="_1-3、修改小程序的场景值" tabindex="-1"><a class="header-anchor" href="#_1-3、修改小程序的场景值" aria-hidden="true">#</a> 1.3、修改小程序的场景值</h3><p>在 “微信开发者工具” 的工具栏 &quot;编译&quot; 处 -&gt; 选择 “添加编译模式” -&gt; 输入“模式名称” -&gt; 选择 “进入场景” -&gt; 点击 &quot;确定&quot; 即可</p><p><img src="https://www.arryblog.com/assets/img/image-20230202171828476.a9d9f003.png" alt="image-20230202171828476"></p><p>编译模式添加成功，再次编译后，控制台中打印的场景值即发生了变化</p><p><img src="https://www.arryblog.com/assets/img/image-20230202172634899.396297ee.png" alt="image-20230202172634899"></p><p>总结：</p><p>通过以上学习我们清楚的知道了，<code>onLaunch</code> 这个生命周期函数是启动小程序时执行的，其中的场景值 <code>scene</code>，是指从哪个入口进入小程序的</p><h3 id="_1-4、query-参数" tabindex="-1"><a class="header-anchor" href="#_1-4、query-参数" aria-hidden="true">#</a> 1.4、query 参数</h3><p>启动小程序的 query 请求参数，通过场景我们可以知道不同的用户是通过什么样的场景进入小程序的。</p><p>结合业务场景如：我们需要做小程序的线下推广，有 A 用户，B 用户 ... 都在推广，那么如何区分是谁推广的呢 ？这时就可以使用 query 参数来做区分 。</p><blockquote><p>我们在 工具栏中的 “编译” 中添加 “启动参数”</p></blockquote><p><img src="https://www.arryblog.com/assets/img/image-20230202183320740.62b2df18.png" alt="image-20230202183320740"></p><p>编译模式添加成功，再次编译后，控制台中打印的 query 参数值即发生了变化</p><p><img src="https://www.arryblog.com/assets/img/image-20230202183520998.a37ba3f6.png" alt="image-20230202183520998"></p><p>注：</p><p>在控制台中可以看到，编译后 <code>username: arry</code> 就携带在 query 中了。</p><p>我们在实际的业务逻辑中就可以根据入口的请求带入的 query 值 来判断，到底是 <code>arry</code> 做的推广，还是其他人做的推广，我们就可以做数据统计相关的工作 或 根据不同用户做一些其他的逻辑操作等。</p><p>添加好 query 参数后，点击 “预览” 按钮生成二维码，扫描进入小程序时，它会携带场景值 和 请求参数 <code>query: {username: &quot;arry&quot;}</code> 进来。</p><h3 id="_1-5、onlaunch-注意事项" tabindex="-1"><a class="header-anchor" href="#_1-5、onlaunch-注意事项" aria-hidden="true">#</a> 1.5、onLaunch 注意事项</h3><p>经常遇到的场景：“扫码点餐”、“扫码寄快递” 打开小程序时，操作到一半，突然接到一个电话退出了，然后又重新进入小程序。</p><ul><li>当第一次打开小程序时，会执行 <code>onLaunch</code></li><li>中途接了电话，“退出了”小程序，我们感觉是小程序退出了，实际上小程序依然是运行在微信的内存里的，不会马上释放它的内存。</li><li>当打完电话后，又进入小程序了（很短的时间内）微信不会重新启动小程序，而是直接把内存里的小程序直接拿出来运行就好。</li></ul><blockquote><p>因此，这时小程序只会在第一次进入小程序时执行一次。切记</p></blockquote><ul><li>如果第一次打开小程序，接了个电话，有干别的事情了，几个小时过去了，再次打开小程序，这时 <code>onLaunch</code> 一般就会执行两次了</li><li>因为，微信会看你几个小时过去了，小程序在微信内存中一直没有释放，也没有在使用它，时间长了微信就会把小程序在内存中释放掉了</li><li>如果再次使用小程序，内存中已经没有这个小程序了，它又会重新启动小程序</li></ul><blockquote><p>那么，在这种场景下，onLaunch 就会被执行两次了。</p></blockquote><h3 id="_2、onshow-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_2、onshow-生命周期函数" aria-hidden="true">#</a> 2、onShow 生命周期函数</h3><p><code>onShow</code>生命周期函数：当小程序启动，或从后台进入前台显示时触发（会自动执行的函数）</p><p>在 <code>app.js</code> 中继续添加小程序的 <code>onShow()</code> 生命周期函数</p>',30),O={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html",target:"_blank",rel:"noopener noreferrer"},F=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个小程序</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数，指在某一时刻会自动执行的函数</span>
  <span class="token comment">// 在小程序启动的时候（初始化完成时触发），自动执行的函数，全局只触发一次。</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLaunch&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 当小程序启动，或从后台进入前台显示，会触发 onShow</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台打印输出与 onLaunch 同样返回的参数</p><p><img src="https://www.arryblog.com/assets/img/image-20230203001532129.bbfcbf6f.png" alt="image-20230203001532129"></p><p>当点击工具栏中的 “切后台” （如下图）</p><ul><li>选择任意场景值进入前台时（切前台），会自动调用 <code>onShow</code> 函数，此次不会再调用 <code>onLaunch</code> 函数</li><li>接收返回的参数值 与 <code>onLaunch</code> 相同</li></ul><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-3-0-20-25.fa03e90d.gif" alt="GIF-2023-2-3-0-20-25"></p><h3 id="_3、onhide-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_3、onhide-生命周期函数" aria-hidden="true">#</a> 3、onHide 生命周期函数</h3>`,7),C=n("code",null,"onHide()",-1),N={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html",target:"_blank",rel:"noopener noreferrer"},E=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个小程序</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数，指在某一时刻会自动执行的函数</span>
  <span class="token comment">// 在小程序启动的时候（初始化完成时触发），自动执行的函数，全局只触发一次。</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLaunch&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序启动，或从后台进入前台显示时触发（会自动执行的函数）</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在小程序取消展示（隐藏 或 从前台进入后台）的时候，自动执行的函数</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当小程序 “切后台” 的时候（小程序隐藏时）就会执行 <code>onHide()</code></p><ul><li>意味着小程序已经隐藏了，正在干别的事情（如进入小程序后，在返回到微信复制信息，就会执行 <code>onHide()</code> 函数）</li><li>当再次进入小程序时就会执行 <code>onShow</code> 函数</li><li><code>onShow</code> 和 <code>onHide()</code> 是一个配对的生命周期函数</li></ul><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-4-18-52-31.04cbef0c.gif" alt="GIF-2023-2-4-18-52-31"></p><h3 id="_4、onerror-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_4、onerror-生命周期函数" aria-hidden="true">#</a> 4、onError 生命周期函数</h3>`,5),B=n("code",null,"onError()",-1),M={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html",target:"_blank",rel:"noopener noreferrer"},T=p(`<ul><li>当执行函数时，报错了才会被执行，正常情况下是不会被调用的</li><li>只有当正式编码中，遇到错误时才会展示出 <code>onError()</code> 的效果</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个小程序</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数，指在某一时刻会自动执行的函数</span>
  <span class="token comment">// 在小程序启动的时候（初始化完成时触发），自动执行的函数，全局只触发一次。</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLaunch&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序启动，或从后台进入前台显示时触发（会自动执行的函数）</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在小程序取消展示（隐藏 或 从前台进入后台）的时候，自动执行的函数</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序发生脚本错误或 API 调用报错时，自动执行的函数</span>
  <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onError&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、在-app-中自定义函数" tabindex="-1"><a class="header-anchor" href="#_5、在-app-中自定义函数" aria-hidden="true">#</a> 5、在 App() 中自定义函数</h3><p>我们可以在 <code>app.js</code> 全局逻辑的 <code>App()</code> 中也可以自定义函数</p><blockquote><p>自定义函数可在任意一个生命周期函数中调用</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个小程序</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数，指在某一时刻会自动执行的函数</span>
  <span class="token comment">// 在小程序启动的时候（初始化完成时触发），自动执行的函数，全局只触发一次。</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLaunch&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 调用自定义函数</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">icodingSay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序启动，或从后台进入前台显示时触发（会自动执行的函数）</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在小程序取消展示（隐藏 或 从前台进入后台）的时候，自动执行的函数</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当小程序发生脚本错误或 API 调用报错时，自动执行的函数</span>
  <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onError&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 自定义全局通用函数</span>
  <span class="token function">icodingSay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;艾编程的使命：为每个互联网人提供高质量的终身学习平台&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在生命周期函数 <code>onLaunch</code> 中调用自定义函数 <code>icodingSay()</code> 执行结果如下</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-7-23-52-04.f7814b77.gif" alt="GIF-2023-2-7-23-52-04"></p><h3 id="_6、在页面逻辑中调用-app-js-中的函数-或-数据" tabindex="-1"><a class="header-anchor" href="#_6、在页面逻辑中调用-app-js-中的函数-或-数据" aria-hidden="true">#</a> 6、在页面逻辑中调用 app.js 中的函数 或 数据</h3><p><code>app.js</code> 中放的是和整个应用相关的逻辑，也就是应用层面的逻辑。理论上应用层面逻辑有几个部分组成：</p><ul><li>应用级别的生命周期函数</li><li>应用级别通用的函数 或 数据</li></ul><p>如果我们已经意识到了在 <code>app.js</code> 中放到的自定义的函数或数据是整个小程序中都能用到的一些通用的函数或数据。</p><p>那么在具体页面的逻辑中如 <code>index.js</code> 、<code>logs.js</code> ... 等是有办法获取到 <code>app.js</code> 这个全局 JS 文件里的 自定义函数。</p><blockquote><p>在 <code>app.js</code> 中定义数据</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个小程序</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数，指在某一时刻会自动执行的函数</span>
  <span class="token comment">// 在小程序启动的时候（初始化完成时触发），自动执行的函数，全局只触发一次。</span>
  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLaunch&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 调用自定义函数</span>
    <span class="token comment">// this.icodingSay()</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在小程序重新展示的时候，会自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在小程序取消展示的时候，自动执行的函数</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当脚本执行错误时，自动执行的函数</span>
  <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onError&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 自定义全局通用函数</span>
  <span class="token function">icodingSay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;艾编程的使命：为每个互联网人提供高质量的终身学习平台&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 自定义全局数据</span>
  <span class="token literal-property property">globalData</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面逻辑 <code>index.js</code> 中调用通用的函数 或 数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// getApp() 是系统自带的方法，通过该方法可以拿到 app.js 中的各种方法和数据</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数，当页面加载时触发（后面还会讲到）</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 打印输出 app.js 中自定义全局通用函数 和 数据</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">icodingSay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">,</span> <span class="token string">&quot;index onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-8-0-20-11.8011b7ce.gif" alt="GIF-2023-2-8-0-20-11"></p><p>总结</p><p>我们可以在页面级别的逻辑中（如 <code>index.js</code>）中通过 <code>getApp()</code> 的方式去得到 <code>app.js</code> 全局逻辑中的各种函数或数据。我们再次验证了 <code>app.js</code> 中写的就是全局的生命周期函数（即小程序级别的生命周期函数、通用的函数 和 数据）</p><p>通过以上的学习，我们就能理解 <code>app.js</code> 在小程序开发中的全局性的作用，以及在页面级别的逻辑中如何使用这些全局的逻辑。</p><h2 id="三、页面级别的生命周期函数" tabindex="-1"><a class="header-anchor" href="#三、页面级别的生命周期函数" aria-hidden="true">#</a> 三、页面级别的生命周期函数</h2><p>前面我们学习了在 <code>app.js</code> 中小程序应用级别（全局）整体的生命周期函数。</p><p>即：在<code>app.js</code> 中通过 <code>App()</code> 创建一个小程序，在小程序上可以有 <code>onLaunch()</code> 、<code>onShow()</code> 、<code>onHide()</code> 、<code>onError()</code> ... 等 生命周期函数</p><p>我们在学习页面级别的生命周期函数时，为了互不影响 ！我们先把 <code>app.js</code> 中定义相关函数全部去掉。如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个小程序</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>小程序页面生命周期函数需要在页面的 <code>.js</code> 文件中进行声明</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 生命周期函数--监听页面初次渲染完成</span>
  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 生命周期函数--监听页面显示</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 生命周期函数--监听页面隐藏</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 生命周期函数--监听页面卸载</span>
  <span class="token function">onUnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面相关事件处理函数--监听用户下拉动作</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面上拉触底事件的处理函数</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 用户点击右上角分享</span>
  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1、页面逻辑中-page-函数" tabindex="-1"><a class="header-anchor" href="#_1、页面逻辑中-page-函数" aria-hidden="true">#</a> 1、页面逻辑中 Page() 函数</h3><p>在页面逻辑如 <code>index.js</code> 中 <code>Page()</code> 注册小程序中的一个页面。接受一个 <code>Object</code> 类型参数，其指定页面的初始数据、生命周期回调、事件处理函数等。</p><ul><li>生命周期函数指：在某个时刻会自动执行的函数。</li><li>页面级别的生命周期函数指：在页面运行的某个时刻会自动执行的函数</li></ul>`,33),z={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html",target:"_blank",rel:"noopener noreferrer"},J=n("h3",{id:"_2、onload-生命周期函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2、onload-生命周期函数","aria-hidden":"true"},"#"),s(" 2、onLoad 生命周期函数")],-1),V={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onLoad-Object-query",target:"_blank",rel:"noopener noreferrer"},U=p(`<blockquote><p>在 <code>index.js</code> 页面逻辑中演示</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一次启动（加载）小程序的时候，<code>onLoad</code> 生命周期函数会自动执行，当再次切换其他页面时就不会被再次执行</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-0-06-52.731fdb41.gif" alt="GIF-2023-2-9-0-06-52"></p><h3 id="_3、onshow-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_3、onshow-生命周期函数" aria-hidden="true">#</a> 3、onShow 生命周期函数</h3>`,5),W={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShow",target:"_blank",rel:"noopener noreferrer"},K=p(`<ul><li>全局逻辑中的<code>onShow</code>生命周期函数：在小程序重新展示的时候，会自动执行的函数</li><li>页面级别的<code>onShow</code>生命周期函数：页面每次被展示 或 切入前台的时候自动执行的函数</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被展示 或 切入前台的时候自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当页面（如下为首页）被展示 或 切入前台的时候 <code>onShow</code> 生命周期函数会被自动执行</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-15-15-50.43866d9b.gif" alt="GIF-2023-2-9-15-15-50"></p><h3 id="_4、onhide-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_4、onhide-生命周期函数" aria-hidden="true">#</a> 4、onHide 生命周期函数</h3>`,5),Q=n("code",null,"onShow",-1),X={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onHide",target:"_blank",rel:"noopener noreferrer"},Y=p(`<ul><li>小程序级别（全局）的 <code>onHide</code> 生命周期函数：在小程序取消展示的时候，自动执行的函数</li><li>页面级别的 <code>onHide</code> 生命周期函数：页面每次被取消展示（页面隐藏/切入后台）的时候自动执行的函数</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被展示 或 切入前台的时候自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被取消展示（页面隐藏/切入后台）的时候自动执行</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当页面每次被取消展示（页面隐藏/切入后台）的时候自动执行</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-15-44-27.595e9188.gif" alt="GIF-2023-2-9-15-44-27"></p><h3 id="_5、onready-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_5、onready-生命周期函数" aria-hidden="true">#</a> 5、onReady 生命周期函数</h3>`,5),Z={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onReady",target:"_blank",rel:"noopener noreferrer"},$=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被展示 或 切入前台的时候自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被取消展示的时候自动执行</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面被加载到内存里的时候 或 页面第一次启动的时候</span>
  <span class="token comment">// 并且，页面被渲染完成之后会自动执行。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</span>
  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReady&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首次加载页面时，onLoad 先执行（先加载），onShow 再执行（再展示），onReady 最后执行（页面被渲染完成后执行）</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-16-33-20.42870c09.gif" alt="GIF-2023-2-9-16-33-20"></p><h3 id="_6、onpulldownrefresh-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_6、onpulldownrefresh-生命周期函数" aria-hidden="true">#</a> 6、onPullDownRefresh 生命周期函数</h3>`,4),nn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onPullDownRefresh",target:"_blank",rel:"noopener noreferrer"},sn=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被展示 或 切入前台的时候自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被取消展示的时候自动执行</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面被加载到内存里的时候 或 页面第一次启动的时候</span>
  <span class="token comment">// 并且，页面被渲染完成之后会自动执行。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</span>
  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReady&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 每次下拉刷新的时候执行</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onPullDownRefresh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p>`,2),an=n("code",null,"app.json",-1),tn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#window",target:"_blank",rel:"noopener noreferrer"},pn=n("code",null,"window",-1),on={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html",target:"_blank",rel:"noopener noreferrer"},en=n("code",null,"enablePullDownRefresh",-1),cn=n("code",null,"index.json",-1),ln=n("code",null,"enablePullDownRefresh",-1),un=p(`<blockquote><p>在 <code>index.json</code> 配置文件中添加 <code>&quot;enablePullDownRefresh&quot;: true</code> 开启支持下拉刷新</p></blockquote><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;navigationBarBackgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#ffffff&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;navigationBarTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;微信接口功能演示&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;backgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#eeeeee&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;backgroundTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;enablePullDownRefresh&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当每次下拉刷新首页时，就会自动执行 onPullDownRefresh 生命周期函数</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-16-43-42.f730ffff.gif" alt="GIF-2023-2-9-16-43-42"></p><h3 id="_7、onreachbottom-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_7、onreachbottom-生命周期函数" aria-hidden="true">#</a> 7、onReachBottom 生命周期函数</h3>`,5),dn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onReachBottom",target:"_blank",rel:"noopener noreferrer"},rn=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被展示 或 切入前台的时候自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被取消展示的时候自动执行</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面被加载到内存里的时候 或 页面第一次启动的时候</span>
  <span class="token comment">// 并且，页面被渲染完成之后会自动执行。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</span>
  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReady&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 每次下拉刷新的时候执行</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onPullDownRefresh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面滚动到最底部时会自动执行的函数</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReachBottom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了演示出效果，需要在 <code>index.wxml</code> 文件中添加更多的内容</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>Hello ICODING !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当页面滚动到最底部时，会自动执行该函数</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-16-56-51.49139827.gif" alt="GIF-2023-2-9-16-56-51"></p><h3 id="_8、onshareappmessage-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_8、onshareappmessage-生命周期函数" aria-hidden="true">#</a> 8、onShareAppMessage 生命周期函数</h3>`,6),kn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShareAppMessage-Object-object",target:"_blank",rel:"noopener noreferrer"},vn=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被展示 或 切入前台的时候自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被取消展示的时候自动执行</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面被加载到内存里的时候 或 页面第一次启动的时候</span>
  <span class="token comment">// 并且，页面被渲染完成之后会自动执行。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</span>
  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReady&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 每次下拉刷新的时候执行</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onPullDownRefresh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面到最底部时会自动执行</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReachBottom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 用户点击页面内转发按钮 或 右上角菜单“转发”按钮的行为时，会自动执行的函数</span>
  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShareAppMessage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token comment">// 转发标题</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;share&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 转发路径</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选择小程序右上角菜单，点击 “发送给朋友” 按钮时会执行 <code>onShareAppMessage</code> 函数</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-17-18-36.c7041124.gif" alt="GIF-2023-2-9-17-18-36"></p><h3 id="_9、onpagescroll-生命周期函数" tabindex="-1"><a class="header-anchor" href="#_9、onpagescroll-生命周期函数" aria-hidden="true">#</a> 9、onPageScroll 生命周期函数</h3>`,4),mn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onPageScroll-Object-object",target:"_blank",rel:"noopener noreferrer"},gn=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面级别的生命周期函数：在页面运行的某个时刻会自动执行的函数</span>
  <span class="token comment">// onLoad() 是页面被加载到内存里的时候 或 页面第一次启动的时候执行</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onLoad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被展示 或 切入前台的时候自动执行的函数</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面每次被取消展示的时候自动执行</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onHide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面被加载到内存里的时候 或 页面第一次启动的时候</span>
  <span class="token comment">// 并且，页面被渲染完成之后会自动执行。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</span>
  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReady&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 每次下拉刷新的时候执行</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onPullDownRefresh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面到最底部时会自动执行</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onReachBottom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 用户点击页面内转发按钮 或 右上角菜单“转发”按钮的行为时，会自动执行的函数</span>
  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onShareAppMessage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;share&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 当页面滚动时自动执行的函数</span>
  <span class="token function">onPageScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onPageScroll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当页面滚动时会自动执行 onPageScroll 函数</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-2-9-17-28-10.6436a9e9.gif" alt="GIF-2023-2-9-17-28-10"></p><p>总结：</p><p>我们从文档上可以看到还有其他的生命周期函数，目前我们带领大家先学习了项目中常用的生命周期函数，目前就够用了 ！</p>`,5),bn={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html",target:"_blank",rel:"noopener noreferrer"};function hn(fn,qn){const a=e("ExternalLinkIcon");return c(),i("div",null,[u,n("blockquote",null,[n("p",null,[s("详细查阅 "),n("a",d,[s("小程序官方文档 - 小程序运行机制(opens new window)"),t(a)])])]),r,n("blockquote",null,[n("p",null,[s("关于 "),k,s(" 中相关应用的生命周期函数，详情查阅 "),n("a",v,[s("小程序官方文档 - App(Object object)(opens new window)"),t(a)])])]),m,n("blockquote",null,[n("p",null,[s("详细，点击查阅 "),n("a",g,[s("小程序官方文档 - onLaunch(Object object)(opens new window)"),t(a)])])]),b,n("blockquote",null,[n("p",null,[s("观察以上调试器控制台中，"),n("a",h,[s("小程序启动时的参数 (opens new window)"),t(a)]),s("，解读如下")])]),n("table",null,[f,n("tbody",null,[q,n("tr",null,[w,_,n("td",x,[s("启动小程序的"),n("a",j,[s("场景值(opens new window)"),t(a)])])]),y,n("tr",null,[S,L,n("td",I,[s("shareTicket，详见"),n("a",H,[s("获取更多转发信息(opens new window)"),t(a)])])]),P])]),G,R,n("blockquote",null,[n("p",null,[s("点击查看，"),n("a",D,[s("详细的 scene 场景值列表 及 详细说明和获取方式(opens new window)"),t(a)])])]),A,n("blockquote",null,[n("p",null,[s("小程序启动，或从后台进入前台显示时触发，监听 “小程序启动或切前台”。"),n("a",O,[s("详细查阅官方文档(opens new window)"),t(a)])])]),F,n("p",null,[C,s(" 在小程序取消展示（隐藏 或 从前台进入后台）的时候，自动执行的函数。"),n("a",N,[s("详细查看官方文档(opens new window)"),t(a)])]),E,n("p",null,[B,s(" 当小程序发生脚本错误或 API 调用报错时（错误监听），自动执行的函数。"),n("a",M,[s("详细查看官方文档(opens new window)"),t(a)])]),T,n("blockquote",null,[n("p",null,[s("详细查看"),n("a",z,[s("小程序官方文档(opens new window)"),t(a)])])]),J,n("p",null,[n("a",V,[s("onLoad (opens new window)"),t(a)]),s("是页面被加载到内存里的时候 或 页面第一次启动的时候会自动执行的函数")]),U,n("p",null,[s("页面级别的 "),n("a",W,[s("onShow (opens new window)"),t(a)]),s("生命周期函数 与 全局逻辑中的 onShow 生命周期函数不一样。")]),K,n("p",null,[s("与 "),Q,s(" 对应的还有 "),n("a",X,[s("onHide (opens new window)"),t(a)]),s("生命周期")]),Y,n("p",null,[n("a",Z,[s("onReady (opens new window)"),t(a)]),s("生命周期函数：页面被加载到内存里的时候 或 页面第一次启动的时候。并且，页面别渲染完成之后会自动执行。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。")]),$,n("p",null,[n("a",nn,[s("onPullDownRefresh (opens new window)"),t(a)]),s("生命周期函数：每次下拉刷新的时候自动执行的函数")]),sn,n("p",null,[s("需要在"),an,s("的"),n("a",tn,[pn,s(" (opens new window)"),t(a)]),s("选项中或"),n("a",on,[s("页面配置 (opens new window)"),t(a)]),s("中开启"),en,s(" 全局所有小程序页面都支持下拉刷新。或 就在当前页面如 "),cn,s(" 中开启 "),ln]),un,n("p",null,[n("a",dn,[s("onReachBottom (opens new window)"),t(a)]),s("生命周期函数：页面滚动到最底部时会自动执行的函数")]),rn,n("p",null,[n("a",kn,[s("onShareAppMessage (opens new window)"),t(a)]),s("生命周期函数：用户点击页面内转发按钮 或 右上角菜单“转发”按钮的行为时，会自动执行的函数。")]),vn,n("p",null,[n("a",mn,[s("onPageScroll (opens new window)"),t(a)]),s("生命周期函数：当页面滚动时自动执行的函数")]),gn,n("blockquote",null,[n("p",null,[s("如果开发中还需要用到其他的函数，直接查询 "),n("a",bn,[s("小程序的官方文档 (opens new window)"),t(a)]),s("即可。方法同理 ！")])])])}const _n=o(l,[["render",hn],["__file","weixinxiaochengxudeshengmingzhouqi、shengmingzhouqihanshu yu shijianyingyong.html.vue"]]);export{_n as default};
