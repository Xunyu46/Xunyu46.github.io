import{_ as p,r as o,o as c,c as i,a as n,b as s,e as t,d as e}from"./app-7ac1ad86.js";const l={},u=e(`<h1 id="小程序节流防抖-骨架屏功能、用户体验优化与实践" tabindex="-1"><a class="header-anchor" href="#小程序节流防抖-骨架屏功能、用户体验优化与实践" aria-hidden="true">#</a> 小程序节流防抖，骨架屏功能、用户体验优化与实践</h1><p>TIP</p><p>从本节内容开始，我们对微信小程序做基础的性能优化和用户体验优化，使用我们之前学习过的节流防抖函数，骨架屏功能与实践。状态展示自定义组件封装，内容标签页吸顶效果与兼容性配置等。</p><ul><li>节流防抖函数在小程序中的应用</li><li>优化加载提示 - 骨架屏功能实现</li><li>状态展示自定义组件封装</li><li>吸顶效果 与 兼容性配置</li></ul><h2 id="一、节流防抖函数在小程序中的应用" tabindex="-1"><a class="header-anchor" href="#一、节流防抖函数在小程序中的应用" aria-hidden="true">#</a> 一、节流防抖函数在小程序中的应用</h2><p>TIP</p><p>针对上一节内容提到的频繁触发问题，我们会想到前面学过的节流和防抖函数，这也是前端项目开发和面试过程中的高频和必考题，大家一定要重视起来，经常复习和应用。</p><h3 id="_1、节流-和-防抖区别" tabindex="-1"><a class="header-anchor" href="#_1、节流-和-防抖区别" aria-hidden="true">#</a> 1、节流 和 防抖区别</h3><p>TIP</p><p><strong>防抖和节流的作用：</strong></p><p>都是在高频事件中防止函数被多次调用，是一种性能优化的方案。</p><p><strong>防抖和节流的相同点：</strong></p><ul><li>都可通通过使用 setTimeout 来实现</li><li>都是降低真正的事件处理函数的执行频率，达到节省计算资 源，减少性能的消耗</li></ul><p><strong>防抖和节流的不同点：</strong></p><ul><li>节流：不管事件触发有多频繁，都会保证在规定时间内执行一次真正的事件处理函数</li><li>防抖：只有在间隔时间达到规定时间后才会执行一次真正的事件处理函数，如果在规定时间内再次触发事件，则会重新计时。</li></ul><p><strong>节流应用场景：</strong></p><ul><li>当一个事件触发的时间特别短频繁时，就会频繁的触发事件处理函数，我们需要通过节流函数来限止执行的频率。</li><li>如：在小程序频繁的滑动，点击，搜索联想 等 ....</li></ul><p><strong>防抖应用场景：</strong></p><ul><li>当用户需要连续执行一个操作，只有停下来或完成后才需要返回结果时，就需要使用防抖函数</li><li>如：表单输入、验证、提交，文本框输入查询，如果用户一直在输入中，没有必要不停地调用去请求服务端接口，等用户停止输入的时候，再调用，设置一个合适的时间间隔，有效减轻服务端压力。</li></ul><h3 id="_2、使用节流函数来解决频繁触发调用问题" tabindex="-1"><a class="header-anchor" href="#_2、使用节流函数来解决频繁触发调用问题" aria-hidden="true">#</a> 2、使用节流函数来解决频繁触发调用问题</h3><p>TIP</p><p>在我们调用的函数外包裹一层节流函数，做一些过滤控制。</p><p>比如我们频繁触发调用了 100 次，1000 次 我们要做到在某给时间内只会被执行一次，这就是我们最终要实现的效果。</p><p>在项目根目录 <code>utils</code> 中新建 <code>utils.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 节流函数
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">callback</span> 需要被节流的函数
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">duration</span> 距离上次执行超过多少毫秒才会执行被节流的函数
 * <span class="token keyword">@desc</span> 涉及知识点：闭包，this指向
 */</span>
<span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> duration <span class="token operator">=</span> <span class="token number">500</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 最后执行函数时的时间戳</span>
  <span class="token keyword">let</span> lastTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment">// 闭包</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取当前时间戳</span>
    <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 判断当前时间距离上一次执行函数的时间是否超过了duration设定的毫秒数</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> lastTime <span class="token operator">&gt;=</span> duration<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 超过了</span>
      <span class="token comment">// 调用被节流的方法实现</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// callback(...arguments)</span>
      <span class="token comment">// 更新最后执行函数时的时间戳</span>
      lastTime <span class="token operator">=</span> now<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 没超过，啥也不干</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> throttle <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、点击分类选项时节流" tabindex="-1"><a class="header-anchor" href="#_3、点击分类选项时节流" aria-hidden="true">#</a> 3、点击分类选项时节流</h3><p>在 <code>pages/index/index.js</code> 页面逻辑，课程分类选项方法中应用节流函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>

<span class="token comment">// 导入节流函数</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> throttle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../utils/utils&quot;</span><span class="token punctuation">;</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 改造函数声明方式，添加节流函数</span>
  <span class="token literal-property property">handleCategoryChange</span><span class="token operator">:</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>categoryId <span class="token operator">===</span> id<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>categoryId <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getCourseList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>应用节流函数后，频繁点击课程分类选项时，在控制台 network 中查看请求频率，明显降低。</p><h3 id="_4、切换-tab-标签页时节流" tabindex="-1"><a class="header-anchor" href="#_4、切换-tab-标签页时节流" aria-hidden="true">#</a> 4、切换 tab 标签页时节流</h3><p>TIP</p><p>由于点击的 tab 切换这个部分是一个自定义组件，因此需要在自定义组件中来使用节流函数</p><p>在<code>components/tabs/tabs.js</code>在定义组件 <code>handleTabChange()</code> 点击事件处理函数中应用节流函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/tabs/tabs.js</span>

<span class="token comment">// 导入节流函数</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> throttle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../utils/utils&quot;</span><span class="token punctuation">;</span>

<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 点击 tab 切换，添加节流函数</span>
    <span class="token literal-property property">handleTabChange</span><span class="token operator">:</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>index<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>currentTabIndex<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> index<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>应用节流函数后，频繁点击或滑动 tab 选项时，在控制台 network 中查看请求频率，明显降低</p><h2 id="二、优化加载提示-骨架屏功能实现" tabindex="-1"><a class="header-anchor" href="#二、优化加载提示-骨架屏功能实现" aria-hidden="true">#</a> 二、优化加载提示 - 骨架屏功能实现</h2><p>TIP</p><p>本节我们开始继续优化提升项目列表页的优化交互效果，通过前面的学习和实践已经完成了数据的联动加载和必备的性能优化。</p><p>但我们知道数据的加载是有时间的，它会受到服务器和带宽等的影响。有时候我们列表页面数据加载是很慢的，这时候就会出现一个白屏的现象。</p><blockquote><p>解决方案如下</p></blockquote>`,42),r=n("li",null,"做延时加载，如：只对图片部分做延时加载",-1),d={href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/skeleton.html",target:"_blank",rel:"noopener noreferrer"},v=e(`<blockquote><p>以下截图是微博 APP 端 -&gt; 发现页面，在网速慢或断网的情况下的骨架屏效果</p></blockquote><p><img src="https://www.arryblog.com/assets/img/20280429162920.a95e97af.jpg" alt="20280429162920"></p><h3 id="_1、微信开发者工具-模拟不同网络环境" tabindex="-1"><a class="header-anchor" href="#_1、微信开发者工具-模拟不同网络环境" aria-hidden="true">#</a> 1、微信开发者工具 - 模拟不同网络环境</h3><p>TIP</p><p>在微信开发工具中可以手动调整网络环境，2G、3G、4G、WiFi、Offline（离线、断网环境） 当切换至 Offline 时演示效果最佳。</p><p><img src="https://www.arryblog.com/assets/img/image-20230429171301403.a905db0b.png" alt="image-20230429171301403"></p><p>将网络环境切换至 - Offline 时，页面就会出现白屏的情况，体验非常的不好 ！</p><p><img src="https://www.arryblog.com/assets/img/image-20230429171635904.62b21d2b.png" alt="image-20230429171635904"></p><h3 id="_2、使用-wx-showloading-实现正在加载" tabindex="-1"><a class="header-anchor" href="#_2、使用-wx-showloading-实现正在加载" aria-hidden="true">#</a> 2、使用 wx.showLoading 实现正在加载</h3><p>在 <code>pages/index/index.js</code> 页面逻辑的生命周期函数中添加 loading 提示</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 显示 loading 提示框，需主动调用 wx.hideLoading 才能关闭提示框</span>
    wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;加载中 ...&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 初始化课程列表的数据</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getCourseList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 初始化课程分类 swiper 数据</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下</p><p><img src="https://www.arryblog.com/assets/img/image-20230429172349915.646a43c5.png" alt="image-20230429172349915"></p><p>注：</p>`,14),m={href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/skeleton.html",target:"_blank",rel:"noopener noreferrer"},g=e('<h3 id="_3、骨架屏的使用" tabindex="-1"><a class="header-anchor" href="#_3、骨架屏的使用" aria-hidden="true">#</a> 3、骨架屏的使用</h3><p>TIP</p><p>微信开发者工具可以为<strong>当前正在预览的页面</strong>生成骨架屏代码，微信开发者工具入口位于模拟器面板右下角三点处。</p><p><img src="https://www.arryblog.com/assets/img/image-20230429175706715.9f96d3a0.png" alt="image-20230429175706715"></p><p>点击生成骨架屏，将有弹窗提示是否允许插入骨架屏代码。</p><p>确定后将在当前页面同级目录下生成 <code>index.skeleton.wxml</code> 和 <code>index.skeleton.wxss</code> 两个文件，分别为骨架屏代码的模板和样式。</p><p><img src="https://www.arryblog.com/assets/img/image-20230429180515308.2d00aad5.png" alt="image-20230429180515308"></p><h3 id="_3-1、在页面中引入骨架屏模板和样式" tabindex="-1"><a class="header-anchor" href="#_3-1、在页面中引入骨架屏模板和样式" aria-hidden="true">#</a> 3.1、在页面中引入骨架屏模板和样式</h3><p>TIP</p>',9),b={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/template.html",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"pages/index/index",-1),w=e(`<blockquote><p>这些代码可在<code>index.skeleton.wxml</code> 模板文件中找到</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>

<span class="token comment">&lt;!-- 在页面顶部引入骨架屏 wxml 模板 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index.skeleton.wxml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>skeleton<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{loading}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注： <code>wx:if</code> 用来控制骨架屏模板的显示隐藏，需要在页面逻辑中定义 <code>loading</code> 字段</p></blockquote><p>在页面样式文件 <code>pages/index/index.wxss</code> 顶部引入骨架屏模板样式文件</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/** pages/index/index.wxss **/</span>

<span class="token comment">/* 在页面样式文件顶部，引入骨架屏模板样式文件 */</span>
<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;./index.skeleton.wxss&quot;</span><span class="token punctuation">;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2、显示与隐藏" tabindex="-1"><a class="header-anchor" href="#_3-2、显示与隐藏" aria-hidden="true">#</a> 3.2、显示与隐藏</h3><p>TIP</p><p>与普通的模板相同，通过 <code>wx:if</code> 控制显示隐藏</p><ul><li>在页面逻辑 <code>pages/index/index.js</code> 中定义显示与隐藏字段 <code>loading</code> 用于控制骨架屏的显示与隐藏。</li><li><code>loading</code> 的默认值为 <code>true</code>（显示），在初始化页面数据结束后，重新赋值为 <code>false</code>（隐藏）即可</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 省略部分 ...</span>

    <span class="token comment">// 控制骨架屏模板显示隐藏，默认显示</span>
    <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 初始化课程列表的数据</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getCourseList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 初始化课程分类 swiper 数据</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 在初始化页面数据结束后，将 loading 字段重新赋值为 false（更新完成后，发现在离线（Offline）的网络环境情况下骨架屏效果并没有出来）</span>
    <span class="token comment">// 由于上面的两次请求是异步的，为了保证异步结果返回后，再更新 loading 数据为 false</span>
    <span class="token comment">// 需要添加 async / await 关键字 保证是按顺序执行（就像同步代码一样）</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在网络离线模式下，效果如下</p><p><img src="https://www.arryblog.com/assets/img/image-20230429192621663.74064e2f.png" alt="image-20230429192621663"></p><p>注：</p><p>我们可以看到骨架屏效果已经出来了，但页面的 swiper 位置无法正常显示显示出来。</p><p>根据骨架屏的显示原理，它是根据页面可见区域的显示效果，决定骨架屏最终的生成效果。</p><p>因此，我们可以使用一个折中的办法，将页面结构 swiper 部分的代码先删除掉，再重新写一个占位元素，再重新生成骨架屏代码。待生成结束后，再将原来的代码还原回来即可。</p><blockquote><p>其他组件没有类似的问题，放心大胆在企业项目中使用即可。</p></blockquote><h3 id="_4、骨架屏-bug-优化" tabindex="-1"><a class="header-anchor" href="#_4、骨架屏-bug-优化" aria-hidden="true">#</a> 4、骨架屏 Bug 优化</h3><p>TIP</p><p>优化 swiper 部分放入插槽后，生成骨架屏无法正常显示的问题</p><p>在 <code>pages/index/index.wxml</code> 页面结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>

<span class="token comment">&lt;!-- 在页面顶部引入骨架屏 wxml 模板 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index.skeleton.wxml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>skeleton<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{loading}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 使用 tabs 自定义组件 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-tabs</span> <span class="token attr-name">tabs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleChange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>extend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- category start --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 增加一个 image 占位符标签 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 97%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 150rpx<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>

        <span class="token comment">&lt;!-- 将 swiper 组件先删除 或 注释掉 --&gt;</span>

        <span class="token comment">&lt;!-- &lt;swiper 
                    class=&quot;category-swiper&quot;
                    display-multiple-items=&quot;2&quot;
                    next-margin=&quot;80rpx&quot;
                    snap-to-edge=&quot;true&quot;
                    &gt;
                    &lt;swiper-item 
                        class=&quot;category-swiper-item&quot; 
                        wx:for=&quot;{{ categoryList }}&quot; 
                        wx:key=&quot;id&quot;
                        &gt;
                    &lt;view class=&quot;category-name&quot; bind:tap=&quot;handleCategoryChange&quot; data-id=&quot;{{ item.id }}&quot;&gt; 
                            {{ item.name }}
                        &lt;/view&gt;
                    &lt;/swiper-item&gt;
                &lt;/swiper&gt; --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- end category --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ courseList }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-course-preview</span> <span class="token attr-name">course</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ item }}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-tabs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在微信开发者工具模拟器面板右下角三点处，点击重新生成骨架屏模板，将原来生成的文件覆盖掉即可</p><p><img src="https://www.arryblog.com/assets/img/image-20230429194932566.2d752c8b.png" alt="image-20230429194932566"></p><p>替换后，重新在离线（Offline）的网络环境下测试，效果如下</p><p><img src="https://www.arryblog.com/assets/img/image-20230429195248649.5295f346.png" alt="image-20230429195248649"></p><p>注：</p><p>骨架屏效果完成后，即可将 <code>pages/index/index.wxml</code> 页面结构中占位符代码删除，恢复原样即可</p><h3 id="_5、骨架屏的定制化" tabindex="-1"><a class="header-anchor" href="#_5、骨架屏的定制化" aria-hidden="true">#</a> 5、骨架屏的定制化</h3><p>TIP</p><ul><li>可在 <code>project.config.json</code> 增加字段 <code>skeletonConfig</code> 进行骨架屏相关配置，页面配置会覆盖掉全局配置。</li><li>开发者可根据需要设置文字、图片、按钮的颜色和形状，同时可根据 <code>excludes</code>、<code>remove</code>、<code>hide</code>等忽视或隐藏部分页面元素，以获取更优的展示效果。</li><li>同时，还可以通过自定义属性的方式，修改特定样式或结构等</li></ul>`,31),q={href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/skeleton.html",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,"一般情况下，使用我们上面所讲到的生成骨架屏的方式即可 ！这个部分作为了解就好。",-1),y=e(`<h3 id="_6、骨架屏的应用场景" tabindex="-1"><a class="header-anchor" href="#_6、骨架屏的应用场景" aria-hidden="true">#</a> 6、骨架屏的应用场景</h3><p>TIP</p><ul><li>骨架屏通常用于商品列表、新闻列表等页面，对于动画/原生组件较多的页面展示效果不佳</li><li>该能力除用于展示首屏骨架外，也可作为局部加载的 <code>loading</code> 样式，可灵活使用</li></ul><h3 id="_7、使用骨架屏的注意事项" tabindex="-1"><a class="header-anchor" href="#_7、使用骨架屏的注意事项" aria-hidden="true">#</a> 7、使用骨架屏的注意事项</h3><p>TIP</p><ul><li>①、骨架屏仅包括页面首屏中的可见区域，对于横向滚动的 <code>swiper</code> 等容器，超出屏幕的子元素将被忽略；</li><li>②、骨架屏的布局复用开发者的页面布局，需要骨架屏自适应页面尺寸时，页面布局应采用 rpx 等自适应方案；</li><li>③、部分组件如 <code>movable-view</code>、<code>movable-area</code>、<code>rich-text</code>、<code>editor</code>、<code>picker</code>、<code>picker-view</code>、<code>picker-view-column</code>、<code>ad</code>、<code>officail-account</code>和<code>open-data</code> 无法生成理想的骨架效果，可通过添加一个父容器，结合 grayBlock、empty 等配置，将其置灰。</li><li>④、请勿修改自动生成的骨架屏的代码，当效果不理想时，建议调整相关配置，这样当页面变更时，仍可自动生成；</li><li>⑤、生成的骨架屏代码中会包含预览时的页面数据，将被用来填充页面；</li><li>⑥、如果我们业务需求发生变更了，页面结构修改了，只需要重新生成一次骨架屏代码，覆盖即可</li></ul><h2 id="三、状态展示自定义组件封装" tabindex="-1"><a class="header-anchor" href="#三、状态展示自定义组件封装" aria-hidden="true">#</a> 三、状态展示自定义组件封装</h2><p>TIP</p><ul><li>状态展示：当页面中没有数据时，显示的组件内容。在移动端 或 APP 开发中常见的功能</li><li>实现原理：当我们请求接口数据时，如果后端返回的是空数据，我们就会展示一段提示文本（如：暂无课程数据 ...）</li><li>具体代码实现思路：通过小程序提供的逻辑渲染功能 <code>wx:if</code> 通过传递一个变量来控制显隐，<code>wx:else</code> 当不存在数据时，显示一段文本。</li></ul><p>但，在项目中有好几处这样数据列表加载，如果我们每个页面都这样在加载到空数据时写这样一段判断，就会有很多的重复实现。</p><p>根据前面学过的 《自定义组件封装的原则》可知，我们这里是需要通过自定义组件的方式解决。封装一个状态展示的自定义组件，后续在所有需要的地方，我们直接通过一个组件就能展示。</p><h3 id="_1、创建状态展示自定义组件" tabindex="-1"><a class="header-anchor" href="#_1、创建状态展示自定义组件" aria-hidden="true">#</a> 1、创建状态展示自定义组件</h3><p>在 <code>components</code> 目录中创建 <code>show-status</code> 状态展示自定义组件</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>icoding-com-course
├─ components
│ ├─ show-status
│ │ ├─ show-status.js
│ │ ├─ show-status.json
│ │ ├─ show-status.wxml
│ │ └─ show-status.wxss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>components/show-status/show-status.wxml</code> 中定义组件的结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--components/show-status/show-status.wxml--&gt;</span>
<span class="token comment">&lt;!-- 
    show 控制显隐 
    top 距顶部的距离
    content 组件内部文本内容
--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ show }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token selector">margin-top:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> top <span class="token punctuation">}</span><span class="token punctuation">}</span>rpx<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
  {{ content }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>components/show-status/show-status.js</code> 中接收组件传值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/show-status/show-status.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 组件的属性列表</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 组件的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>components/show-status/show-status.wxss</code> 定义样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* components/show-status/show-status.wxss */</span>
<span class="token comment">/* 该样式是为了后续扩展时使用 */</span>
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、在页面中使用状态展示自定义组件" tabindex="-1"><a class="header-anchor" href="#_2、在页面中使用状态展示自定义组件" aria-hidden="true">#</a> 2、在页面中使用状态展示自定义组件</h3><p>状态展示组件在很多页面中都会用到，因此在 <code>app.json</code> 全局配置文件中引入状态展示自定义组件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;window&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tabBar&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v2&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sitemapLocation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sitemap.json&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;i-show-status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/components/show-status/show-status&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>pages/index/index.wxml</code>中使用状态展示组件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-tabs</span> <span class="token attr-name">tabs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleChange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>extend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 省略部分 ... --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 标签页面板区域 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ courseList }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-course-preview</span> <span class="token attr-name">course</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ item }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-course-preview</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- 使用状态展示自定义组件 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-show-status</span>
        <span class="token attr-name">show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ courseList.length &lt; 1 }}<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>暂时还么有任何课程信息 ...<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">top</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-show-status</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-tabs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、测试状态展示自定义组件" tabindex="-1"><a class="header-anchor" href="#_3、测试状态展示自定义组件" aria-hidden="true">#</a> 3、测试状态展示自定义组件</h3><p>在 <code>pages/index/index.js</code> 页面逻辑中，页面数据初始化的方法中数据置为空 <code>[]</code> 数组</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 初始化课程列表</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getCourseList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 获取课程列表</span>
  <span class="token keyword">async</span> <span class="token function">_getCourseList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 省略部分 ...</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 赋值为空数组 []</span>
      <span class="token literal-property property">courseList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现效果</p><p><img src="https://www.arryblog.com/assets/img/image-20230505150516113.d61944be.png" alt="image-20230505150516113"></p><p>注：</p><p>状态展示组件在我们很多项目中都会看到，可以很好的提升用户体验，也是非常实用的组件。重点掌握自定义组件在实际工程中的应用于实践。</p><h2 id="四、吸顶效果-与-兼容性配置" tabindex="-1"><a class="header-anchor" href="#四、吸顶效果-与-兼容性配置" aria-hidden="true">#</a> 四、吸顶效果 与 兼容性配置</h2><p>TIP</p><p>实现内容标签页的吸顶效果，iOS 端的兼容性配置，提升用户体验。</p><h3 id="_1、内容标签页吸顶效果" tabindex="-1"><a class="header-anchor" href="#_1、内容标签页吸顶效果" aria-hidden="true">#</a> 1、内容标签页吸顶效果</h3><p>在<code>components/tabs/tabs.wxss</code> tabs 自定义组件中添加样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* components/tabs/tabs.wxss */</span>
<span class="token selector">.tabs</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20rpx 0<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token comment">/* 
        粘性定位，由于定位机制的原因，往下滑动过第一页后，吸附效果就会消失 
        由于它是根据父元素的高度来决定的，height: 100%; 默认就第一屏可视区
        父元素高度修改为：最小高度 min-height: 100%; 即可
    */</span>
  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下：往下滑动过第一页后，吸附效果就会消失</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-5-5-15-48-53.48a26b20.gif" alt="GIF-2023-5-5-15-48-53"></p><p>注：</p><p>粘性定位，由于定位机制的原因，往下滑动过第一页后，吸附效果就会消失。由于它是根据父元素的高度来决定的，<code>height: 100%;</code>默认就第一屏可视区。</p><blockquote><p>将父元素高度修改为：最小高度 <code>min-height: 100%;</code> 即可</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* components/tabs/tabs.wxss */</span>
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token comment">/* height: 100%; 修改为最小高度 min-height: 100%; */</span>
  <span class="token property">min-height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改后的效果</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-5-5-15-47-21.1fb72074.gif" alt="GIF-2023-5-5-15-47-21"></p><h3 id="_2、优化-ios-端橡皮筋效果" tabindex="-1"><a class="header-anchor" href="#_2、优化-ios-端橡皮筋效果" aria-hidden="true">#</a> 2、优化 IOS 端橡皮筋效果</h3><p>TIP</p><p>在苹果手机上不停的上拉触底（不开启也会出现）、下拉刷新（没有开启下拉刷新的页面），会拉出一块白色的区域，这是苹果手机独有的看起来很奇怪。</p>`,49),f=n("code",null,"app.json",-1),_={href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui/background/wx.setBackgroundColor.html#%E5%8F%82%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},j=e(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;window&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;backgroundTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;navigationBarBackgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#fff&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;艾编程&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;navigationBarTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;backgroundColorBottom&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#F5F5F5&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>需要在苹果手机上演示才能看到效果 ！</p><h3 id="_3、优化导航栏背景色和字体颜色" tabindex="-1"><a class="header-anchor" href="#_3、优化导航栏背景色和字体颜色" aria-hidden="true">#</a> 3、优化导航栏背景色和字体颜色</h3><p>在<code>pages/index/index.json</code> 中</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;navigationBarBackgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#96e6a1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;navigationBarTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;white&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>优化后，效果如下</p><p><img src="https://www.arryblog.com/assets/img/image-20230505171121615.af02d8e7.png" alt="image-20230505171121615"></p>`,8);function T(I,P){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("ul",null,[r,n("li",null,[s("使用微信小程序 API 提供的 "),n("a",d,[s("wx.showLoading(Object object)(opens new window)"),t(a)])]),n("li",null,[s("使用各大厂主流的移动端解决方案骨架屏，"),n("a",k,[s("开发辅助 - 骨架屏(opens new window)"),t(a)])])]),v,n("p",null,[s("虽然这种方式也能实现，但体验并不是最好的。各大厂主流的移动端解决方案是使用骨架屏的方式，"),n("a",m,[s("开发辅助 - 骨架屏(opens new window)"),t(a)])]),g,n("p",null,[s("骨架屏代码通过小程序模板（"),n("a",b,[s("template (opens new window)"),t(a)]),s("）的方式引入 以 "),h,s(" 页面为例，引入方式如下。")]),w,n("blockquote",null,[n("p",null,[s("详细查阅，"),n("a",q,[s("微信小程序官方文档 - 生成配置、自定义属性模块(opens new window)"),t(a)])]),x]),y,n("blockquote",null,[n("p",null,[s("只需要在 "),f,s(" 中增加配置项 "),n("a",_,[s("backgroundColorBottom (opens new window)"),t(a)]),s("颜色值与当前页面的背景色同色即可")])]),j])}const L=p(l,[["render",T],["__file","xiaochengxujieliufangdou，gujiapinggongnen、yonghutiyanyouhuayushijian.html.vue"]]);export{L as default};
