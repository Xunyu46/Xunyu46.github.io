import{_ as e,r as o,o as c,c as l,b as s,d as n,e as t,a as p}from"./app-e6acbbcc.js";const i={},u=p(`<h1 id="微信小程序自定义组件封装-项目最佳实践综合应用" tabindex="-1"><a class="header-anchor" href="#微信小程序自定义组件封装-项目最佳实践综合应用" aria-hidden="true">#</a> 微信小程序自定义组件封装，项目最佳实践综合应用</h1><p>从本节开始对微信小程序的自定义组件封装进行实践应用，以项目中最常用的内容标签 tab 页面为例，从 V1.0 版迭代升级至 V2.0，不断重构、结合 WXS 完成项目中的最佳实践</p><ul><li>内容标签 tab 页面 V1.0 版</li><li>分类筛选功能</li><li>内容标签页 V2.0 版 - 自定义组件化，定义、插槽、通信</li><li>手指滑动监听切换标签</li><li>自定义组件封装 - 最佳实践总结</li></ul><h2 id="一、内容标签-tab-页面-v1-0-版" tabindex="-1"><a class="header-anchor" href="#一、内容标签-tab-页面-v1-0-版" aria-hidden="true">#</a> 一、内容标签 tab 页面 V1.0 版</h2><p>综合前面学过的 WXML、WXSS、JS 等综合应用，实现内容标签页效果 V1.0 版</p><p><img src="https://www.arryblog.com/assets/img/image-20230421091053785.20bb8e62.png" alt="image-20230421091053785"></p><h3 id="_1、内容标签页-ui-结构渲染" tabindex="-1"><a class="header-anchor" href="#_1、内容标签页-ui-结构渲染" aria-hidden="true">#</a> 1、内容标签页 UI 结构渲染</h3><p>在 <code>pages/index/index.wxml</code> 结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tabs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 分割线，通过逻辑控制，判断是否显示 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 分类 swiper <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 标签页面板区域 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>pages/index/index.js</code> 页面逻辑中，定义 <code>tabs</code> 数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tabs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;全部课程&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;正在学&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;基础入门&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;架构&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、设定全局样式" tabindex="-1"><a class="header-anchor" href="#_2、设定全局样式" aria-hidden="true">#</a> 2、设定全局样式</h3><p>在 <code>app.css</code> 中定义全局样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/**app.wxss**/</span>

<span class="token comment">/* 去掉组件的默认值，在微信小程序中不支持 * 通配符的 */</span>
<span class="token selector">page,
view,
text,
swiper,
swiper-item,
image,
navigator</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 主题颜色，默认字体大小，高度 */</span>
<span class="token selector">page</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 定义主题色 */</span>
  <span class="token property">--themeColor</span><span class="token punctuation">:</span> #7bd802<span class="token punctuation">;</span>
  <span class="token comment">/* 默认字体大小 */</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 26rpx<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、定义-tabs-的样式" tabindex="-1"><a class="header-anchor" href="#_3、定义-tabs-的样式" aria-hidden="true">#</a> 3、定义 tabs 的样式</h3><p>在 <code>pages/index/index.wxss</code> 中定义样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* pages/index/index.wxss */</span>
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token comment">/* background-color: skyblue; */</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.tabs</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 30rpx 0<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.tab-item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.divider</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 4rpx<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--themeColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> 10rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、实现标签栏的切换效果" tabindex="-1"><a class="header-anchor" href="#_4、实现标签栏的切换效果" aria-hidden="true">#</a> 4、实现标签栏的切换效果</h3><p>我们之前在学习小程序的列表渲染时，除了给我们注入了 <code>item</code> 变量之外， 同时还注入了一个 <code>index</code> ，指当前元素在数组中的下标位置。有了这个 <code>index</code> 后，实现思路是：</p><ul><li>在 data 中定义一个变量 <code>currentTabIndex</code> ，该变量记录了当前所点击/已经点击的下标 与 <code>index</code> 做对比</li><li>如 <code>currentTabIndex === index</code> 即当前点击了该元素</li></ul><p>在 <code>pages/index/index.js</code> 页面逻辑中，定义 <code>currentTabIndex</code> 变量</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tabs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;全部课程&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;正在学&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;基础入门&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;架构&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>pages/index/index.wxml</code> 页面结构中，根据 tab 切换标签，改变样式 和 分割线</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tabs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 根据选中状态，添加样式 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-label {{ currentTabIndex === index ? &#39;active-tab&#39; : &#39;&#39; }}<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span>
      <span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 分割线，通过逻辑控制，判断是否显示 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ currentTabIndex === index }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 分类 swiper <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 标签页面板区域 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>pages/index/index.wxss</code> 中添加 ，选中状态的样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 未选中样式 */</span>
<span class="token selector">.tab-label</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 未选中时，默认颜色 */</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span>
  <span class="token comment">/* 文本区域不换行 */</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 选中样式 */</span>
<span class="token selector">.active-tab</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、添加点击事件处理函数" tabindex="-1"><a class="header-anchor" href="#_5、添加点击事件处理函数" aria-hidden="true">#</a> 5、添加点击事件处理函数</h3><p>实现点击 tab 选项，动态切换效果。实现步骤如下</p><ul><li>给 tab 选项添加点击/触摸事件 <code>bindtap=&quot;handleTabChange&quot;</code> ，同时传递当前点击的 tab 选项的索引 <code>data-index=&quot;&quot;</code></li><li>在页面的 JS 逻辑中添加 tab 切换的事件处理函数，完成切换逻辑实现</li></ul><p>在 <code>pages/index/index.wxml</code> 页面结构，给 tab 选项绑定事件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tabs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-item<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTabChange<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ index }}<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 根据选中状态，添加样式 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-label {{ currentTabIndex === index ? &#39;active-tab&#39; : &#39;&#39; }}<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span>
      <span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 分割线，通过逻辑控制，判断是否显示 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ currentTabIndex === index }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 分类 swiper <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 标签页面板区域 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>pages/index/index.js</code> 页面逻辑中，添加事件处理函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tabs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;全部课程&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;正在学&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;基础入门&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;架构&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 点击 tab 切换事件处理函数</span>
  <span class="token function">handleTabChange</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取当前点击 tab 选项的 index</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>index<span class="token punctuation">;</span>
    <span class="token comment">// 更新 data 中 currentTabIndex 值</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> index<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、分类筛选功能" tabindex="-1"><a class="header-anchor" href="#二、分类筛选功能" aria-hidden="true">#</a> 二、分类筛选功能</h2><p>使用原生 swiper 组件实现分类滑动、点击分类筛选过滤信息的功能</p><p><img src="https://www.arryblog.com/assets/img/image-20230421092121818.786df2fe.png" alt="image-20230421092121818"></p><h3 id="_1、定义类型分类的-mock-数据" tabindex="-1"><a class="header-anchor" href="#_1、定义类型分类的-mock-数据" aria-hidden="true">#</a> 1、定义类型分类的 Mock 数据</h3><p>在 <code>pages/index/index.js</code> 的 data 中新增 <code>categoryList</code> 数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 省略其他 ......</span>

    <span class="token comment">// // 分类数据</span>
    <span class="token literal-property property">categoryList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Web 前端&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Java 架构&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Python 实战&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Node 后端&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;GO 语言&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;云原生&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、分类-swiper-的-ui-结构渲染" tabindex="-1"><a class="header-anchor" href="#_2、分类-swiper-的-ui-结构渲染" aria-hidden="true">#</a> 2、分类 swiper 的 UI 结构渲染</h3><p>在 <code>pages/index/index.wxml</code> 中定义 swiper 分类功能的 UI 结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 省略其他 ...... --&gt;</span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 分类 swiper --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swiper</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category-swiper<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">display-multiple-items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">next-margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80rpx<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">snap-to-edge</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swiper-item</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category-swiper-item<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ categoryList }}<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleCategoryChange<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ item.id }}<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swiper-item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swiper</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 标签页面板区域 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、定义分类功能的样式" tabindex="-1"><a class="header-anchor" href="#_3、定义分类功能的样式" aria-hidden="true">#</a> 3、定义分类功能的样式</h3><p>在 <code>pages/index/index.wxss</code> 中定义样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 省略其他 ...... */</span>

<span class="token comment">/* swiper */</span>
<span class="token selector">.category</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10rpx 0 30rpx 30rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.category-swiper</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 150rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.category-name</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20rpx 0 0 20rpx<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 28rpx<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #96e6a1<span class="token punctuation">,</span> #d4fc79<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">right</span><span class="token punctuation">:</span> 30rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、点击分类选项的事件处理函数" tabindex="-1"><a class="header-anchor" href="#_4、点击分类选项的事件处理函数" aria-hidden="true">#</a> 4、点击分类选项的事件处理函数</h3><p>在 <code>pages/index/index.js</code> 页面逻辑中定义分类事件处理函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 分类数据</span>
    <span class="token literal-property property">categoryList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Web 前端&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Java 架构&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Python 实战&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Node 后端&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;GO 语言&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;云原生&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 点击 swiper-item 的事件处理函数</span>
  <span class="token function">handleCategoryChange</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取当前点击分类选项的 id</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>根据以上的代码实现逻辑，我们接下来就可以开始来实现分类列表数据的渲染和展示，以及其他功能的实现了。但，这个时候我们突然发现，在代码层面的实现上有很大问题。</p><blockquote><p>接下来我们就开始应用一个完整的解决方案来实现。</p></blockquote><h2 id="三、内容标签页-v2-0-版-自定义组件化-定义、插槽、通信" tabindex="-1"><a class="header-anchor" href="#三、内容标签页-v2-0-版-自定义组件化-定义、插槽、通信" aria-hidden="true">#</a> 三、内容标签页 V2.0 版 - 自定义组件化，定义、插槽、通信</h2><p>在我们前面的小节中实现了，内容标签 tab 页面 V1.0 版 和 分类筛选的功能。在我们准备继续完成后面功能实现时，发现了我们前面代码实现中出现了问题。</p><blockquote><p>如下</p></blockquote><h3 id="_1、潜在的重复实现" tabindex="-1"><a class="header-anchor" href="#_1、潜在的重复实现" aria-hidden="true">#</a> 1、潜在的重复实现</h3><blockquote><p>可通过观察 UI 效果图 或 产品原型图等看到</p></blockquote><p>我们发现内容标签需要在很多页面都会使用到，意味着我们之前写的 tab 标签的功能代码需要复制粘贴很多次。这样做的问题非常大</p><ul><li>如果内容标签 tab 部分的功能，需要调整、新增、Bug 修复等 就需要同时修改其他用到的部分，一旦功能复杂又用的多了就是个灾难。</li><li>很难保证每一次的修改都能准确无误的同步应用到了其他使用 tab 功能的位置</li><li>手动复制的方式效率也非常的底下，也没有必要</li></ul><blockquote><p>有没有好的解决办法呢 ？ 答案是有的</p></blockquote><p>将高频使用的功能模块，做封装。在其他地方使用，只需要调用封装后的结果即可。在这个基础上，当该功能模块有什么改动、新增、Bug 修复等不会影响到已经使用到的地方</p><h3 id="_2、在小程序中的解决方案实现" tabindex="-1"><a class="header-anchor" href="#_2、在小程序中的解决方案实现" aria-hidden="true">#</a> 2、在小程序中的解决方案实现</h3><ul><li>使用 自定义组件，完成潜在重复实现的功能模块</li><li>重构内容标签页，自定义 tabs 组件</li><li>完成自定义组件的最佳实践要点总结，什么时候用，怎么用</li></ul><h3 id="_3、自定义组件的难点" tabindex="-1"><a class="header-anchor" href="#_3、自定义组件的难点" aria-hidden="true">#</a> 3、自定义组件的难点</h3><p>通过前面的章节我们以及学习有关自定义组件的核心基础，发现其实也并不难嘛。但会用和用得好还是两码事的，自定义组件本身的难点在于以下两点</p><blockquote><p>通常我们在项目中使用自定义组件时，主要解决两个功能上的问题，第一个就是通用组件和业务组件</p></blockquote><h3 id="_3-1、通用组件-与-业务组件的设计" tabindex="-1"><a class="header-anchor" href="#_3-1、通用组件-与-业务组件的设计" aria-hidden="true">#</a> 3.1、通用组件 与 业务组件的设计</h3><ul><li>通用组件：组件本身不和具体业务挂钩。如：button 按钮 和 icon 图标，小程序是有原生提供了这种组件的，但原生的功能很单一、同时定制化能力也很差，通常会自己来封装。</li></ul><blockquote><p>我们封装好这些组件后，就可以在使用时实现个性化的需求，通过配置来实现，不需要改动任何样式。原生实现就会比较麻烦，需要改动很多样式。</p></blockquote><ul><li>业务组件：对具体某个业务功能做了封装。最大的目的在于模块化页面，让页面变得更加容易维护，同时实现一定程度的复用性</li></ul><blockquote><p>这两者，在具体实现时所考虑的东西是不一样的也有很多讲究，这才是难点。</p></blockquote><h3 id="_3-2、自定义组件的设计思想" tabindex="-1"><a class="header-anchor" href="#_3-2、自定义组件的设计思想" aria-hidden="true">#</a> 3.2、自定义组件的设计思想</h3><p>微信小程序在早期是没有自定义组件这个功能的，这也是小程序进化史上很有里程碑意义的功能。通过自定义组件我们可以更加从容的应对复杂项目，为什么这么说呢 ？</p><p>如果我们有接触过面向对象（OOP）的概念就能明白，面向对象的三大特性</p><ul><li>封装</li><li>继承</li><li>多态</li></ul><blockquote><p>等我们重构完内容标签 tab 组件后，再来总结</p></blockquote><h3 id="_4、重构内容标签页-自定义组件-tabs" tabindex="-1"><a class="header-anchor" href="#_4、重构内容标签页-自定义组件-tabs" aria-hidden="true">#</a> 4、重构内容标签页 - 自定义组件 tabs</h3><p>利用自定义组件机制，封装 tabs 组件，实现内容标签页效果的 V2.0</p><p><strong>先思考一个问题</strong></p><p>tabs 组件属于通用组件 还是 业务组件呢 ？</p><p>这是一个很重要的问题，通常我们在做自定义组件开发时，第一个要明确的是这个组件是属于 通用组件 还是 业务组件 ！这个定位会影响我们后续的实现思路以及方法。可以先思考下</p><h3 id="_4-1、自定义组件-tabs-的实现思路" tabindex="-1"><a class="header-anchor" href="#_4-1、自定义组件-tabs-的实现思路" aria-hidden="true">#</a> 4.1、自定义组件 tabs 的实现思路</h3><ul><li>①、传入一个数组，按数组元素内容渲染我们的标签页选项（它是组件的输入）</li><li>②、能够监听点击事件，并且通知使用组件的页面 或 父组件（是由于自定义组件中还可以嵌套使用自定义组件的）通过事件通知我们选择了什么（它是组件的输出）</li></ul><blockquote><p>从以上两点功能可以看出，当前的这个 tabs 自定义组件是通用组件 还是 业务组件呢 ？</p></blockquote><p>很明显，它是一个 <strong>通用组件</strong></p><p><strong>原因是：</strong> 这个自定义组件所做的事情，都是跟自身有关的，它只是做了一个标签页的渲染，同时它能展示出点击的效果，并且告诉调用的地方你选择了什么 。至于你选择做什么事情是由使用自定义组件的页面 或 父组件决定的</p><blockquote><p>也就是说，这个自定义 tabs 组件它本身是没有业务功能的。因此，它是属于通用组件。</p></blockquote><h3 id="_4-2、创建自定义组件-tabs" tabindex="-1"><a class="header-anchor" href="#_4-2、创建自定义组件-tabs" aria-hidden="true">#</a> 4.2、创建自定义组件 tabs</h3><p>在项目的根目录中，新建文件夹 <code>components -&gt; tabs</code>，在 tabs 文件夹上 鼠标右键 选择 <code>新建 Component</code> ，输入 <code>tabs</code> 回车后即会自动生成对应的 4 个文件</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>icoding-com-course
├─ components
│ ├─ tabs
│ │ ├─ tabs.js
│ │ ├─ tabs.json
│ │ ├─ tabs.wxml
│ │ └─ tabs.wxss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面配置文件 <code>pages/index/index.json</code> 中引入 <code>tabs</code> 组件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;i-tabs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;../../components/tabs/tabs&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面 <code>pages/index/index.wxml</code> 中使用组件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token comment">&lt;!-- 使用 tabs 自定义组件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-tabs</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-tabs</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3、定义自定义组件-tabs-的-ui-结构和样式" tabindex="-1"><a class="header-anchor" href="#_4-3、定义自定义组件-tabs-的-ui-结构和样式" aria-hidden="true">#</a> 4.3、定义自定义组件 tabs 的 UI 结构和样式</h3><p>将原来内容标签 tab 页面 V1.0 版中的 tab 页面相关结构 和 样式，剪切到对应的 tabs 自定义组件的 <code>wxml</code> 和 <code>wxss</code> 中</p><p>剪切 tab 内容标签的页面结构过来后，在 <code>components/tabs/tabs.wxml</code> 中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--components/tabs/tabs.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tabs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-item<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTabChange<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ index }}<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 根据选中状态，添加样式 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-label {{ currentTabIndex === index ? &#39;active-tab&#39; : &#39;&#39; }}<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span>
      <span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 分割线，通过逻辑控制，判断是否显示 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ currentTabIndex === index }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>剪切 tab 内容标签的 CSS 样式过来后，在 <code>components/tabs/tabs.wxss</code> 中</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* components/tabs/tabs.wxss */</span>
<span class="token selector">.tabs</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 30rpx 0<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.tab-item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.divider</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 4rpx<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 50rpx<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--themeColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> 10rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.tab-label</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 未选中时，默认颜色 */</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span>
  <span class="token comment">/* 文本区域不换行 */</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.active-tab</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>当我们将 tab 内容标签部分的 结构和样式剪切过来后，是无法直接成功遍历数据的。当我们封装为自定义组件后，就需要将对应的数据传入组件中，才能生效（即：自定义组件渲染什么内容由调用方决定）。</p><blockquote><p>在自定义组件中接收外界属性，我们会在 <code>properties</code> 节点中先声明，如果是内部使用的数据属性放在 <code>data</code> 节点中</p></blockquote><h3 id="_4-4、在页面中使用组件时-属性绑定传值" tabindex="-1"><a class="header-anchor" href="#_4-4、在页面中使用组件时-属性绑定传值" aria-hidden="true">#</a> 4.4、在页面中使用组件时，属性绑定传值</h3><p>通过页面/父组件 向 子组件传值，通过属性绑定（即：属性绑定用于实现<strong>父向子传值</strong>）</p><p>在页面 <code>pages/index/index.wxml</code> 中，使用 tabs 自定义组件时通过属性绑定传值</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 使用 tabs 自定义组件，从页面中传入 tabs 数组 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-tabs</span> <span class="token attr-name">tabs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-tabs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5、重构自定义组件-tabs-逻辑" tabindex="-1"><a class="header-anchor" href="#_4-5、重构自定义组件-tabs-逻辑" aria-hidden="true">#</a> 4.5、重构自定义组件 tabs 逻辑</h3><ul><li>接收由页面或父组件中传递过来的属性，在<code>properties</code> 节点中定义</li><li>点击 tab 选项的当前索引 <code>currentTabIndex</code> 只是组件内部使用，在<code>data</code>节点中定义</li><li>将页面逻辑<code>index.js</code> 中的 tab 切换事件处理函数 <code>handleTabChange</code> 剪切过来，放到 <code>methods</code> 节点中</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/tabs/tabs.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 组件的属性列表（由页面或父组件中传递过来的属性）</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tabs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 组件的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 点击 tab 切换事件处理函数</span>
    <span class="token function">handleTabChange</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 获取当前点击 tab 选项的 index</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>index<span class="token punctuation">;</span>
      <span class="token comment">// 更新 data 中 currentTabIndex 值</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> index<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>以上代码重构后，即可实现通过自定义组件的方式，在页面中引入使用。</p><p>但，当我们点击自定义组件 tab 标签切换时，需要操作页面/父组件中的 <code>tab-panel</code> 区域同步切换，就需要将 当前索引 <code>index</code> 传递给 页面/父组件。</p><blockquote><p>我们知道，事件绑定用于<strong>子组件向父组件</strong>传递数据</p></blockquote><h3 id="_5、通过事件绑定向页面-父组件传值" tabindex="-1"><a class="header-anchor" href="#_5、通过事件绑定向页面-父组件传值" aria-hidden="true">#</a> 5、通过事件绑定向页面/父组件传值</h3><p>当点击 tab 标签切换时，发起一个自定义事件</p><p>在自定义组件<code>components/tabs/tabs.js</code> 逻辑中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/tabs/tabs.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 省略其他 ......</span>

  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 点击 tab 切换事件处理函数</span>
    <span class="token function">handleTabChange</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 获取当前点击 tab 选项的 index</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>index<span class="token punctuation">;</span>
      <span class="token comment">// 更新 data 中 currentTabIndex 值</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> index<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 触发自定义事件 change ，并携带当前索引值 index</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面（父组件）<code>pages/index/index.wxml</code> 中监听绑定事件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 绑定自定义事件 change  --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-tabs</span> <span class="token attr-name">tabs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleChange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-tabs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面（父组件）<code>pages/index/index.js</code> 逻辑中，定义自定义事件处理函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index/index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 自定义事件</span>
  <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取子组件向页面（父组件）传递的值</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>index<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结：</p><ul><li>父组件（页面）<strong>通过属性</strong>给自定义组件传递参数</li><li>自定义组件<strong>通过自定义事件</strong>给父组件（页面）传递参数</li></ul><h3 id="_6、重构内容标签页-自定义组件插槽" tabindex="-1"><a class="header-anchor" href="#_6、重构内容标签页-自定义组件插槽" aria-hidden="true">#</a> 6、重构内容标签页 - 自定义组件插槽</h3><p>由于标签页里边的内容和样式都是不确定的，是由自定义组件的调用方来决定。这时就会用到插槽 <code>&lt;slot&gt;</code></p><p>根据需求在 <code>components/tabs/tabs.wxml</code> 中定义多插槽</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--components/tabs/tabs.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tabs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 省略部分 ...... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- 定义一个用于扩展的插槽 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>extend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- 标签页面板区域 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 对于内容、样式不确定内容，定义 slot 占位，具体的内容由组件的调用者决定 --&gt;</span>
    <span class="token comment">&lt;!-- 标签页面板区域 插槽 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>components/tabs/tabs.js</code> 中开启多插槽支持</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/tabs/tabs.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 新增 options 节点</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 开启多插槽支持</span>
    <span class="token literal-property property">multipleSlots</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 省略部分 ......</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面<code>pages/index/index.wxml</code>中使用插槽</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 使用 tabs 自定义组件，从页面中传入 tabs 数组 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-tabs</span> <span class="token attr-name">tabs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleChange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 使用扩展插槽 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>extend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 分类 swiper --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swiper</span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category-swiper<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">display-multiple-items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">next-margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80rpx<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">snap-to-edge</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swiper-item</span>
            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category-swiper-item<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ categoryList }}<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleCategoryChange<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ item.id }}<span class="token punctuation">&quot;</span></span>
          <span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>category-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swiper-item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swiper</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 使用标签页面板区域插槽 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>标签页面板区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-tabs</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- &lt;view class=&quot;tab-panel&quot;&gt;
        标签页面板区域
    &lt;/view&gt; --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下</p><p><img src="https://www.arryblog.com/assets/img/image-20230421002721024.472e98c8.png" alt="image-20230421002721024"></p><h2 id="四、手指滑动监听切换标签" tabindex="-1"><a class="header-anchor" href="#四、手指滑动监听切换标签" aria-hidden="true">#</a> 四、手指滑动监听切换标签</h2><p>前面的小节学习中，通过插槽的机制进一步提高了 tabs 组件的通用性，但在功能上还有一个缺陷，不支持手指滑动来切换页面标签。</p><blockquote><p>这个在移动端是不能接受的，接下我们就来完善该功能</p></blockquote><h3 id="_1、常规实现思路分析" tabindex="-1"><a class="header-anchor" href="#_1、常规实现思路分析" aria-hidden="true">#</a> 1、常规实现思路分析</h3><p>我们需要用到微信小程序中的 WXS 来实现手指滑动监听切换标签，我先来看下如果使用我们之前学过的内容 + 查阅官方文档，该如何来实现呢 ？</p><p><img src="https://www.arryblog.com/assets/img/image-20230421082930736.89535e8f.png" alt="image-20230421082930736"></p><p>通常情况下，我们会想到以下的实现思路</p><ul><li>在 WXML 中（视图层）-&gt; 做滑动事件监听 -&gt; 等待用户触发滑动事件 -&gt;</li><li>如用户触发了滑动事件 -&gt; 调用我们定义的事件处理函数 -&gt; 在事件处理函数中会处理业务逻辑 -&gt; 这个部分就是我们的 JS 文件中要做的事情（逻辑层）-&gt;</li><li>在逻辑层最终实现数据绑定（setData）-&gt; 最后在视图层实现标签页的切换效果</li></ul><p>这个思路可以实现我们想要的功能，并且在绝大多数的场景下，我们都是使用这样的思路来实现的。</p><blockquote><p>但，在我们<strong>这个场景</strong>下这个思路就有问题了。注意，这里说的场景不合适，不是思路有问题。</p></blockquote><h3 id="_1-1、在标签页-panel-区域绑定事件监听" tabindex="-1"><a class="header-anchor" href="#_1-1、在标签页-panel-区域绑定事件监听" aria-hidden="true">#</a> 1.1、在标签页 panel 区域绑定事件监听</h3>`,144),r={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html",target:"_blank",rel:"noopener noreferrer"},d=p(`<ul><li>touchstart 手指触摸动作开始</li><li>touchend 手指触摸动作结束</li></ul><p>同时监听这两个事件，当我们手指划动后，计算终点 距离 起点的坐标值的变化，判断是往左划了，还是往右划了。因此需要同时监听这两个事件。</p><p>当我们在页面触发 touchstart 和 touchend 这两个事件后，就会接收到一个参数，其中就会描述我们当前点击位置的坐标值。即拿到值就可以计算了</p><p>在 tabs 自定义组件 <code>components/tabs/tabs.wxml</code> 页面结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--components/tabs/tabs.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tabs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-item<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ tabs }}<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTabChange<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ index }}<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-label {{ currentTabIndex === index ? &#39;active-tab&#39; : &#39;&#39; }}<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span>
      <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ currentTabIndex === index }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>extend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- 绑定两个事件监听 touchstart 和 touchend --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-panel<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">bind:</span>touchstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTouchStart<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">bind:</span>touchend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTouchEnd<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2、实现事件处理函数-及-步骤" tabindex="-1"><a class="header-anchor" href="#_1-2、实现事件处理函数-及-步骤" aria-hidden="true">#</a> 1.2、实现事件处理函数 及 步骤</h3><p>在 tabs 自定义组件 <code>components/tabs/tabs.js</code> 中实现两个事件处理函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/tabs/tabs.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 省略部分 .......</span>

  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 省略部分 ......</span>

    <span class="token comment">// 以下是常规实现思路（实际开发中不会这么用）</span>

    <span class="token comment">// 手指触摸动作开始，事件处理函数</span>
    <span class="token function">handleTouchStart</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 1、数据绑定，记录触摸开始的 X 轴的位置</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 手指触摸动作结束，事件处理函数</span>
    <span class="token function">handleTouchEnd</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 2、把结束时的 X 轴位置 - 触摸开始时的位置</span>
      <span class="token comment">// 3、判断是往左划还是往右划</span>
      <span class="token comment">// 4、做数据绑定，改变 currentTabIndex 的值</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 panel 区域划动后，控制台打印输出如下，查看 <code>changedTouches</code> 节点的信息</p><p><img src="https://www.arryblog.com/assets/img/image-20230421013529319.acdc4bf3.png" alt="image-20230421013529319"></p><p>注：</p><p>当我们不断划动时，在页面上触发事件会反复在控制台打印输出。这就是上面讲的这种思路不适合该场景的原因。</p><p>在小程序开发中，要避免频繁的页面 与 JS 做通讯的情况，这样会增加性能的开销，这种情况一旦发生就是双向的（即：在页面中通知了 JS，做了数据绑定，只要做了数据绑定，就会触发一个页面的渲染）就是说只要页面不断地划动，就会频繁在 JS 和 WXML 之间做交互，重复渲染。</p><p>这也是官方明确提到的 ！尽量要避免这种情况的出现。尤其绑定的数据量比较大的时候，性能消耗就会非常大，小程序就会非常的卡顿。</p><blockquote><p>因此，要做到避免小程序中频繁的数据绑定 和 事件通知 就显得尤为重要了。</p></blockquote><h3 id="_2、通过-wxs-优化频繁划动切换带来的性能问题" tabindex="-1"><a class="header-anchor" href="#_2、通过-wxs-优化频繁划动切换带来的性能问题" aria-hidden="true">#</a> 2、通过 WXS 优化频繁划动切换带来的性能问题</h3><ul><li>WXS（WeiXin Script）是小程序的一套脚本语言，结合 <code>WXML</code>，可以构建出页面的结构。</li><li>WXS 与 JavaScript 是不同的语言，有自己的语法，并不和 JavaScript 一致。</li><li>WXS 代码可以编写在 wxml 文件中的 <code>&lt;wxs&gt;</code> 标签内，或以 <code>.wxs</code> 为后缀名的文件内。</li></ul>`,17),k={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxs/",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>注：</p><p>微信小程序中，WXS 本身有很多限制，且它的使用场景比较单一。但当我们的业务场景适合使用 WXS 时，它的意义就非常的巨大。</p><ul><li>可解决在某些场景下频繁的数据绑定 以及 JS 和 页面性能通讯问题</li><li>还可为页面提供一些工具方法来简化我们项目的开发</li></ul><blockquote><p>具体是什么我们先用起来再说</p></blockquote><h3 id="_3、创建-wxs-文件" tabindex="-1"><a class="header-anchor" href="#_3、创建-wxs-文件" aria-hidden="true">#</a> 3、创建 WXS 文件</h3><p>考虑到后续我们会复用 WXS ，我们会在项目的根目录中创建一个专门的目录 <code>common</code> 用存储项目中的公共类库 或 样式。</p><blockquote><p>目录如下</p></blockquote><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>icoding-com-course
├─ common
│ ├─ wxs
│ │ ├─ touchMove.wxs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><ul><li>在 WXS 中只支持 ES5 的语法</li><li>不能在 WXS 中调用微信小程序提供的 API，如 <code>wx.</code> 开头的 API 是不能用的</li></ul><p>通过前面分析知道，使用常规方式会导致页面频繁的跟 JS 文件通讯，引入 WXS 的目的，就是把 事件处理函数 这部分通讯逻辑，移到 WXS 中 -&gt; 当在 WXS 中做完处理后，再选择性的把结果告诉 JS ，这样就可以节省掉很多不必要的通讯流程。</p><blockquote><p>具体改进方法的流程如下</p></blockquote><h3 id="_4、通过-wxs-改进后的实现方法" tabindex="-1"><a class="header-anchor" href="#_4、通过-wxs-改进后的实现方法" aria-hidden="true">#</a> 4、通过 WXS 改进后的实现方法</h3><p><img src="https://www.arryblog.com/assets/img/image-20230421083849564.b180c320.png" alt="image-20230421083849564"></p><p>通过 WXS 改进后的实现方法思路</p><ul><li>在 WXML 中（视图层）-&gt; 做滑动事件监听 -&gt; 等待用户触发滑动事件 -&gt;</li><li>然后将事件给到 WXS -&gt; 在 WXS 中进行处理，经过处理后 -&gt; 再发送到 JS 文件</li><li>最后，在逻辑层最终实现数据绑定（setData）-&gt; 最后在视图层实现标签页的切换效果</li></ul><p>相对常规思路，现在的方式是多加了一层 WXS。好处是：WXML 和 WXS 的通讯是不需要经过中间层的，是直接在视图层做通讯，这样它的性能开销就非常低了。在 WXS 中处理完成后，再通知 JS 文件，不必要的通讯就可以在 WXS 内部消化了</p><ul><li>不必要的通讯指：如，手指划动时，肯定是要划动到一定距离后，才会去触发一个标签切换，这个距离的判断就会放到 WXS 中来进行。</li><li>常规方法，是直接放到 JS 中去判断的，那么视图层的渲染 和 逻辑层的通讯时避免不了的，频繁的划动就会带来很大的性能消耗。有了 WXS 后，就能很好的节省这部分性能消耗了。</li></ul><blockquote><p>这就是 WXS 的应用场景之一了</p></blockquote><h3 id="_5、在-wxs-文件中定义事件处理函数" tabindex="-1"><a class="header-anchor" href="#_5、在-wxs-文件中定义事件处理函数" aria-hidden="true">#</a> 5、在 WXS 文件中定义事件处理函数</h3><p>将原来自定义组件中手指划动的事件处理函数，直接放到 WXS 中来，在 <code>common/wxs/touchMove.wxs</code> 中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// WXS 中 仅支持 ES5 的语法，需将原来 ES6 语法改写</span>

<span class="token comment">// 定义全局触摸开始变量</span>
<span class="token keyword">var</span> touchStartX<span class="token punctuation">;</span>

<span class="token comment">// 手指触摸动作开始，事件处理函数</span>
<span class="token keyword">function</span> <span class="token function">handleTouchStart</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// console.log(e)</span>
  <span class="token comment">// 1、数据绑定，记录触摸开始的 X 轴的位置</span>
  touchStartX <span class="token operator">=</span> e<span class="token punctuation">.</span>changedTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 手指触摸动作结束，事件处理函数</span>
<span class="token keyword">function</span> <span class="token function">handleTouchEnd</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> ownerInstance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// console.log(e)</span>
  <span class="token comment">// 2、把结束时的 X 轴位置 - 触摸开始时的位置</span>
  <span class="token keyword">var</span> touchEndX <span class="token operator">=</span> e<span class="token punctuation">.</span>changedTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>
  <span class="token comment">// 负数：表示手指向左滑动了；正数：手指向右滑动了</span>
  <span class="token keyword">var</span> distance <span class="token operator">=</span> touchEndX <span class="token operator">-</span> touchStartX<span class="token punctuation">;</span>

  <span class="token comment">// 由于相减后的结果是一个不确定的数字，因此我们需要统一定义一个状态值，否则无法明确数字具体的含义</span>
  <span class="token comment">// 约定状态值：-1 ：后退（向右滑）；0 ：不动；1 ：前进（向左滑动）；</span>

  <span class="token comment">// 3、判断是往左划还是往右划</span>

  <span class="token comment">// 定义方向变量，默认不动为 0</span>
  <span class="token keyword">var</span> direction <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment">// 向左滑动（前进），-80 约定为灵敏度的值（如果不设置稍微手指动一下，tab标签就会切换，这也是一个用户体验的优化）</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>distance <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> distance <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    direction <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 向右滑动（后退）</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>distance <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> distance <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    direction <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 如果以上两个条件都不满足时，direction 依然是 0 ，保持不滑动</span>

  <span class="token comment">// 判断完成后，开始触发事件，如果不动 direction = 0 时，就不用触发事件</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在 WXS 中触发事件的方法有两种</span>
    <span class="token comment">// 1、直接触发事件（只能在页面中使用WXS时才能用，这里不适用）；</span>
    <span class="token comment">// 2、直接调用引用该 WXS 的页面 或 自定义组件的方法（只适用第二种方法）</span>
    ownerInstance<span class="token punctuation">.</span><span class="token function">callMethod</span><span class="token punctuation">(</span><span class="token string">&quot;handleTouchMove&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">direction</span><span class="token operator">:</span> direction <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 4、做数据绑定，改变 currentTabIndex 的值</span>
<span class="token punctuation">}</span>

<span class="token comment">// 将以上定义好的函数暴露出去，外界才能调用</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">handleTouchStart</span><span class="token operator">:</span> handleTouchStart<span class="token punctuation">,</span>
  <span class="token literal-property property">handleTouchEnd</span><span class="token operator">:</span> handleTouchEnd<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在自定义组件 <code>components/tabs/tabs.js</code> 中定义 <code>handleTouchMove</code> 方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/tabs/tabs.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 部分省略 ......</span>

  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 部分省略 ......</span>

    <span class="token comment">// 触摸结束后，WXS 需要调用的函数</span>
    <span class="token function">handleTouchMove</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、在自定义组件结构中-引入-wxs-文件" tabindex="-1"><a class="header-anchor" href="#_6、在自定义组件结构中-引入-wxs-文件" aria-hidden="true">#</a> 6、在自定义组件结构中 引入 WXS 文件</h3><ul><li>在自定义组件中，导入 WXS 文件，并指定 当前 <code>&lt;wxs&gt;</code> 标签的模块名，必填字段</li><li>将调用自定组件内部 JS 中的事件处理函数，改为 WXS 中的事件处理函数</li></ul><p>在<code>components/tabs/tabs.wxml</code> 中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--components/tabs/tabs.wxml--&gt;</span>

<span class="token comment">&lt;!-- 在自定义组件中，导入 WXS 文件，并指定 当前 &lt;wxs&gt; 标签的模块名，必填字段。 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wxs</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../../common/wxs/touchMove.wxs<span class="token punctuation">&quot;</span></span> <span class="token attr-name">module</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>touch<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wxs</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 部分省略 ...... --&gt;</span>

  <span class="token comment">&lt;!-- 定义一个用于扩展的插槽 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>extend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- 标签页面板区域 --&gt;</span>
  <span class="token comment">&lt;!-- &lt;view class=&quot;tab-panel&quot; bind:touchstart=&quot;handleTouchStart&quot; bind:touchend=&quot;handleTouchEnd&quot;&gt; --&gt;</span>

  <span class="token comment">&lt;!-- 将调用自定组件内部JS中的事件处理函数，改为 WXS 中的事件处理函数 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab-panel<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">bind:</span>touchstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ touch.handleTouchStart }}<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">bind:</span>touchend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ touch.handleTouchEnd }}<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 对于内容、样式不确定内容，定义 slot 占位，具体的内容由组件的调用者决定 --&gt;</span>
    <span class="token comment">&lt;!-- 标签页面板区域 插槽 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>panel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>手指滑动测试，是否调用成功</p><p><img src="https://www.arryblog.com/assets/img/image-20230421060514771.a58731a6.png" alt="image-20230421060514771"></p><h3 id="_7、做数据绑定-实现滑动-tab-标签切换" tabindex="-1"><a class="header-anchor" href="#_7、做数据绑定-实现滑动-tab-标签切换" aria-hidden="true">#</a> 7、做数据绑定，实现滑动 tab 标签切换</h3><p>实现步骤</p><ul><li>取到的方向值</li><li>需要将方向值 转换为 滑动切换 tab 标签页的下标索引</li><li>判断越界的情况</li><li>做数据绑定，触发切换事件，即可滑动实现切换</li><li>优化 Bug：如果当前点击 tab 选项 时 已经选中的状态，就不再更新数据和执行其它的事件</li></ul><p>在 <code>components/tabs/tabs.js</code> 中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/tabs/tabs.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 开启多插槽支持</span>
    <span class="token literal-property property">multipleSlots</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 组件的属性列表（由页面或父组件中传递过来的属性）</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tabs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 组件的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 点击 tab 切换事件处理函数</span>
    <span class="token function">handleTabChange</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 获取当前点击 tab 选项的 index</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>index<span class="token punctuation">;</span>

      <span class="token comment">// 优化 Bug：如果当前点击 tab 选项 时 已经选中的状态，就不再更新数据和执行其它的事件</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>currentTabIndex<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

      <span class="token comment">// 更新 data 中 currentTabIndex 值</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">currentTabIndex</span><span class="token operator">:</span> index<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 触发自定义事件 change ，并携带当前索引值 index</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 触摸结束后，WXS 需要调用的函数</span>
    <span class="token function">handleTouchMove</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 取到的方向值为：-1，0，1</span>
      <span class="token keyword">const</span> direction <span class="token operator">=</span> e<span class="token punctuation">.</span>direction<span class="token punctuation">;</span>

      <span class="token comment">// 需要将方向值 转换为 滑动切换 tab 标签页的下标索引</span>

      <span class="token comment">// 当前选中的 tab 标签索引值</span>
      <span class="token keyword">const</span> currentTabIndex <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>currentTabIndex<span class="token punctuation">;</span>
      <span class="token comment">// 滑动目标标签页索引值转换</span>
      <span class="token keyword">const</span> targetTabIndex <span class="token operator">=</span> currentTabIndex <span class="token operator">+</span> direction<span class="token punctuation">;</span>
      <span class="token comment">// 需要判断边界情况（索引不能为负数 或 大于 tab 标签项的长度）如果不满足条件，直接 return</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        targetTabIndex <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
        targetTabIndex <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span>tabs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// 最后做数据绑定，改变 currentTabIndex 的值，实现 tab 切换</span>
      <span class="token comment">// 为了减少重复代码，思考如何复用 handleTabChange(e) 方法呢</span>
      <span class="token comment">// 通过模拟 const index = e.currentTarget.dataset.index 数据结构，达到方法复用的目的</span>
      <span class="token comment">// 定义一个伪变量</span>
      <span class="token keyword">const</span> customEvent <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">currentTarget</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">dataset</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">index</span><span class="token operator">:</span> targetTabIndex<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>

      <span class="token comment">// 调用 tab 切换事件处理函数（减少重复代码的编写）</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleTabChange</span><span class="token punctuation">(</span>customEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现效果：手指滑动页面时，也可完成切换</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-21-6-51-13.483c9a98.gif" alt="GIF-2023-4-21-6-51-13"></p><h3 id="_8、bug-修复" tabindex="-1"><a class="header-anchor" href="#_8、bug-修复" aria-hidden="true">#</a> 8、Bug 修复</h3><p>无法在整个标签页 面板区域滑动切换标签的问题</p><p>在 <code>components/tabs/tabs.wxss</code> 中新增样式，让 <code>tab-panel</code> 占满剩余空间即可</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* components/tabs/tabs.wxss */</span>
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.tab-panel</span> <span class="token punctuation">{</span>
  <span class="token comment">/* background-color: red; */</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9、wxs-小总结" tabindex="-1"><a class="header-anchor" href="#_9、wxs-小总结" aria-hidden="true">#</a> 9、WXS 小总结</h3><p>通过以上自定义组件的不断优化过程，大家应该能感受到 WXS 在使用上确实比较麻烦，且容易出错，但如果有一个符合它的使用场景时，就可以很好的帮助我们提升性能，在后续项目中遇到了对应的场景我们将再次使用。</p><p>有了本节的学习希望大家对 WXS 有一个全面完整的认识，其实在实际开发中也有很多开发者对 WXS 有很多的抱怨，认为 WXS 没什么用 ！但相信大家学过这一节后，就不会有这样的想法了 。</p><blockquote><p>我们可以讲它比较难用，并不是不好用，还是有本质的区别的。希望大家多多总结和练习 ！</p></blockquote><p>同时，希望大家在我们封装自定义组件的过程中，慢慢体会到软件工程师实践中的 “高类聚 低耦合” 的思想。</p><h2 id="五、iconfont-字体图标库-自定义组件封装" tabindex="-1"><a class="header-anchor" href="#五、iconfont-字体图标库-自定义组件封装" aria-hidden="true">#</a> 五、iconfont 字体图标库 - 自定义组件封装</h2><p>在微信小程序实际项目开发中 icon 图标库也是高频使用的组件，为了更方便和高效的开发，我们也可以将 iconfont 图标库进行封装后在使用。</p><h3 id="_1、在小程序中引入-iconfont-字体图标" tabindex="-1"><a class="header-anchor" href="#_1、在小程序中引入-iconfont-字体图标" aria-hidden="true">#</a> 1、在小程序中引入 iconfont 字体图标</h3>`,49),m={href:"https://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"},b=p(`<p><img src="https://www.arryblog.com/assets/img/image-20230422192408374.762c7507.png" alt="image-20230422192408374"></p><p>在项目的根目录中新建 <code>iconfont</code> 文件夹，在其中再创建 <code>iconfont.wxss</code> 文件</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>icoding-com-course
├─ iconfont
│ ├─ iconfont.wxss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 iconfont 官方复制的 CSS 样式粘贴到 <code>iconfont.wxss</code> 中</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;iconfont&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* Project id 3872007 */</span>
  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;//at.alicdn.com/t/c/font_3872007_896y23hxpst.woff2?t=1682160697843&quot;</span><span class="token punctuation">)</span></span>
      <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;woff2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;//at.alicdn.com/t/c/font_3872007_896y23hxpst.woff?t=1682160697843&quot;</span><span class="token punctuation">)</span></span>
      <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;woff&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;//at.alicdn.com/t/c/font_3872007_896y23hxpst.ttf?t=1682160697843&quot;</span><span class="token punctuation">)</span></span>
      <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;truetype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.iconfont</span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;iconfont&quot;</span> <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>
  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.icon-fenlei1:before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;\\e71b&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 部分省略 ....... */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、在页面中使用-iconfont-字体图标" tabindex="-1"><a class="header-anchor" href="#_2、在页面中使用-iconfont-字体图标" aria-hidden="true">#</a> 2、在页面中使用 iconfont 字体图标</h3><p>在 <code>pages/index/index.wxss</code> 引入 <code>iconfont.wxss</code> 文件</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/** pages/index/index.wxss **/</span>
<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;../../iconfont/iconfont.wxss&quot;</span><span class="token punctuation">;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面 <code>pages/index/index.wxml</code> 中使用 iconfont 字体图标</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/index/index.wxml--&gt;</span>
<span class="token comment">&lt;!-- 在页面中使用 iconfont 字体图标 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconfont icon-quanjixixian<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 150rpx<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、自定义-iconfont-组件封装" tabindex="-1"><a class="header-anchor" href="#_3、自定义-iconfont-组件封装" aria-hidden="true">#</a> 3、自定义 iconfont 组件封装</h3><p>新建 iconfont 自定义组件，创建自定义组件文件目录</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>icoding-com-course
├─ components
│ ├─ icon
│ │ ├─ icon.js
│ │ ├─ icon.json
│ │ ├─ icon.wxml
│ │ └─ icon.wxss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>components/icon/icon.wxml</code> 中定义 icon 自定义组件结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--components/icon/icon.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconfont icon-{{ name }}<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token selector">font-size:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> size <span class="token punctuation">}</span><span class="token punctuation">}</span>rpx<span class="token punctuation">;</span> <span class="token selector">color:</span><span class="token punctuation">{</span><span class="token punctuation">{</span> color <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span>
  <span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>components/icon/icon.css</code> 导入 iconfont 字体图标的样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* components/icon/icon.wxss */</span>
<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;../../iconfont/iconfont.wxss&quot;</span><span class="token punctuation">;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>components/icon/icon.js</code> 中接收父组件中传递参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// components/icon/icon.js</span>
<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 组件的属性列表</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;#7bd802&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;30&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 组件的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 组件的方法列表</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、使用封装好的-iconfont-自定义组件" tabindex="-1"><a class="header-anchor" href="#_4、使用封装好的-iconfont-自定义组件" aria-hidden="true">#</a> 4、使用封装好的 iconfont 自定义组件</h3><p>封装好的 icon 字体图标库，可以在<strong>任意页面 或 其他自定义组件</strong>中使用，非常的方便、高效、灵活</p><p>在 <code>components/tabs/tabs.json</code> 中引用 <code>icon</code> 自定义组件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;i-icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;../icon/icon&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>components/tabs/tabs.wxml</code> 中使用 icon 自定义字体图标组件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--components/tabs/tabs.wxml--&gt;</span>
<span class="token comment">&lt;!-- 使用 icon 自定义组件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waimai-<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>150<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i-icon</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、自定义组件封装-最佳实践总结" tabindex="-1"><a class="header-anchor" href="#六、自定义组件封装-最佳实践总结" aria-hidden="true">#</a> 六、自定义组件封装 - 最佳实践总结</h2><p>深入浅出微信小程自定义组件的封装本质 以及 原则，情况下适合做自定义组件的封装。</p><h3 id="_1、自定义组件封装的本质" tabindex="-1"><a class="header-anchor" href="#_1、自定义组件封装的本质" aria-hidden="true">#</a> 1、自定义组件封装的本质</h3><p>①、简化 Page 页面元素、逻辑、样式，提高代码可读性</p><blockquote><p>实现难度：低；重要程度：低</p></blockquote><p>②、隔离 Page 页面元素、逻辑、样式实现，提高可维护性</p><blockquote><p>实现难度：中；重要程度：中</p></blockquote><p>③、页面元素、逻辑、样式复用</p><blockquote><p>实现难度：高；重要程度：高</p></blockquote><p>注：</p><p>这里的实现难度、重要程度是相对的，是基于当下你所处的项目环境而言。</p><h3 id="_2、自定义组件封装的原则" tabindex="-1"><a class="header-anchor" href="#_2、自定义组件封装的原则" aria-hidden="true">#</a> 2、自定义组件封装的原则</h3><ul><li>①、同时能实现封装三大本质时，请毫不犹豫进行封装</li><li>②、同时能实现第二、第三点意义时，可以进行封装</li><li>③、通常情况下如果能实现第三点意义，第二点也能实现，可以进行封装</li><li>④、仅能实现第二点意义时，参考当前项目的时间、成本、交付压力，可以选择进行封装</li><li>⑤、仅能实现第一点意义时，警惕过度设计；参考当前项目的时间、成本、交付压力，可以选择进行封装</li></ul><h3 id="_3、自定义组件特性" tabindex="-1"><a class="header-anchor" href="#_3、自定义组件特性" aria-hidden="true">#</a> 3、自定义组件特性</h3><p>这里借用 <strong>面向对象</strong> 的三大特性来描述非常的贴切，如果你是一个接触过面向对象概念的开发者，那么你会一下子理解到自定义组件的精髓。</p><h3 id="_3-1、封装" tabindex="-1"><a class="header-anchor" href="#_3-1、封装" aria-hidden="true">#</a> 3.1、封装</h3><p>我们把原本放在 Page 中的元素，封装到了自定义组件中。同时，自定义组件还能具备逻辑处理和样式定义的能力，因为它同样支持 js 和 wxss 编写。</p><p>也就是说，理论上自定义组件就是一个可以独立完成某个功能的模块。通过封装自定义组件，我们可以实现某些功能的快速复用，减少重复代码实现，同时简化我们的 Page 页面结构。</p><h3 id="_3-2、继承" tabindex="-1"><a class="header-anchor" href="#_3-2、继承" aria-hidden="true">#</a> 3.2、继承</h3>`,44),g={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/behaviors.html",target:"_blank",rel:"noopener noreferrer"},h=s("h3",{id:"_3-3、多态",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-3、多态","aria-hidden":"true"},"#"),n(" 3.3、多态")],-1),q={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html",target:"_blank",rel:"noopener noreferrer"},x=p('<h3 id="_4、自定义组件使用场景" tabindex="-1"><a class="header-anchor" href="#_4、自定义组件使用场景" aria-hidden="true">#</a> 4、自定义组件使用场景</h3><p>是否使用自定义组件，有两个前提，当满足其中一个的时候，就要考虑使用自定义组件：</p><ul><li>Page 页面结构复杂、冗长（可读性差，不利于维护和扩展）</li><li>重复实现（同样的功能代码散布在项目的各个地方是工程实践中的巨坑，我们要尽量避免出现这种代码）</li></ul><p>但是考虑归考虑，具体是不是要做自定义组件的封装我们还需要慎重考虑。因为在实际开发过程中，你可能会被工期、业务理解、技术水平等诸多因素影响导致你不会去使用自定义组件。</p><h3 id="_5、通用组件与业务组件" tabindex="-1"><a class="header-anchor" href="#_5、通用组件与业务组件" aria-hidden="true">#</a> 5、通用组件与业务组件</h3><p>自定义组件根据使用场景的不同，大体分为 <strong>通用组件</strong> 和 <strong>业务组件</strong> 两种。</p><p><strong>通用组件：</strong> 就类似我们本章节实现的<code>tabs</code>，另外还有项目中常用的<code>Button</code>、<code>Icon</code> 组件等。</p><p>通用组件的最大特点就是不和具体业务实现关联，它本身的独立性很强，自己就是一个相对完整的功能。我们只需要通过给组件传递参数或者插入内容到插槽就能实现在不同业务场景下的使用，通用组件因为对通用性要求比较高，所以在设计和实现的难度上也会比较考验开发者的设计能力和编码能力。</p><p><strong>业务组件：</strong> 是相对通用性没那么高的自定义组件，通常这类组件会和具体业务实现关联。主要作用是在于简化复杂 Page 页面的页面结构，并且支持在特定业务场景下的复用。</p><h3 id="_6、自定义组件通信" tabindex="-1"><a class="header-anchor" href="#_6、自定义组件通信" aria-hidden="true">#</a> 6、自定义组件通信</h3><p>有两点原则非常重要，一定要清楚</p><ul><li>①、页面或者父组件<strong>通过属性</strong>给自定义组件传递参数</li><li>②、自定义组件<strong>通过触发自定义事</strong>件给页面或者父组件传递参数</li></ul><blockquote><p>这个与 Vue 组件通信模式是一样的</p></blockquote>',13);function w(y,f){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,s("blockquote",null,[s("p",null,[n("相关监听事件查阅，"),s("a",r,[n("微信小程序官方文档 - 事件分类(opens new window)"),t(a)])])]),d,s("blockquote",null,[s("p",null,[n("详细查阅，"),s("a",k,[n("微信小程序官方文档 - WXS 语法参考(opens new window)"),t(a)])])]),v,s("p",null,[n("在 "),s("a",m,[n("iconfont 官网 (opens new window)"),t(a)]),n("上下载或复制对应项目中用到的图标库的样式文件")]),b,s("p",null,[n("我们在实际工程实践中，有时候会碰到一种情况，就是多个不同的组件，它们有相同的属性和组件方法，但同时又有一些特有的属性和方法，这时候我们可以利用自定义组件的 "),s("a",g,[n("behaviors (opens new window)"),t(a)]),n("机制，来实现属性和组件方法的复用。")]),h,s("p",null,[n("有些自定义组件，我们为了让组件更加通用和易于扩展，我们会实现自定义组件部分必要的页面内容，然后利用 "),s("a",q,[n("插槽 Slot (opens new window)"),t(a)]),n("机制来实现让自定义组件的调用方决定要展示的内容。")]),x])}const j=e(i,[["render",w],["__file","weixinxiaochengxuzidingyizujianfengzhuang，xiangmuzuijiashijianzongheyingyong.html.vue"]]);export{j as default};
