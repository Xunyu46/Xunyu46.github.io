import{_ as p,r as o,o as c,c as l,a as n,b as s,e as t,d as e}from"./app-7ac1ad86.js";const i={},u=e('<h1 id="微信小程序页面导航、传参、事件、api、网络请求" tabindex="-1"><a class="header-anchor" href="#微信小程序页面导航、传参、事件、api、网络请求" aria-hidden="true">#</a> 微信小程序页面导航、传参、事件、API、网络请求</h1><p>TIP</p><p>从本节内容开始学习微信小程序页面导航，导航传参，页面事件、微信小程序相关 API 等</p><ul><li>页面导航</li><li>导航传参</li><li>页面事件</li><li>小程序的 API</li><li>小程序网络数据请求</li><li>上拉触底分页数据加载综合实践应用</li></ul><h2 id="一、页面导航" tabindex="-1"><a class="header-anchor" href="#一、页面导航" aria-hidden="true">#</a> 一、页面导航</h2><p>TIP</p><p>深入浅出小程序中的页面导航，声明式导航、编程式导航基本用法和注意事项。</p>',7),r={href:"https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html",target:"_blank",rel:"noopener noreferrer"},d=e(`<h3 id="_1、什么是页面导航" tabindex="-1"><a class="header-anchor" href="#_1、什么是页面导航" aria-hidden="true">#</a> 1、什么是页面导航</h3><p>TIP</p><p>页面导航指页面之间的相互跳转。如浏览器中实现页面导航的方式有两种方式</p><ul><li>a 标签，超链接</li><li><code>location.href</code></li></ul><h3 id="_2、在小程序中导航的两种方式" tabindex="-1"><a class="header-anchor" href="#_2、在小程序中导航的两种方式" aria-hidden="true">#</a> 2、在小程序中导航的两种方式</h3><p>TIP</p><p>①、声明式导航</p><ul><li>在页面上声明一个 <code>&lt;navigator&gt;</code> 导航组件</li><li>通过点击 <code>&lt;navigator&gt;</code> 组件实现页面跳转</li></ul><p>②、编程式导航</p><ul><li>调用小程序的 导航 API ，实现页面的跳转</li></ul><h3 id="_3、声明式导航-导航跳转到-tabbar-页面" tabindex="-1"><a class="header-anchor" href="#_3、声明式导航-导航跳转到-tabbar-页面" aria-hidden="true">#</a> 3、声明式导航 - 导航跳转到 tabBar 页面</h3><p>TIP</p><p>tabBar 页面指：被配置为 tabBar 的页面</p><p><strong>注：</strong></p><p>在使用 <code>&lt;navigator&gt;</code> 组件跳转到指定的 tabBar 页面时，需要指定 url 属性 和 open-type 属性</p><ul><li>①、url 表示要跳转的页面地址，必须以 <code>/</code> 开头</li><li>②、open-type 表示跳转的方式，必须为 <code>switchTab</code>（注：一定要指定 open-type 属性，否则不生效）</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/navigator/navigator.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/menu/menu<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchTab<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>导航到菜单页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span>
<span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、声明式导航-导航到非-tabbar-页面" tabindex="-1"><a class="header-anchor" href="#_4、声明式导航-导航到非-tabbar-页面" aria-hidden="true">#</a> 4、声明式导航 - 导航到非 tabBar 页面</h3><p>TIP</p><p>非 tabBar 页面指：没有被配置为 tabBar 的页面</p><p>在使用 <code>&lt;navigator&gt;</code> 组件跳转到普通的非 tabBar 页面时，则需要指定 url 属性 和 open-type 属性</p><ul><li>①、url 表示要跳转的页面地址，必须以 <code>/</code> 开头</li><li>②、open-type 表示跳转方式，必须为 <code>navigate</code></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/navigator/navigator.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/desc/desc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigate<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>导航到 desc 页面（非tabBar页面）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span>
<span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>在导航到非 tabBar 页面时，<code>open-type=&quot;navigate&quot;</code> 属性可以省略不写</p><h3 id="_5、声明式导航-后退导航" tabindex="-1"><a class="header-anchor" href="#_5、声明式导航-后退导航" aria-hidden="true">#</a> 5、声明式导航 - 后退导航</h3><p>TIP</p><p>如果要后退到上一个页面或多级页面，需要指定 open-type 属性和 delta 属性</p><ul><li>open-type 的值必须是 <code>navigateBack</code> ，表示要进行后退导航</li><li>delta 的值必须是数字，表示要后退的层级</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/desc/desc.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigateBack<span class="token punctuation">&quot;</span></span> <span class="token attr-name">delta</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>返回上一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>如果只是后退到上一级页面，可以省略 delta 属性，因为其默认值就是 1</p><h3 id="_6、编程式导航-导航到-tabbar-页面" tabindex="-1"><a class="header-anchor" href="#_6、编程式导航-导航到-tabbar-页面" aria-hidden="true">#</a> 6、编程式导航 - 导航到 tabBar 页面</h3><p>TIP</p><p>调用 <code>wx.switchTab(Object object)</code> 方法，可以跳转到 tabBar 页面。</p>`,35),k={href:"https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html",target:"_blank",rel:"noopener noreferrer"},v=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"必填"),n("th",{style:{"text-align":"left"}},"说明")])],-1),m=n("td",{style:{"text-align":"left"}},"url",-1),g=n("td",{style:{"text-align":"left"}},"string",-1),b=n("td",{style:{"text-align":"left"}},"是",-1),h={style:{"text-align":"left"}},f={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#tabbar",target:"_blank",rel:"noopener noreferrer"},q=n("tr",null,[n("td",{style:{"text-align":"left"}},"success"),n("td",{style:{"text-align":"left"}},"function"),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},"接口调用成功的回调函数")],-1),y=n("tr",null,[n("td",{style:{"text-align":"left"}},"fail"),n("td",{style:{"text-align":"left"}},"function"),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},"接口调用失败的回调函数")],-1),w=n("tr",null,[n("td",{style:{"text-align":"left"}},"complete"),n("td",{style:{"text-align":"left"}},"function"),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},"接口调用结束的回调函数（调用成功、失败都会执行）")],-1),x=e(`<p>在 <code>pages/navigator/navigator.wxml</code> 页面结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/navigator/navigator.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gotoMenu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>跳转到菜单页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>pages/navigator/navigator.js</code> 页面逻辑中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 通过编程式导航，跳转至 menu 页面（tabBar页面）</span>
  <span class="token function">gotoMenu</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">switchTab</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;/pages/menu/menu&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7、编程式导航-导航到非-tabbar-页面" tabindex="-1"><a class="header-anchor" href="#_7、编程式导航-导航到非-tabbar-页面" aria-hidden="true">#</a> 7、编程式导航 - 导航到非 tabBar 页面</h3><p>TIP</p><p>调用 <code>wx.navigateTo(Object object)</code> 方法，可以跳转到非 tabBar 页面，不能跳到 tabbar 页面。</p>`,7),_={href:"https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html",target:"_blank",rel:"noopener noreferrer"},j=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"必填"),n("th",{style:{"text-align":"left"}},"说明")])],-1),P=n("tr",null,[n("td",{style:{"text-align":"left"}},"url"),n("td",{style:{"text-align":"left"}},"string"),n("td",{style:{"text-align":"left"}},"是"),n("td",{style:{"text-align":"left"}},[s("需要跳转的应用内非 tabBar 的页面的路径 (代码包路径), 路径后可以带参数。参数与路径之间使用 "),n("code",null,"?"),s(" 分隔，参数键与参数值用 "),n("code",null,"="),s(" 相连，不同参数用 "),n("code",null,"&"),s(" 分隔；如"),n("code",null,"path?key=value&key2=value2")])],-1),I=n("tr",null,[n("td",{style:{"text-align":"left"}},"events"),n("td",{style:{"text-align":"left"}},"Object"),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},"页面间通信接口，用于监听被打开页面发送到当前页面的数据。基础库 2.7.3 开始支持。")],-1),T=n("td",{style:{"text-align":"left"}},"routeType",-1),B=n("td",{style:{"text-align":"left"}},"string",-1),L=n("td",{style:{"text-align":"left"}},"是",-1),A={style:{"text-align":"left"}},D={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/runtime/skyline/custom-route.html",target:"_blank",rel:"noopener noreferrer"},G=n("tr",null,[n("td",{style:{"text-align":"left"}},"success"),n("td",{style:{"text-align":"left"}},"function"),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},"接口调用成功的回调函数")],-1),E=n("tr",null,[n("td",{style:{"text-align":"left"}},"fail"),n("td",{style:{"text-align":"left"}},"function"),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},"接口调用失败的回调函数")],-1),S=n("tr",null,[n("td",{style:{"text-align":"left"}},"complete"),n("td",{style:{"text-align":"left"}},"function"),n("td",{style:{"text-align":"left"}},"否"),n("td",{style:{"text-align":"left"}},"接口调用结束的回调函数（调用成功、失败都会执行）")],-1),F=e(`<p>在 <code>pages/navigator/navigator.wxml</code> 页面结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gotoDesc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>跳转到描述页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>pages/navigator/navigator.js</code> 页面逻辑中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 通过编程式导航，跳转至 desc 页面（非tabBar页面）</span>
  <span class="token function">gotoDesc</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;/pages/desc/desc&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8、编程式导航-后退导航" tabindex="-1"><a class="header-anchor" href="#_8、编程式导航-后退导航" aria-hidden="true">#</a> 8、编程式导航 - 后退导航</h3><p>TIP</p><p>调用 <code>wx.navigateBack(Object object)</code> 方法，可以返回上一页面或多级页面</p>`,7),R={href:"https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html",target:"_blank",rel:"noopener noreferrer"},C=e(`<table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">delta</td><td style="text-align:left;">number</td><td style="text-align:left;">1</td><td style="text-align:left;">否</td><td style="text-align:left;">返回的页面数，如果 delta 大于现有页面数，则返回到首页。</td></tr><tr><td style="text-align:left;">success</td><td style="text-align:left;">function</td><td style="text-align:left;"></td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用成功的回调函数</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">function</td><td style="text-align:left;"></td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">function</td><td style="text-align:left;"></td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><p>在 <code>pages/desc/desc.wxml</code> 页面结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/desc/desc.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gotoBack<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>后退<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>pages/desc/desc.js</code> 页面逻辑中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/desc/desc.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 编程式导航，后退上一页面</span>
  <span class="token function">gotoBack</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">navigateBack</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">delta</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认值为 1 可以省略</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、导航传参" tabindex="-1"><a class="header-anchor" href="#二、导航传参" aria-hidden="true">#</a> 二、导航传参</h2><p>TIP</p><p>深入浅出 声明式导航传参 和 编程式导航传参</p><h3 id="_1、声明式导航传参" tabindex="-1"><a class="header-anchor" href="#_1、声明式导航传参" aria-hidden="true">#</a> 1、声明式导航传参</h3><p>TIP</p><p><code>navigator</code> 组件的 url 属性用来指定将要跳转到的页面的路径。同时，路径的后面还可以携带参数</p><ul><li>参数与路径之间使用 <code>?</code> 分隔</li><li>参数键与参数值用 <code>=</code> 相连</li><li>不同参数用 <code>&amp;</code> 分隔</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/desc/desc?id=1001&amp;type=1<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>跳转到描述页面，并传递参数 id 和 type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span>
<span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.arryblog.com/assets/img/image-20230407182000282.b2c43ae2.png" alt="image-20230407182000282"></p><h3 id="_2、编程式导航传参" tabindex="-1"><a class="header-anchor" href="#_2、编程式导航传参" aria-hidden="true">#</a> 2、编程式导航传参</h3><p>TIP</p><p>调用 <code>wx.navigateTo(Object object)</code> 方法跳转页面时，也可以携带参数</p><p>在 <code>pages/navigator/navigator.wxml</code> 页面结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gotoNavigateTo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>编程式导航传参<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>pages/navigator/navigator.js</code> 页面逻辑中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/navigator/navigator.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">gotoNavigateTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;/pages/desc/desc?id=1001&amp;type=1&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.arryblog.com/assets/img/image-20230407183030788.c9c034d3.png" alt="image-20230407183030788"></p><h3 id="_3、在-onload-中接收导航参数" tabindex="-1"><a class="header-anchor" href="#_3、在-onload-中接收导航参数" aria-hidden="true">#</a> 3、在 onLoad 中接收导航参数</h3><p>TIP</p><p>通过声明式传参 或 编程式导航传参所携带的参数，可以直接在 onLoad 事件中直接获取到</p><p>在跳转完成后的目标页面 <code>pages/desc/desc.js</code> 逻辑的 onLoad 生命周期函数中接收传递过来的参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/desc/desc.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 生命周期函数--监听页面加载，options 为形参</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// options 是导航传递过来的参数对象</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.arryblog.com/assets/img/image-20230407184002169.52c90cf0.png" alt="image-20230407184002169"></p><p>如果我们需要让页面中其他函数也能访问到通过导航传递过来的参数，我们只需将 <code>options</code> 参数对象挂在到 data 对象中即可</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/desc/desc.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 通过导航传递过来的参数对象</span>
    <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// options 是导航传递过来的参数对象</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 将 options 参数对象存储在 data 中 query 对象中</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">query</span><span class="token operator">:</span> options<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p>当页面中的企业其他函数需要用到导航传递过来的参数时，只需要从 data 中 query 对象中取值即可。</p><p><img src="https://www.arryblog.com/assets/img/image-20230407184803683.184de36d.png" alt="image-20230407184803683"></p><h2 id="三、页面事件" tabindex="-1"><a class="header-anchor" href="#三、页面事件" aria-hidden="true">#</a> 三、页面事件</h2><p>TIP</p><p>深入浅出页面常用的事件，实现下拉刷新、上拉触底，综合实践应用</p><h3 id="_1、什么是下拉刷新" tabindex="-1"><a class="header-anchor" href="#_1、什么是下拉刷新" aria-hidden="true">#</a> 1、什么是下拉刷新</h3><p>TIP</p><p>下拉刷新是移动端的专有术语，指通过手指在屏幕上的下拉滑动操作，从而重新加载页面数据的行为</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-7-19-02-54.904f7d5a.gif" alt="GIF-2023-4-7-19-02-54"></p><h3 id="_2、启用下拉刷新" tabindex="-1"><a class="header-anchor" href="#_2、启用下拉刷新" aria-hidden="true">#</a> 2、启用下拉刷新</h3><p>TIP</p><p>启用下拉刷新有两种方式</p>`,43),O={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#window",target:"_blank",rel:"noopener noreferrer"},H=n("p",null,[s("在 "),n("code",null,"app.json"),s(" 的 window 节点中，将 "),n("code",null,"enablePullDownRefresh"),s(" 设置为 "),n("code",null,"true")],-1),M={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html",target:"_blank",rel:"noopener noreferrer"},N=e(`<p>在页面的 <code>.json</code> 配置文件中，将 <code>enablePullDownRefresh</code> 设置为 <code>true</code></p><blockquote><p>实际开发中，推荐使用第 2 种方式，为需要的页面单独开启下拉刷新的效果。</p></blockquote><h3 id="_3、配置下拉刷新窗口的样式" tabindex="-1"><a class="header-anchor" href="#_3、配置下拉刷新窗口的样式" aria-hidden="true">#</a> 3、配置下拉刷新窗口的样式</h3><p>TIP</p><p>在全局 或 页面的 <code>.json</code> 配置文件中，通过 <code>backgroundColor</code> 和 <code>backgroundTextStyle</code>来配置下拉刷新窗口的样式</p><ul><li>backgroundColor 用来配置下拉刷新窗口的背景颜色，仅支持 16 进制的颜色值</li><li>backgroundTextStyle 用来配置下拉刷新 loading 的样式，仅支持 dark 和 light</li></ul><p>在页面 <code>/pages/index/index.json</code> 配置文件中</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;enablePullDownRefresh&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;backgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#e0dede&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;backgroundTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dark&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-8-2-16-19.e7177f40.gif" alt="GIF-2023-4-8-2-16-19"></p><h3 id="_4、监听页面的下拉刷新事件" tabindex="-1"><a class="header-anchor" href="#_4、监听页面的下拉刷新事件" aria-hidden="true">#</a> 4、监听页面的下拉刷新事件</h3><p>TIP</p>`,11),V=n("code",null,".js",-1),U={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onPullDownRefresh",target:"_blank",rel:"noopener noreferrer"},W=e(`<p>在 <code>/pages/refresh/refresh.js</code> 页面逻辑中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面相关事件处理函数--监听用户下拉动作</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;触发了refresh 页面的下拉刷新&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当下拉刷新页面时，会触发 <code>onPullDownRefresh()</code> 声明周期函数，控制台打印输出如下</p><p><img src="https://www.arryblog.com/assets/img/image-20230408022109966.08d7b40a.png" alt="image-20230408022109966"></p><h3 id="_5、下拉刷新事件操作" tabindex="-1"><a class="header-anchor" href="#_5、下拉刷新事件操作" aria-hidden="true">#</a> 5、下拉刷新事件操作</h3><p>TIP</p><p>当点击页面中的按钮时，让 count 值自增 +2 ，再触发页面的下拉刷新事件时，将 count 值重置为 0</p><p>在 <code>pages/refresh/refresh.wxml</code> 页面结构中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>count 值为：{{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>countAdd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点我 + 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>pages/refresh/refresh.js</code> 页面逻辑中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/refresh/refresh.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// +2 按钮点击事件处理函数</span>
  <span class="token function">countAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 页面相关事件处理函数--监听用户下拉动作</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;触发了index页面的下拉刷新&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-8-2-36-19.9457fb07.gif" alt="GIF-2023-4-8-2-36-19"></p><h3 id="_6、停止下拉刷新效果" tabindex="-1"><a class="header-anchor" href="#_6、停止下拉刷新效果" aria-hidden="true">#</a> 6、停止下拉刷新效果</h3><p>TIP</p><p>当在真机调试中，下拉刷新的 loading 效果会一直显示，不会主动消失（在模拟器正常）</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-8-2-57-26.1691f4ed.gif" alt="GIF-2023-4-8-2-57-26"></p><p>在真机中的调试效果，loading 不会主动关闭</p>`,18),J={href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui/pull-down-refresh/wx.stopPullDownRefresh.html",target:"_blank",rel:"noopener noreferrer"},Q=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 页面相关事件处理函数--监听用户下拉动作</span>
<span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;触发了index页面的下拉刷新&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// 当数据重置成功后，调用该函数，关闭下拉刷新效果即可</span>
    wx<span class="token punctuation">.</span><span class="token function">stopPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>优化后的真机调试效果</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-8-3-01-00.cfe60d70.gif" alt="GIF-2023-4-8-3-01-00"></p><h3 id="_7、上拉触底事件" tabindex="-1"><a class="header-anchor" href="#_7、上拉触底事件" aria-hidden="true">#</a> 7、上拉触底事件</h3><p>TIP</p><p>上拉触底是移动端的专有名词，通过手指在屏幕上的上拉滑动操作，加载更多数据行为</p><blockquote><p>多用于移动端的分页功能效果实现。如下</p></blockquote><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-8-3-14-45.dc44efea.gif" alt="GIF-2023-4-8-3-14-45"></p><h3 id="_8、监听页面的上拉触底事件" tabindex="-1"><a class="header-anchor" href="#_8、监听页面的上拉触底事件" aria-hidden="true">#</a> 8、监听页面的上拉触底事件</h3><p>TIP</p><p>在页面的 <code>.js</code> 文件中，通过 <code>onReachBottom()</code> 生命周期函数，即可监听当前页面的上拉触底事件。</p><blockquote><p>如下</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面上拉触底事件的处理函数</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;触发了上拉触底事件 ......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.wxml</code>页面结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 触发上拉触底的事件的前提是：当前页面的高度必须超过一屏 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 1500rpx<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.arryblog.com/assets/img/image-20230408032819805.d649cdee.png" alt="image-20230408032819805"></p><h3 id="_9、配置上拉触底的距离" tabindex="-1"><a class="header-anchor" href="#_9、配置上拉触底的距离" aria-hidden="true">#</a> 9、配置上拉触底的距离</h3><p>TIP</p><p>上拉触底的距离指触发上拉触底事件时，滚动条距离页面底部的距离。</p>`,19),X=n("code",null,".json",-1),$={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"50px",-1),K=e(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;onReachBottomDistance&quot;</span><span class="token operator">:</span> <span class="token number">200</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.arryblog.com/assets/img/image-20230408034119230.94edbcfa.png" alt="image-20230408034119230"></p><h3 id="_10、上拉触底分页数据加载综合实践应用" tabindex="-1"><a class="header-anchor" href="#_10、上拉触底分页数据加载综合实践应用" aria-hidden="true">#</a> 10、上拉触底分页数据加载综合实践应用</h3><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-8-4-57-01.ec6717f1.gif" alt="GIF-2023-4-8-4-57-01"></p><p>实现上拉触底的综合实践应用的步骤</p><ul><li>①、定义获取随机颜色值的方法（使用 fastmock 定义数据接口）</li><li>②、在页面加载时初始化数据</li><li>③、渲染页面 UI 结构并定义页面样式</li><li>④、在上拉触底时调用获取随机颜色的方法</li><li>⑤、添加 loading 正在加载效果</li><li>⑥、对上拉触底进行节流处理</li></ul><blockquote><p>等学完网络请求后，再来实现该实践内容</p></blockquote><h2 id="四、小程序的-api" tabindex="-1"><a class="header-anchor" href="#四、小程序的-api" aria-hidden="true">#</a> 四、小程序的 API</h2><p>TIP</p><p>小程序的 API 是由宿主环境提供的，通过这些丰富的小程序 API 开发者可以方便调用微信提供的能力。</p><blockquote><p>如：获取用户信息、本地存储、支付能力、摄像头、录音、通讯录等</p></blockquote>`,11),Y={href:"https://developers.weixin.qq.com/miniprogram/dev/api/",target:"_blank",rel:"noopener noreferrer"},Z=e('<h3 id="_1、事件监听-api" tabindex="-1"><a class="header-anchor" href="#_1、事件监听-api" aria-hidden="true">#</a> 1、事件监听 API</h3><p>TIP</p><p>特点：以 on 开头，用来监听某些事件的触发</p><blockquote><p>如：<code>wx.onThemeChange(function listener)</code> 监听系统主题改变事件</p></blockquote><h3 id="_2、同步-api" tabindex="-1"><a class="header-anchor" href="#_2、同步-api" aria-hidden="true">#</a> 2、同步 API</h3><p>TIP</p><ul><li>特点 1：以 Sync 结尾的 API 都是同步 API</li><li>特点 2：同步 API 的执行结果，可以通过函数返回值直接获取，如果执行出错会抛出异常</li></ul><blockquote><p>如：<code>wx.setStorageSync(string key, any data)</code> 将数据存储在本地缓存中指定的 key 中</p></blockquote><h3 id="_3、异步-api" tabindex="-1"><a class="header-anchor" href="#_3、异步-api" aria-hidden="true">#</a> 3、异步 API</h3><p>TIP</p><p>特点：类似于 jQuery 中的 <code>$.ajax(options)</code> 函数，需要通过 success、fail、complete 接收调用的结果</p><blockquote><p>如：<code>wx.request()</code> 发起网络数据请求，通过 success 回调函数接收数据</p></blockquote><h2 id="五、小程序网络数据请求" tabindex="-1"><a class="header-anchor" href="#五、小程序网络数据请求" aria-hidden="true">#</a> 五、小程序网络数据请求</h2><p>TIP</p><p>在小程序 API 中网络板块分为：发起请求、下载、上传、WebSocket 、mDNS 服务、TCP 通信 等</p><h3 id="_1、小程序网络数据请求的限制" tabindex="-1"><a class="header-anchor" href="#_1、小程序网络数据请求的限制" aria-hidden="true">#</a> 1、小程序网络数据请求的限制</h3><p>TIP</p><p>出于安全性方面的考虑，小程序官方对数据接口的请求做出了 2 个部分的限制</p><ul><li>①、只能请求 HTTPS 类型的接口</li><li>②、必须将接口的域名添加到信任列表中 （登录小程序后台，即可添加）</li></ul><p><img src="https://www.arryblog.com/assets/img/image-20230408182416537.7f28e74d.png" alt="image-20230408182416537"></p><h3 id="_2、配置-request-合法域名" tabindex="-1"><a class="header-anchor" href="#_2、配置-request-合法域名" aria-hidden="true">#</a> 2、配置 request 合法域名</h3><p>TIP</p><p>需要将我们要请求的接口的域名地址，在小程序后台配置即可，发起对应的请求。</p>',23),nn={href:"https://www.arryblog.com/vip/applet/#_3%E3%80%81%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E4%B8%8B%E8%BD%BD%E3%80%81%E5%AE%89%E8%A3%85",target:"_blank",rel:"noopener noreferrer"},sn=n("p",null,[n("img",{src:"https://www.arryblog.com/assets/img/image-20230108014556525-168095428446110.2669a942.png",alt:"image-20230108014556525"})],-1),an=n("p",null,"注：",-1),tn=n("li",null,"域名只支持 HTTPS 协议",-1),en=n("li",null,"域名不能使用 IP 地址 或 localhost",-1),pn=n("li",null,"域名必须经过 ICP 备案",-1),on={href:"https://developers.weixin.qq.com/community/develop/doc/000ace660a8018bbae6acd15956800",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html",target:"_blank",rel:"noopener noreferrer"},ln=e(`<h3 id="_3、发起-get-请求" tabindex="-1"><a class="header-anchor" href="#_3、发起-get-请求" aria-hidden="true">#</a> 3、发起 GET 请求</h3><p>TIP</p><p>调用微信小程序提供的 <code>wx.request()</code> 方法，可以发起 GET 数据请求</p><p>在 <code>.wxml</code> 中定义一个按钮</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/request/request.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getInfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>发起 GET 请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>.js</code> 中定义方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/request/request.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 请求的接口地址，必须是 HTTPS 协议的</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://www.fastmock.site/mock/f0905ad9e9d4f8cf946be47b97f126a3/icoding/api/words&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 请求方式</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 发送到服务器的数据</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;arry&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&quot;man&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 请求成功之后的回调函数</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fastmock 中定义的数据，如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;javascript&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;python&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c/c++&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node.js&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;php&quot;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><p><img src="https://www.arryblog.com/assets/img/image-20230409122838844.f1049941.png" alt="image-20230409122838844"></p><h3 id="_4、发起-post-请求" tabindex="-1"><a class="header-anchor" href="#_4、发起-post-请求" aria-hidden="true">#</a> 4、发起 POST 请求</h3><p>TIP</p><p>发起 HTTP 的 POST 请求，以下是以用户登录为例</p><p>在 fastmock 中定义的数据接口，如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;verifySuccess&quot;</span><span class="token operator">:</span> function(<span class="token punctuation">{</span>_req<span class="token punctuation">,</span> Mock<span class="token punctuation">}</span>) <span class="token punctuation">{</span>
      let body = _req.body;
      if(body.username === &#39;admin&#39; &amp;&amp; body.password === &#39;<span class="token number">123456</span>&#39;)<span class="token punctuation">{</span>
        return <span class="token string">&quot;登录成功 ！&quot;</span>;
      <span class="token punctuation">}</span> else <span class="token punctuation">{</span>
        return <span class="token string">&quot;用户名或密码错误 ！&quot;</span>;
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;userInfo&quot;</span><span class="token operator">:</span> function(<span class="token punctuation">{</span>_req<span class="token punctuation">,</span> Mock<span class="token punctuation">}</span>) <span class="token punctuation">{</span>
      let body = _req.body;
      if (body.username === &#39;admin&#39; &amp;&amp; body.password === &#39;<span class="token number">123456</span>&#39;) <span class="token punctuation">{</span>
        return Mock.mock(<span class="token punctuation">{</span>
          username<span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
          email<span class="token operator">:</span> <span class="token string">&quot;@email&quot;</span><span class="token punctuation">,</span>
          address<span class="token operator">:</span> <span class="token string">&quot;@county(true)&quot;</span>
        <span class="token punctuation">}</span>);
      <span class="token punctuation">}</span> else <span class="token punctuation">{</span>
        return <span class="token string">&quot;用户名或密码错误&quot;</span>;
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;desc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;成功&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 fastmock 预览接口地址</p><p><img src="https://www.arryblog.com/assets/img/image-20230410115812448.07ce6600.png" alt="image-20230410115812448"></p><p>在 <code>.wxml</code> 定义按钮</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/request/request.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>postInfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>发起 POST 请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>.js</code> 中定义方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/request/request.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">postInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 请求的接口地址，必须是 HTTPS 协议的</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://www.fastmock.site/mock/f0905ad9e9d4f8cf946be47b97f126a3/icoding/user/login&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 请求方式</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 发送到服务器的数据</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 请求成功之后的回调函数</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果</p><p><img src="https://www.arryblog.com/assets/img/image-20230409123616801.e13a8f41.png" alt="image-20230409123616801"></p><h3 id="_5、在页面加载时请求数据" tabindex="-1"><a class="header-anchor" href="#_5、在页面加载时请求数据" aria-hidden="true">#</a> 5、在页面加载时请求数据</h3><p>TIP</p><p>在很多情况下，我们需要在页面刚加载的时候，自动请求一些初始化的数据。我们只需要在页面的 onLoad 生命周期函数中调用获取数据的函数即可</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/network/network.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 发起 GET 请求</span>
  <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 请求的接口地址，必须是 HTTPS 协议</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://www.fastmock.site/mock/f0905ad9e9d4f8cf946be47b97f126a3/icoding/api/words&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 请求方式</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
      <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在页面刚刚加载时，请求数据</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、跳过-request-合法域名校验" tabindex="-1"><a class="header-anchor" href="#_6、跳过-request-合法域名校验" aria-hidden="true">#</a> 6、跳过 request 合法域名校验</h3><p>TIP</p><p>如后端开发者仅提供了 HTTP 协议的接口，暂时没有提供 HTTPS 协议的接口。</p><p>为了不耽误开发进度，我们可以在微信开发者工具中，临时开启 <strong>“不校验合法域名、web-view(业务域名)、TLS 版本以及 HTTPS 证书”</strong> 选项（在微信开发者工具中勾选即可）。即跳过 request 合法域名的校验</p><p><img src="https://www.arryblog.com/assets/img/image-20230409125018444.65660585.png" alt="image-20230409125018444"></p><h3 id="_7、关于跨域-和-ajax-的解析" tabindex="-1"><a class="header-anchor" href="#_7、关于跨域-和-ajax-的解析" aria-hidden="true">#</a> 7、关于跨域 和 Ajax 的解析</h3><p>TIP</p><p>跨域问题只存在于基于浏览器的 Web 开发中，由于 小程序的宿主环境不是浏览器，而是微信客户端，所以小程序中不存在跨域的问题。</p><p>Ajax 技术的核心依赖于浏览器中的 <code>XMLHttpRequest</code> 对象，由于小程序的宿主环境是微信客户端，所以小程序中不能叫做 “发起 Ajax 请求” ，而是叫做 “发起网络数据请求”。</p><h2 id="六、上拉触底分页数据加载综合实践应用" tabindex="-1"><a class="header-anchor" href="#六、上拉触底分页数据加载综合实践应用" aria-hidden="true">#</a> 六、上拉触底分页数据加载综合实践应用</h2><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-8-4-57-01-16810876397551.ec6717f1.gif" alt="GIF-2023-4-8-4-57-01"></p><p>实现上拉触底的综合实践应用的步骤</p><ul><li>①、定义获取随机颜色值的方法（使用 fastmock 定义数据接口）</li><li>②、在页面加载时初始化数据</li><li>③、渲染页面 UI 结构并定义页面样式</li><li>④、在上拉触底时调用获取随机颜色的方法</li><li>⑤、添加 loading 正在加载效果</li><li>⑥、对上拉触底进行节流处理</li></ul><h3 id="_1、使用-fastmock-定义随机生成颜色的数据接口" tabindex="-1"><a class="header-anchor" href="#_1、使用-fastmock-定义随机生成颜色的数据接口" aria-hidden="true">#</a> 1、使用 fastmock 定义随机生成颜色的数据接口</h3><p>TIP</p><p>在 fastmock 中定义动态生成数据的 JSON 数据</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> function(<span class="token punctuation">{</span>Mock<span class="token punctuation">}</span>) <span class="token punctuation">{</span>
      return Mock.mock(<span class="token punctuation">{</span><span class="token property">&quot;colorList|10&quot;</span><span class="token operator">:</span>
        <span class="token punctuation">[</span>
          <span class="token string">&quot;@rgba()&quot;</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>)
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;desc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;成功&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.arryblog.com/assets/img/image-20230409135352375.5daa1c53.png" alt="image-20230409135352375"></p><p>预览接口</p><p><img src="https://www.arryblog.com/assets/img/image-20230410120145489.15e7e8e9.png" alt="image-20230410120145489"></p><h3 id="_2、定义获取随机颜色值的方法-和-初始化数据" tabindex="-1"><a class="header-anchor" href="#_2、定义获取随机颜色值的方法-和-初始化数据" aria-hidden="true">#</a> 2、定义获取随机颜色值的方法 和 初始化数据</h3><p>TIP</p><p>在<code>.js</code> 页面逻辑中，先在控制台中打印输出</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/reach-bottom/reach-bottom.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">colorList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 获取颜色值</span>
  <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://www.fastmock.site/mock/5937c42ca063e4fea4ae49cbbef977f0/icoding/color&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// console.log(res.data.colorList)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token comment">// 将新数据拼接到旧数据中，并更新 data 中的 colorList</span>
          <span class="token literal-property property">colorList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>colorList<span class="token punctuation">,</span> <span class="token operator">...</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>colorList<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、渲染页面-ui-结构并定义页面样式" tabindex="-1"><a class="header-anchor" href="#_3、渲染页面-ui-结构并定义页面样式" aria-hidden="true">#</a> 3、渲染页面 UI 结构并定义页面样式</h3><p>在 <code>.wxml</code> 中渲染页面结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--pages/reach-bottom/reach-bottom.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>banner<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{colorList}}<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token selector">background-color:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> item <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span>
  {{ item }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>.wxss</code> 中定义页面样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* pages/reach-bottom/reach-bottom.wxss */</span>
<span class="token selector">.banner</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200rpx<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 20rpx<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 200rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、上拉触底获取随机颜色值" tabindex="-1"><a class="header-anchor" href="#_4、上拉触底获取随机颜色值" aria-hidden="true">#</a> 4、上拉触底获取随机颜色值</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 页面上拉触底事件的处理函数</span>
<span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 调用随机获取颜色值的方法</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、添加-loading-的提示效果" tabindex="-1"><a class="header-anchor" href="#_5、添加-loading-的提示效果" aria-hidden="true">#</a> 5、添加 loading 的提示效果</h3><p>TIP</p>`,61),un={href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html",target:"_blank",rel:"noopener noreferrer"},rn=n("code",null,"wx.hideLoading",-1),dn=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取颜色值</span>
<span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token comment">// 显示 loading</span>
    wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;数据加载中 ...&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// 发起网络请求，获取随机颜色值</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

        <span class="token comment">// ...... 此处省略</span>

        <span class="token function-variable function">complete</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token comment">// 隐藏loading</span>
            wx<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下</p><p><img src="https://www.arryblog.com/assets/img/GIF-2023-4-10-0-15-23.c7fb792b.gif" alt="GIF-2023-4-10-0-15-23"></p><h3 id="_6、对上拉触底进行节流处理" tabindex="-1"><a class="header-anchor" href="#_6、对上拉触底进行节流处理" aria-hidden="true">#</a> 6、对上拉触底进行节流处理</h3><p>TIP</p><p>①、在 <code>data</code> 中定义 <code>isLoading</code> 节流阀</p><ul><li><code>isLoading: false</code> 表示当前没有进行任何数据请求，即可以发起后续的数据请求</li><li><code>isLoading: true</code> 表示当前正在进行数据请求，即额外其他的请求都需要被屏蔽掉</li></ul><p>②、在 <code>getColor()</code> 方法中修改 <code>isLoading</code> 节流阀的值</p><ul><li>在刚刚调用 <code>getColor()</code> 时，将节流阀设置为 <code>true</code>，即后续所有的请求都需要被屏蔽掉</li><li>在网络请求的 complete 回调函数中，将节流阀设置为 <code>false</code> ，即当前的请求已经完成了，后续的请求可以正常发起了</li></ul><p>③、在 <code>onReachBottom()</code> 页面上拉触底生命周期函数中判断节流阀的值，从而对数据请求进行节流控制</p><ul><li>如果节流阀 <code>isLoading</code> 的值为 <code>true</code>，即 阻止当前请求</li><li>如果节流阀 <code>isLoading</code> 的值为 <code>false</code>，即 发起数据请求</li></ul><p>在 <code>.js</code> 页面逻辑中，进行节流处理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/reach-bottom/reach-bottom.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面的初始数据</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">colorList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 节流阀</span>
    <span class="token literal-property property">isLoading</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 获取颜色值</span>
  <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 正在发起数据请求</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">isLoading</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 显示 loading</span>
    wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;数据加载中 ...&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://www.fastmock.site/mock/5937c42ca063e4fea4ae49cbbef977f0/icoding/color&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// console.log(res.data.colorList)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">colorList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>colorList<span class="token punctuation">,</span> <span class="token operator">...</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>colorList<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 当网络数据请求完成后</span>
      <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 隐藏loading</span>
        wx<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 将 节流阀设置为 false</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">isLoading</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 生命周期函数--监听页面加载</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 页面上拉触底事件的处理函数</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果节流阀为 true 时，直接 return，不做任何数据请求</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>isLoading<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">// 调用随机获取颜色值的方法</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function kn(vn,mn){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("blockquote",null,[n("p",null,[s("详细查阅 "),n("a",r,[s("小程序官方文档 - navigator(opens new window)"),t(a)])])]),d,n("blockquote",null,[n("p",null,[s("其中 Object 参数对象的属性列表如下，详细查阅"),n("a",k,[s("小程序官方文档(opens new window)"),t(a)])])]),n("table",null,[v,n("tbody",null,[n("tr",null,[m,g,b,n("td",h,[s("需要跳转的 tabBar 页面的路径 (代码包路径)（需在 app.json 的 "),n("a",f,[s("tabBar (opens new window)"),t(a)]),s("字段定义的页面），路径后不能带参数。")])]),q,y,w])]),x,n("blockquote",null,[n("p",null,[s("其中 Object 参数对象的属性列表如下，详细查阅"),n("a",_,[s("小程序官方文档(opens new window)"),t(a)])])]),n("table",null,[j,n("tbody",null,[P,I,n("tr",null,[T,B,L,n("td",A,[s("2.29.2 自定义路由类型，相关文档 "),n("a",D,[s("自定义路由(opens new window)"),t(a)])])]),G,E,S])]),F,n("blockquote",null,[n("p",null,[s("其中 Object 参数对象属性列表如下，详细查阅"),n("a",R,[s("小程序官方文档(opens new window)"),t(a)])])]),C,n("ul",null,[n("li",null,[s("①、全局开启下拉刷新。详情查阅 "),n("a",O,[s("小程序官方文档(opens new window)"),t(a)])])]),H,n("ul",null,[n("li",null,[s("②、局部开启下拉刷新。详情查阅 "),n("a",M,[s("小程序官方文档(opens new window)"),t(a)])])]),N,n("p",null,[s("在页面的 "),V,s(" 文件中，通过 "),n("a",U,[s("onPullDownRefresh() (opens new window)"),t(a)]),s("生命周期函数即可监听当前页面的下拉刷新事件")]),W,n("blockquote",null,[n("p",null,[s("因此，需要手动隐藏 loading 效果，使用"),n("a",J,[s("wx.stopPullDownRefresh(Object object) (opens new window)"),t(a)]),s("停止当前页面的下拉刷新。")])]),Q,n("p",null,[s("在全局 或 页面的 "),X,s(" 页面配置文件中，通过 "),n("a",$,[s("onReachBottomDistance (opens new window)"),t(a)]),s("属性来配置上拉触底的距离。默认触底距离为 "),z,s("，在实际开发中根据自己的需求修改值即可")]),K,n("p",null,[s("小程序官方把 API 分为 3 大类，详细查阅 "),n("a",Y,[s("小程序官方文档 - API(opens new window)"),t(a)])]),Z,n("blockquote",null,[n("p",null,[s("配置流程：登录微信小程序管理后台 -> 开发 -> 开发管理 -> 开发设置 -> 服务器域名 -> 配置 或 修改 request 合法域名 即可。第一次课中也有讲过，详细见 "),n("a",nn,[s("小程序配置服务器(opens new window)"),t(a)])])]),sn,an,n("ul",null,[tn,en,pn,n("li",null,[s("服务器域名一个月内最多修改 5 次，后台显示次数和实际不符，详情见"),n("a",on,[s("社区问答(opens new window)"),t(a)])])]),n("blockquote",null,[n("p",null,[s("详细查阅 "),n("a",cn,[s("小程序官方文档 - 网络(opens new window)"),t(a)])])]),ln,n("p",null,[s("详情查阅 "),n("a",un,[s("小程序官方文档 - 显示 loading 提示框 (opens new window)"),t(a)]),s("，需主动调用 "),rn,s(" 才能关闭提示框")]),dn])}const bn=p(i,[["render",kn],["__file","weixinxiaochengxuyemiandaohang、chuancan、shijian、API、wangluoqingqiu.html.vue"]]);export{bn as default};
