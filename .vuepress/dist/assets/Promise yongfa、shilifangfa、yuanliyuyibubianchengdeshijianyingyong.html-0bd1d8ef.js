const e=JSON.parse('{"key":"v-ad45fd36","path":"/blogs/web/es6/Promise yongfa、shilifangfa、yuanliyuyibubianchengdeshijianyingyong.html","title":"Promise 用法、实例方法、原理与异步编程的实践应用","lang":"en-US","frontmatter":{"title":"Promise 用法、实例方法、原理与异步编程的实践应用","date":"2023-10-30T00:00:00.000Z","sidebar":"auto","categories":["ES6"],"tags":["ES6"],"publish":true},"headers":[{"level":2,"title":"一、认识 Promise","slug":"一、认识-promise","link":"#一、认识-promise","children":[{"level":3,"title":"1、什么是 Promise","slug":"_1、什么是-promise","link":"#_1、什么是-promise","children":[]},{"level":3,"title":"2、什么时候使用 Promise","slug":"_2、什么时候使用-promise","link":"#_2、什么时候使用-promise","children":[]}]},{"level":2,"title":"二、Promise 的基本用法","slug":"二、promise-的基本用法","link":"#二、promise-的基本用法","children":[{"level":3,"title":"1、 创建 Promise 实例","slug":"_1、-创建-promise-实例","link":"#_1、-创建-promise-实例","children":[]},{"level":3,"title":"2、Promise 的三种状态","slug":"_2、promise-的三种状态","link":"#_2、promise-的三种状态","children":[]},{"level":3,"title":"3、注意事项","slug":"_3、注意事项","link":"#_3、注意事项","children":[]},{"level":3,"title":"4、then 方法的简单应用","slug":"_4、then-方法的简单应用","link":"#_4、then-方法的简单应用","children":[]},{"level":3,"title":"5、resolve 和 reject 参数","slug":"_5、resolve-和-reject-参数","link":"#_5、resolve-和-reject-参数","children":[]},{"level":3,"title":"6、resolve 和 reject 函数的参数","slug":"_6、resolve-和-reject-函数的参数","link":"#_6、resolve-和-reject-函数的参数","children":[]}]},{"level":2,"title":"三、Promise 的实例方法","slug":"三、promise-的实例方法","link":"#三、promise-的实例方法","children":[{"level":3,"title":"1、then 方法","slug":"_1、then-方法","link":"#_1、then-方法","children":[]},{"level":3,"title":"1.1 、then 方法什么时候执行","slug":"_1-1-、then-方法什么时候执行","link":"#_1-1-、then-方法什么时候执行","children":[]},{"level":3,"title":"1.2、then 方法的简写","slug":"_1-2、then-方法的简写","link":"#_1-2、then-方法的简写","children":[]},{"level":3,"title":"1.3 、then 方法返回值","slug":"_1-3-、then-方法返回值","link":"#_1-3-、then-方法返回值","children":[]},{"level":3,"title":"1.4 、then 方法向后传值","slug":"_1-4-、then-方法向后传值","link":"#_1-4-、then-方法向后传值","children":[]},{"level":3,"title":"1.5 、then 返回失败的 Promise","slug":"_1-5-、then-返回失败的-promise","link":"#_1-5-、then-返回失败的-promise","children":[]},{"level":3,"title":"1.6、测试题","slug":"_1-6、测试题","link":"#_1-6、测试题","children":[]},{"level":3,"title":"2、catch 方法","slug":"_2、catch-方法","link":"#_2、catch-方法","children":[]},{"level":3,"title":"2.1、catch 方法有什么好处理呢 ？","slug":"_2-1、catch-方法有什么好处理呢","link":"#_2-1、catch-方法有什么好处理呢","children":[]},{"level":3,"title":"2.2、总结","slug":"_2-2、总结","link":"#_2-2、总结","children":[]},{"level":3,"title":"3、finally 方法","slug":"_3、finally-方法","link":"#_3、finally-方法","children":[]}]},{"level":2,"title":"四、Promise 的实践和应用","slug":"四、promise-的实践和应用","link":"#四、promise-的实践和应用","children":[{"level":3,"title":"1、Promise 实现继发加载 5 张图片","slug":"_1、promise-实现继发加载-5-张图片","link":"#_1、promise-实现继发加载-5-张图片","children":[]},{"level":3,"title":"2、Promise 实现并发加载 5 张图片","slug":"_2、promise-实现并发加载-5-张图片","link":"#_2、promise-实现并发加载-5-张图片","children":[]},{"level":3,"title":"3、Generator 函数实现继发加载 5 张图片","slug":"_3、generator-函数实现继发加载-5-张图片","link":"#_3、generator-函数实现继发加载-5-张图片","children":[]},{"level":3,"title":"4、Generator 函数实现并发加载 5 张图片","slug":"_4、generator-函数实现并发加载-5-张图片","link":"#_4、generator-函数实现并发加载-5-张图片","children":[]}]},{"level":2,"title":"五、Promise 的构造函数方法","slug":"五、promise-的构造函数方法","link":"#五、promise-的构造函数方法","children":[{"level":3,"title":"1、Promise.resolve() 方法","slug":"_1、promise-resolve-方法","link":"#_1、promise-resolve-方法","children":[]},{"level":3,"title":"2、Promise.reject() 方法","slug":"_2、promise-reject-方法","link":"#_2、promise-reject-方法","children":[]},{"level":3,"title":"3、Promise.all() 方法","slug":"_3、promise-all-方法","link":"#_3、promise-all-方法","children":[]},{"level":3,"title":"4、Promise.race() 方法","slug":"_4、promise-race-方法","link":"#_4、promise-race-方法","children":[]},{"level":3,"title":"5、Promise.race() 应用","slug":"_5、promise-race-应用","link":"#_5、promise-race-应用","children":[]},{"level":3,"title":"6、Promise.allSettled() 方法","slug":"_6、promise-allsettled-方法","link":"#_6、promise-allsettled-方法","children":[]},{"level":3,"title":"7、Promise.any() 方法","slug":"_7、promise-any-方法","link":"#_7、promise-any-方法","children":[]},{"level":3,"title":"8、经典面试题","slug":"_8、经典面试题","link":"#_8、经典面试题","children":[]}]},{"level":2,"title":"六、总结","slug":"六、总结","link":"#六、总结","children":[{"level":3,"title":"1、认识 Promise","slug":"_1、认识-promise","link":"#_1、认识-promise","children":[]},{"level":3,"title":"2、Promise 3 种状态","slug":"_2、promise-3-种状态","link":"#_2、promise-3-种状态","children":[]},{"level":3,"title":"3、Promise 的基本用法","slug":"_3、promise-的基本用法","link":"#_3、promise-的基本用法","children":[]},{"level":3,"title":"4、Promise 的实例方法","slug":"_4、promise-的实例方法","link":"#_4、promise-的实例方法","children":[]},{"level":3,"title":"5、Promise 的构造函数方法","slug":"_5、promise-的构造函数方法","link":"#_5、promise-的构造函数方法","children":[]}]},{"level":2,"title":"七、测试题","slug":"七、测试题","link":"#七、测试题","children":[{"level":3,"title":"1、下面代码中 Promise 对象的最终状态是 ？","slug":"_1、下面代码中-promise-对象的最终状态是","link":"#_1、下面代码中-promise-对象的最终状态是","children":[]},{"level":3,"title":"2、下面代码输出的结果是 ？","slug":"_2、下面代码输出的结果是","link":"#_2、下面代码输出的结果是","children":[]},{"level":3,"title":"3、以下代码最终执行结果","slug":"_3、以下代码最终执行结果","link":"#_3、以下代码最终执行结果","children":[]},{"level":3,"title":"4、关于 Promise.resolve 方法说法错误的是 ?","slug":"_4、关于-promise-resolve-方法说法错误的是","link":"#_4、关于-promise-resolve-方法说法错误的是","children":[]},{"level":3,"title":"5、以下说法错误的是 ?","slug":"_5、以下说法错误的是","link":"#_5、以下说法错误的是","children":[]}]}],"git":{"createdTime":1698508794000,"updatedTime":1705051907000,"contributors":[{"name":"xunyu","email":"2548126293@qq.com","commits":2}]},"filePathRelative":"blogs/web/es6/Promise 用法、实例方法、原理与异步编程的实践应用.md"}');export{e as data};
