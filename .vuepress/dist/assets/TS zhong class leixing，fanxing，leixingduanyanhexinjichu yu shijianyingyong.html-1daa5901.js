const l=JSON.parse('{"key":"v-1e527c91","path":"/blogs/web/typescript/TS zhong class leixing，fanxing，leixingduanyanhexinjichu yu shijianyingyong.html","title":"TS 中 class 类型，泛型，类型断言核心基础 与 实践应用","lang":"en-US","frontmatter":{"title":"TS 中 class 类型，泛型，类型断言核心基础 与 实践应用","date":"2023-10-28T00:00:00.000Z","sidebar":"auto","categories":["typescript"],"tags":["typescript"],"publish":true},"headers":[{"level":2,"title":"一、TS 中的 class 类型","slug":"一、ts-中的-class-类型","link":"#一、ts-中的-class-类型","children":[{"level":3,"title":"1、属性的类型","slug":"_1、属性的类型","link":"#_1、属性的类型","children":[]},{"level":3,"title":"1.1、属性的类型 - 注意事项","slug":"_1-1、属性的类型-注意事项","link":"#_1-1、属性的类型-注意事项","children":[]},{"level":3,"title":"2、readonly 修饰符","slug":"_2、readonly-修饰符","link":"#_2、readonly-修饰符","children":[]},{"level":3,"title":"3、方法的类型","slug":"_3、方法的类型","link":"#_3、方法的类型","children":[]},{"level":3,"title":"4、存取器方法","slug":"_4、存取器方法","link":"#_4、存取器方法","children":[]},{"level":3,"title":"5、存取器的规则","slug":"_5、存取器的规则","link":"#_5、存取器的规则","children":[]},{"level":3,"title":"6、属性索引","slug":"_6、属性索引","link":"#_6、属性索引","children":[]},{"level":3,"title":"7、ES6 与 TS 中的 class","slug":"_7、es6-与-ts-中的-class","link":"#_7、es6-与-ts-中的-class","children":[]}]},{"level":2,"title":"二、类的 interface 接口","slug":"二、类的-interface-接口","link":"#二、类的-interface-接口","children":[{"level":3,"title":"1、implements 关键字","slug":"_1、implements-关键字","link":"#_1、implements-关键字","children":[]},{"level":3,"title":"1.1、implements 实践","slug":"_1-1、implements-实践","link":"#_1-1、implements-实践","children":[]},{"level":3,"title":"1.2、implements 注意事项","slug":"_1-2、implements-注意事项","link":"#_1-2、implements-注意事项","children":[]},{"level":3,"title":"2、实现多个接口","slug":"_2、实现多个接口","link":"#_2、实现多个接口","children":[]},{"level":3,"title":"2.1、方式一：类的继承","slug":"_2-1、方式一-类的继承","link":"#_2-1、方式一-类的继承","children":[]},{"level":3,"title":"2.2、方式二：接口的继承","slug":"_2-2、方式二-接口的继承","link":"#_2-2、方式二-接口的继承","children":[]},{"level":3,"title":"2.3、接口继承改写","slug":"_2-3、接口继承改写","link":"#_2-3、接口继承改写","children":[]},{"level":3,"title":"2.4、注意事项","slug":"_2-4、注意事项","link":"#_2-4、注意事项","children":[]},{"level":3,"title":"3、类与接口的合并","slug":"_3、类与接口的合并","link":"#_3、类与接口的合并","children":[]}]},{"level":2,"title":"三、Class 类型","slug":"三、class-类型","link":"#三、class-类型","children":[{"level":3,"title":"1、实例类型","slug":"_1、实例类型","link":"#_1、实例类型","children":[]},{"level":3,"title":"2、类的自身类型","slug":"_2、类的自身类型","link":"#_2、类的自身类型","children":[]},{"level":3,"title":"3、结构类型原则","slug":"_3、结构类型原则","link":"#_3、结构类型原则","children":[]},{"level":3,"title":"3.1、结构类型原则 - 注意事项","slug":"_3-1、结构类型原则-注意事项","link":"#_3-1、结构类型原则-注意事项","children":[]},{"level":3,"title":"4、类的继承","slug":"_4、类的继承","link":"#_4、类的继承","children":[]},{"level":3,"title":"5、可访问性修饰符","slug":"_5、可访问性修饰符","link":"#_5、可访问性修饰符","children":[]},{"level":3,"title":"5.1、public","slug":"_5-1、public","link":"#_5-1、public","children":[]},{"level":3,"title":"5.2、private","slug":"_5-2、private","link":"#_5-2、private","children":[]},{"level":3,"title":"5.3、protected","slug":"_5-3、protected","link":"#_5-3、protected","children":[]},{"level":3,"title":"6、实例属性的简写形式","slug":"_6、实例属性的简写形式","link":"#_6、实例属性的简写形式","children":[]},{"level":3,"title":"7、readonly 只读属性","slug":"_7、readonly-只读属性","link":"#_7、readonly-只读属性","children":[]},{"level":3,"title":"8、静态成员","slug":"_8、静态成员","link":"#_8、静态成员","children":[]},{"level":3,"title":"9、泛型类","slug":"_9、泛型类","link":"#_9、泛型类","children":[]},{"level":3,"title":"10、抽象类，抽象成员","slug":"_10、抽象类-抽象成员","link":"#_10、抽象类-抽象成员","children":[]},{"level":3,"title":"10.1、抽象类 - 实践应用","slug":"_10-1、抽象类-实践应用","link":"#_10-1、抽象类-实践应用","children":[]},{"level":3,"title":"10.2、抽象方法的好处","slug":"_10-2、抽象方法的好处","link":"#_10-2、抽象方法的好处","children":[]},{"level":3,"title":"10.3、抽象类、抽象成员 - 注意事项","slug":"_10-3、抽象类、抽象成员-注意事项","link":"#_10-3、抽象类、抽象成员-注意事项","children":[]},{"level":3,"title":"11、多态","slug":"_11、多态","link":"#_11、多态","children":[]},{"level":3,"title":"12、this 问题","slug":"_12、this-问题","link":"#_12、this-问题","children":[]},{"level":3,"title":"13、this 类型","slug":"_13、this-类型","link":"#_13、this-类型","children":[]}]},{"level":2,"title":"四、类 与 接口的关系","slug":"四、类-与-接口的关系","link":"#四、类-与-接口的关系","children":[{"level":3,"title":"1、类类型接口","slug":"_1、类类型接口","link":"#_1、类类型接口","children":[]},{"level":3,"title":"2、接口的继承","slug":"_2、接口的继承","link":"#_2、接口的继承","children":[]},{"level":3,"title":"3、接口继承类","slug":"_3、接口继承类","link":"#_3、接口继承类","children":[]},{"level":3,"title":"4、接口 和 类的关系","slug":"_4、接口-和-类的关系","link":"#_4、接口-和-类的关系","children":[]}]},{"level":2,"title":"五、泛型","slug":"五、泛型","link":"#五、泛型","children":[{"level":3,"title":"1、泛型的概念","slug":"_1、泛型的概念","link":"#_1、泛型的概念","children":[]},{"level":3,"title":"2、为什么使用泛型","slug":"_2、为什么使用泛型","link":"#_2、为什么使用泛型","children":[]},{"level":3,"title":"2.1、泛型的复杂场景","slug":"_2-1、泛型的复杂场景","link":"#_2-1、泛型的复杂场景","children":[]},{"level":3,"title":"2.2、多个类型参数应用","slug":"_2-2、多个类型参数应用","link":"#_2-2、多个类型参数应用","children":[]},{"level":3,"title":"3、泛型的写法","slug":"_3、泛型的写法","link":"#_3、泛型的写法","children":[]},{"level":3,"title":"4、函数的泛型写法","slug":"_4、函数的泛型写法","link":"#_4、函数的泛型写法","children":[]},{"level":3,"title":"5、接口的泛型写法","slug":"_5、接口的泛型写法","link":"#_5、接口的泛型写法","children":[]},{"level":3,"title":"6、类的泛型写法","slug":"_6、类的泛型写法","link":"#_6、类的泛型写法","children":[]},{"level":3,"title":"6.1、实践应用","slug":"_6-1、实践应用","link":"#_6-1、实践应用","children":[]},{"level":3,"title":"7、类型别名的泛型写法","slug":"_7、类型别名的泛型写法","link":"#_7、类型别名的泛型写法","children":[]},{"level":3,"title":"8、类型参数的默认值","slug":"_8、类型参数的默认值","link":"#_8、类型参数的默认值","children":[]},{"level":3,"title":"9、数组的泛型表示","slug":"_9、数组的泛型表示","link":"#_9、数组的泛型表示","children":[]},{"level":3,"title":"10、类型参数的约束条件","slug":"_10、类型参数的约束条件","link":"#_10、类型参数的约束条件","children":[]},{"level":3,"title":"11、泛型使用注意事项","slug":"_11、泛型使用注意事项","link":"#_11、泛型使用注意事项","children":[]},{"level":3,"title":"11.1、尽量少用泛型","slug":"_11-1、尽量少用泛型","link":"#_11-1、尽量少用泛型","children":[]},{"level":3,"title":"11.2、类型参数越少越好","slug":"_11-2、类型参数越少越好","link":"#_11-2、类型参数越少越好","children":[]},{"level":3,"title":"11.3、类型参数需要出现两次","slug":"_11-3、类型参数需要出现两次","link":"#_11-3、类型参数需要出现两次","children":[]},{"level":3,"title":"11.4、泛型可以嵌套","slug":"_11-4、泛型可以嵌套","link":"#_11-4、泛型可以嵌套","children":[]},{"level":3,"title":"12、总结","slug":"_12、总结","link":"#_12、总结","children":[]},{"level":3,"title":"13、泛型的好处","slug":"_13、泛型的好处","link":"#_13、泛型的好处","children":[]}]},{"level":2,"title":"六、类型断言","slug":"六、类型断言","link":"#六、类型断言","children":[{"level":3,"title":"1、类型断言的语法","slug":"_1、类型断言的语法","link":"#_1、类型断言的语法","children":[]},{"level":3,"title":"1.1、类型断言 - 注意事项","slug":"_1-1、类型断言-注意事项","link":"#_1-1、类型断言-注意事项","children":[]},{"level":3,"title":"1.2、类型断言的作用","slug":"_1-2、类型断言的作用","link":"#_1-2、类型断言的作用","children":[]},{"level":3,"title":"2、类型断言的条件","slug":"_2、类型断言的条件","link":"#_2、类型断言的条件","children":[]},{"level":3,"title":"3、as const 断言","slug":"_3、as-const-断言","link":"#_3、as-const-断言","children":[]},{"level":3,"title":"3.1、as const 断言 - 注意事项","slug":"_3-1、as-const-断言-注意事项","link":"#_3-1、as-const-断言-注意事项","children":[]},{"level":3,"title":"3.2、数组字面量使用断言","slug":"_3-2、数组字面量使用断言","link":"#_3-2、数组字面量使用断言","children":[]},{"level":3,"title":"4、非空断言","slug":"_4、非空断言","link":"#_4、非空断言","children":[]},{"level":3,"title":"5、断言函数","slug":"_5、断言函数","link":"#_5、断言函数","children":[]},{"level":3,"title":"5.1、断言函数的用法","slug":"_5-1、断言函数的用法","link":"#_5-1、断言函数的用法","children":[]},{"level":3,"title":"5.2、断言函数 - 注意事项","slug":"_5-2、断言函数-注意事项","link":"#_5-2、断言函数-注意事项","children":[]},{"level":3,"title":"5.3、断言函数的实践应用","slug":"_5-3、断言函数的实践应用","link":"#_5-3、断言函数的实践应用","children":[]}]}],"git":{"createdTime":1698505250000,"updatedTime":1698505250000,"contributors":[{"name":"xunyu","email":"2548126293@qq.com","commits":1}]},"filePathRelative":"blogs/web/typescript/TS 中 class 类型，泛型，类型断言核心基础 与 实践应用.md"}');export{l as data};
