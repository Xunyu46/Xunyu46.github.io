import{_ as p,r as o,o as l,c as i,b as s,d as n,e,a as t}from"./app-48690364.js";const r={},c=t('<p>图形图像资源是当代 Web 应用的最常用、实惠的内容、装饰元素之一，但在 Webpack 出现之前对图像资源的处理复杂度特别高，需要借助一系列工具(甚至 Photoshop)完成压缩、雪碧图、hash、部署等操作。</p><p>而在 Webpack 中，图像以及其它多媒体资源都被提升为一等公民 —— 能够像引用普通 JavaScript 模块一样通过 <code>import/require</code> 语句导入资源模块，这种开发模式允许我们将图像相关的处理合入统一的心智模型中，提升开发效率。</p><p>本文将集中介绍 Webpack 体系下处理图像资源的常见方法，包括：</p><ul><li>如何使用适当的 Loader 处理图像资源；</li><li>如何借助 Loader 或插件实现图像优化，包括压缩、雪碧图、响应式图片。</li></ul><h2 id="在-webpack-4-中导入图像" tabindex="-1"><a class="header-anchor" href="#在-webpack-4-中导入图像" aria-hidden="true">#</a> 在 Webpack 4 中导入图像</h2><p>原生 Webpack 4 只能处理标准 JavaScript 模块，因此需要借助 Loader —— 例如 <code>file-loader</code>、<code>url-loader</code>、<code>raw-loader</code> 等完成图像加载操作，实践中我们通常需要按资源类型选择适当加载器，简单介绍：</p>',6),u={href:"https://v4.webpack.js.org/loaders/file-loader/",target:"_blank",rel:"noopener noreferrer"},d=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;file-loader&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过 <code>file-loader</code> 处理后，原始图片会被重命名并复制到产物文件夹，同时在代码中插入图片 URL 地址，形如：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f6384383d6df4060b973bd3ad8f261eb~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p>`,3),k={href:"https://v4.webpack.js.org/loaders/url-loader/",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"limit",-1),m=s("code",null,"file-loader",-1),b=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">1024</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过 <code>url-loader</code> 处理后，小于 <code>limit</code> 参数即 1024B 的图片会被转译为 Base64 编码，如：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6d735d771f4c4436bc0b80e145098314~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>对于超过 <code>limit</code> 值的图片则直接调用 <code>file-loader</code> 完成加载。</p><p><code>url-loader</code> 同样适用于大多数图片格式，且能将许多细小的图片直接内嵌进产物中，减少页面运行时需要发出的网络请求数，在 HTTP 1.1 及之前版本中能带来正向的性能收益。</p>`,5),g={href:"https://v4.webpack.js.org/loaders/raw-loader",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;raw-loader&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过 <code>raw-loader</code> 处理后，SVG 资源会被直接复制成字符串形式：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c51ac80e214c41b2b695b2ea71e5ab33~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p>`,3),_=s("p",null,[n("提示：除 "),s("code",null,"raw-loader"),n(" 外，我们还可以使用如下 Loader 加载 SVG 资源：")],-1),y={href:"https://www.npmjs.com/package/svg-inline-loader",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.npmjs.com/package/svg-url-loader",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Data_URIs",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.npmjs.com/package/react-svg-loader",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.npmjs.com/package/@svgr/webpack",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.npmjs.com/package/vue-svg-loader",target:"_blank",rel:"noopener noreferrer"},z=s("h2",{id:"在-webpack-5-中导入图像",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#在-webpack-5-中导入图像","aria-hidden":"true"},"#"),n(" 在 Webpack 5 中导入图像")],-1),W=s("p",null,[n("上述 "),s("code",null,"file-loader"),n("、"),s("code",null,"url-loader"),n("、"),s("code",null,"raw-loader"),n(" 都并不局限于处理图片，它们还可以被用于加载任意类型的多媒体或文本文件，使用频率极高，几乎已经成为标配组件！所以 Webpack5 直接内置了这些能力，开箱即可使用。")],-1),S=s("code",null,"module.rules.type",-1),T={href:"https://webpack.js.org/guides/asset-modules/",target:"_blank",rel:"noopener noreferrer"},L=t(`<ul><li><code>file-loader</code> 对标到 <code>type = &quot;asset/resource&quot;&#39;</code>：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
<span class="token operator">-</span>     use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;file-loader&#39;</span><span class="token punctuation">]</span>
<span class="token operator">+</span>     type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),G=s("code",null,"asset/resource",-1),P=s("code",null,"[hash][ext][query]",-1),V={href:"https://webpack.js.org/configuration/output/#outputassetmodulefilename",target:"_blank",rel:"noopener noreferrer"},F=t(`<ul><li><code>url-loader</code> 对标到 <code>type = &quot;asset&quot;</code> 或 <code>type = &quot;asset/inline&quot;</code>：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
<span class="token operator">-</span>     use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
<span class="token operator">-</span>       loader<span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>
<span class="token operator">-</span>       options<span class="token operator">:</span> <span class="token punctuation">{</span>
<span class="token operator">-</span>         limit<span class="token operator">:</span> <span class="token number">1024</span>
<span class="token operator">-</span>       <span class="token punctuation">}</span>
<span class="token operator">-</span>     <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token operator">+</span>     type<span class="token operator">:</span> <span class="token string">&quot;asset&quot;</span><span class="token punctuation">,</span>
<span class="token operator">+</span>     parser<span class="token operator">:</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>        dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>          maxSize<span class="token operator">:</span> <span class="token number">1024</span> <span class="token comment">// 1kb</span>
<span class="token operator">+</span>        <span class="token punctuation">}</span>
<span class="token operator">+</span>     <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),H={href:"https://webpack.js.org/configuration/module/#ruleparserdataurlcondition",target:"_blank",rel:"noopener noreferrer"},J=s("code",null,"url-loader",-1),E=s("code",null,"limit",-1),U=t(`<ul><li><code>raw-loader</code> 对标到 <code>type = &quot;asset/source&quot;</code>：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>
<span class="token operator">-</span>       use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;raw-loader&#39;</span><span class="token punctuation">]</span>
<span class="token operator">+</span>       type<span class="token operator">:</span> <span class="token string">&quot;asset/source&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),N=s("code",null,"module.rules.type",-1),M={href:"https://webpack.js.org/guides/asset-modules/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://webpack.js.org/configuration/module/#ruletype",target:"_blank",rel:"noopener noreferrer"},D=s("code",null,"module.rules.type",-1),R=t('<h2 id="图像优化-压缩" tabindex="-1"><a class="header-anchor" href="#图像优化-压缩" aria-hidden="true">#</a> 图像优化：压缩</h2><p>前面介绍的 Loader 与 Asset Modules 都只是解决了图像资源加载 —— 也就是让 Webpack 能够理解、处理图像资源，现实中我们还需要为 Web 页面中的图片做各种优化，提升页面性能，常见的优化方法包括：</p><ul><li><strong>图像压缩</strong>：减少网络上需要传输的流量；</li><li><strong>雪碧图</strong>：减少 HTTP 请求次数；</li><li><strong>响应式图片</strong>：根据客户端设备情况下发适当分辨率的图片，有助于减少网络流量；</li><li><strong>CDN</strong>：减少客户端到服务器之间的物理链路长度，提升传输效率；</li><li>等等。</li></ul><p>这其中有不少可以在开发、构建阶段借助 Webpack 搭建自动优化工作流，例如：图像压缩。</p>',4),Z={href:"https://github.com/tcoopman/image-webpack-loader",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.npmjs.com/package/imagemin-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/webpack-contrib/image-minimizer-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/tcoopman/image-webpack-loader",target:"_blank",rel:"noopener noreferrer"},O=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yarn add -D image-webpack-loader
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后配置 Loader：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(gif|png|jpe?g|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>
      <span class="token comment">// type 属性适用于 Webpack5，旧版本可使用 file-loader</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset/resource&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;image-webpack-loader&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">// jpeg 压缩配置</span>
          <span class="token literal-property property">mozjpeg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token number">80</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),$={href:"https://github.com/tcoopman/image-webpack-loader",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://github.com/imagemin/imagemin",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/imagemin/imagemin-mozjpeg",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/kevva/imagemin-optipng",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/imagemin/imagemin-pngquant",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/kevva/imagemin-svgo",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://github.com/kevva/imagemin-gifsicle",target:"_blank",rel:"noopener noreferrer"},an={href:"https://github.com/imagemin/imagemin-webp",target:"_blank",rel:"noopener noreferrer"},en=t(`<p>基本上已经覆盖 Web 页面常用的图片格式，具体用法可点击上述链接查阅，此处不再赘述。最后补充一点，图像压缩是一种非常耗时的操作，建议只在生产环境下开启：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;image-webpack-loader&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>         disable<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span>
          <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="图像优化-雪碧图" tabindex="-1"><a class="header-anchor" href="#图像优化-雪碧图" aria-hidden="true">#</a> 图像优化：雪碧图</h2><p>在 HTTP 2 之前，HTTP 请求-响应是一种性能低下的通讯模型，即使是为了请求一个非常少的数据，也可能需要完整经历：建立 TCP 连接 =&gt; 发送 HTTP 请求 =&gt; 服务端处理 =&gt; 返回响应数据整个过程，加之 HTTP 协议的队首阻塞、浏览器并发请求数限制等原因，迫使我们必须尽量减少 HTTP 请求数以提升网络通讯效率。</p>`,4),tn=s("code",null,"background-position",-1),pn=s("strong",null,"雪碧图",-1),on={href:"https://www.npmjs.com/package/webpack-spritesmith",target:"_blank",rel:"noopener noreferrer"},ln=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yarn add -D webpack-spritesmith
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后添加配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;assets&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">SpritesmithPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 需要</span>
      <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">cwd</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/icons&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">glob</span><span class="token operator">:</span> <span class="token string">&#39;*.png&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">image</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/assets/sprite.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">css</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/assets/sprite.less&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),rn={href:"https://www.npmjs.com/package/webpack-spritesmith",target:"_blank",rel:"noopener noreferrer"},cn=s("code",null,"src.cwd",-1),un=s("code",null,"src.glob",-1),dn=s("code",null,"target.image",-1),kn=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>load-img
├─ src
│  ├─ icons
│  │  ├─ grunt.png
│  │  ├─ gulp-js.png
│  │  └─ webpack.png
│  └─ index.js
├─ webpack.config.js
└─ package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按照上述配置运行后会生成如下产物：</p><table class="ace-table author-6857319138482798593" data-ace-table-col-widths="356;378;"><colgroup><col width="356"><col width="378"></colgroup><tbody><tr><td style="border:1px solid rgb(222, 224, 227);"><div data-zone-id="xr1obo3kftevq23n43j916486p8o8a7ghuqxc1749z6m918yf9ub5z0c1d1i5lhsrhzb1a" data-line-index="0" style="white-space:pre;"><code style="font-family:SourceCodeProMac;border:1px solid #dee0e3;background-color:#f5f6f7;border-radius:4px;margin-left:2px;margin-right:2px;">src/assets/sprite.png</code></div></td><td style="border:1px solid rgb(222, 224, 227);"><div data-zone-id="xr1obo3kftevq23n43j916486p8o8a7ghuqxc1gllifhe08uhg2w43smaaunlu0a404von" data-line-index="0" style="white-space:pre;"><code style="font-family:SourceCodeProMac;border:1px solid #dee0e3;background-color:#f5f6f7;border-radius:4px;margin-left:2px;margin-right:2px;">src/assets/sprite.less</code></div></td></tr><tr><td style="border:1px solid rgb(222, 224, 227);"><div data-zone-id="xr1qa8uecsn5olddnr0l7i2bkj7vz2acsdgxc1749z6m918yf9ub5z0c1d1i5lhsrhzb1a" data-line-index="0" style="white-space:pre;"><div class="image-uploaded gallery" data-ace-gallery-json="{&quot;items&quot;:[{&quot;uuid&quot;:&quot;ecba6788-ef2b-4377-b507-2977af29f183&quot;,&quot;height&quot;:&quot;512&quot;,&quot;width&quot;:&quot;1094&quot;,&quot;currHeight&quot;:&quot;512&quot;,&quot;currWidth&quot;:&quot;1094&quot;,&quot;natrualHeight&quot;:&quot;512&quot;,&quot;natrualWidth&quot;:&quot;1094&quot;,&quot;file_token&quot;:&quot;boxcnDLls215Flx0dl7Bp3iJEUe&quot;,&quot;src&quot;:&quot;https%3A%2F%2Finternal-api-drive-stream.feishu.cn%2Fspace%2Fapi%2Fbox%2Fstream%2Fdownload%2Fall%2FboxcnDLls215Flx0dl7Bp3iJEUe%2F%3Fmount_node_token%3DdoccnwuOfkkbHEW5pYEOEjkUkGb%26mount_point%3Ddoc_image&quot;,&quot;image_type&quot;:&quot;image/png&quot;,&quot;size&quot;:93107,&quot;comments&quot;:[],&quot;pluginName&quot;:&quot;imageUpload&quot;,&quot;scale&quot;:2.13671875}]}"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c1b556bae1db4654a01cd0ceddd43701~tplv-k3u1fbpfcp-zoom-1.image" data-src="https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/all/boxcnDLls215Flx0dl7Bp3iJEUe/?mount_node_token=doccnwuOfkkbHEW5pYEOEjkUkGb&amp;mount_point=doc_image" data-suite="eyJmaWxlVG9rZW4iOiJib3hjbkRMbHMyMTVGbHgwZGw3QnAzaUpFVWUiLCJvYmpUeXBlIjoiZG9jIiwib2JqVG9rZW4iOiJkb2Njbnd1T2Zra2JIRVc1cFlFT0Vqa1VrR2IiLCJvcmlnaW5TcmMiOiJodHRwczovL2ludGVybmFsLWFwaS1kcml2ZS1zdHJlYW0uZmVpc2h1LmNuL3NwYWNlL2FwaS9ib3gvc3RyZWFtL2Rvd25sb2FkL2FsbC9ib3hjbkRMbHMyMTVGbHgwZGw3QnAzaUpFVWUvP21vdW50X25vZGVfdG9rZW49ZG9jY253dU9ma2tiSEVXNXBZRU9FamtVa0diJm1vdW50X3BvaW50PWRvY19pbWFnZSJ9" data-height="512" data-width="1094"></div></div><div data-zone-id="xr1qa8uecsn5olddnr0l7i2bkj7vz2acsdgxc1749z6m918yf9ub5z0c1d1i5lhsrhzb1a" data-line-index="1" style="white-space:pre;"></div></td><td style="border:1px solid rgb(222, 224, 227);"><div data-zone-id="xr1qa8uecsn5olddnr0l7i2bkj7vz2acsdgxc1gllifhe08uhg2w43smaaunlu0a404von" data-line-index="0" style="white-space:pre;"><pre class="language-CSS" data-wrap="false"><code><div data-zone-id="2quqtogydn" data-line-index="0" style="white-space:pre;">/* ... */
</div><div data-zone-id="2quqtogydn" data-line-index="1" style="white-space:pre;">.sprite(@sprite) {
</div><div data-zone-id="2quqtogydn" data-line-index="2" style="white-space:pre;">  .sprite-image(@sprite);
</div><div data-zone-id="2quqtogydn" data-line-index="3" style="white-space:pre;">  .sprite-position(@sprite);
</div><div data-zone-id="2quqtogydn" data-line-index="4" style="white-space:pre;">  .sprite-width(@sprite);
</div><div data-zone-id="2quqtogydn" data-line-index="5" style="white-space:pre;">  .sprite-height(@sprite);
</div><div data-zone-id="2quqtogydn" data-line-index="6" style="white-space:pre;">}
</div><div data-zone-id="2quqtogydn" data-line-index="7" style="white-space:pre;">/* ... */
</div></code></pre></div></td></tr></tbody></table>`,3),vn={href:"https://github1s.com/Tecvan-fe/webpack-book-samples/blob/HEAD/load-img/webpack.config.js",target:"_blank",rel:"noopener noreferrer"},mn=t(`<p>之后，我们就可以使用 <code>sprite.less</code> 提供的 <code>.sprite</code> mixin 添加背景图：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@import (less) &quot;./assets/sprite.less&quot;;

#main {
    // 参数为原始图片文件名
    .sprite(@webpack);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>提示：雪碧图曾经是一种使用广泛的性能优化技术，但 HTTP2 实现 TCP 多路复用之后，雪碧图的优化效果已经微乎其微 —— 甚至是反优化，可以预见随 HTTP2 普及率的提升，未来雪碧图的必要性会越来越低，因此建议读者们了解作用与基本原理即可，不必深究。</p></blockquote><h2 id="图像优化-响应式图片" tabindex="-1"><a class="header-anchor" href="#图像优化-响应式图片" aria-hidden="true">#</a> 图像优化：响应式图片</h2><p>移动互联网时代，我们需要面对的客户端设备越来越多样复杂，分辨率从 PC 到平板电脑再到移动终端跨度极大：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f14b1077cf14b2196bf051e4eded84a~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p>`,6),bn={href:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://www.npmjs.com/package/resize-image-loader",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://www.npmjs.com/package/html-loader-srcset",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://www.npmjs.com/package/responsive-loader",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://www.npmjs.com/package/responsive-loader",target:"_blank",rel:"noopener noreferrer"},fn=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yarn add -D responsive-loader sharp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后，修改配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">oneOf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;javascript/auto&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">resourceQuery</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">sizes?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
          <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;responsive-loader&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;responsive-loader/sharp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset/resource&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，实践中我们通常没必要对项目里所有图片都施加响应式特性，因此这里使用 <code>resourceQuery</code> 过滤出带 <code>size/sizes</code> 参数的图片引用，使用方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引用图片，并设置响应式参数</span>
<span class="token keyword">import</span> responsiveImage <span class="token keyword">from</span> <span class="token string">&#39;./webpack.jpg?sizes[]=300,sizes[]=600,sizes[]=1024&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Picture</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>img
      srcSet<span class="token operator">=</span><span class="token punctuation">{</span>responsiveImage<span class="token punctuation">.</span>srcSet<span class="token punctuation">}</span>
      src<span class="token operator">=</span><span class="token punctuation">{</span>responsiveImage<span class="token punctuation">.</span>src<span class="token punctuation">}</span>
      sizes<span class="token operator">=</span><span class="token string">&quot;(min-width: 1024px) 1024px, 100vw&quot;</span>
      loading<span class="token operator">=</span><span class="token string">&quot;lazy&quot;</span>
    <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),xn=s("code",null,"'./webpack.jpg?sizes[]=300,sizes[]=600,sizes[]=1024';",-1),wn=s("code",null,"img",-1),qn={href:"https://www.w3schools.com/tags/att_source_srcset.asp",target:"_blank",rel:"noopener noreferrer"},jn=t(`<p>此外，我们还能简单地通过 <code>size</code> 参数精确控制不同条件下的图像尺寸：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.foo</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;./webpack.jpg?size=1024&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 480px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token selector">.foo</span> <span class="token punctuation">{</span>
        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;./webpack.jpg?size=300&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),zn={href:"https://www.npmjs.com/package/responsive-loader",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://www.npmjs.com/package/responsive-loader",target:"_blank",rel:"noopener noreferrer"},Sn=s("h2",{id:"总结",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),n(" 总结")],-1),Tn=s("code",null,"file-loader",-1),Ln=s("code",null,"url-loader",-1),Gn={href:"https://webpack.js.org/guides/asset-modules/",target:"_blank",rel:"noopener noreferrer"},Pn=s("code",null,"module.rules.type",-1),Vn={href:"https://github1s.com/Tecvan-fe/webpack-book-samples/blob/HEAD/load-img/webpack.config.js",target:"_blank",rel:"noopener noreferrer"},Fn=s("h2",{id:"思考题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#思考题","aria-hidden":"true"},"#"),n(" 思考题")],-1),Hn=s("p",null,"除了文章提及的各项优化措施外，我们还能借助 Webpack 实现哪些图像优化？",-1);function Jn(En,Un){const a=o("ExternalLinkIcon");return l(),i("div",null,[c,s("ul",null,[s("li",null,[s("a",u,[n("file-loader"),e(a)]),n("：将图像引用转换为 url 语句并生成相应图片文件，例如使用如下配置：")])]),d,s("ul",null,[s("li",null,[s("a",k,[n("url-loader"),e(a)]),n("：有两种表现，对于小于阈值 "),v,n(" 的图像直接转化为 base64 编码；大于阈值的图像则调用 "),m,n(" 进行加载，例如如下配置：")])]),b,s("ul",null,[s("li",null,[s("a",g,[n("raw-loader"),e(a)]),n("：不做任何转译，只是简单将文件内容复制到产物中，适用于 SVG 场景，例如如下配置：")])]),h,s("blockquote",null,[_,s("ul",null,[s("li",null,[s("a",y,[n("svg-inline-loader"),e(a)]),n("：能够自动删除 SVG 图片中与显式无关的各种原信息，达到压缩效果；")]),s("li",null,[s("a",f,[n("svg-url-loader"),e(a)]),n("：以 "),s("a",x,[n("DataURL"),e(a)]),n(" 方式导入 SVG 图片，相比于 Base64 更节省空间；")]),s("li",null,[s("a",w,[n("react-svg-loader"),e(a)]),n("：导入 SVG 图片并自动转化为 React 组件形态，效果类似 "),s("a",q,[n("@svgr/webpack"),e(a)]),n("；")]),s("li",null,[s("a",j,[n("vue-svg-loader"),e(a)]),n("：导入 SVG 图片并自动转化为 Vue 组件形态。")])])]),z,W,s("p",null,[n("用法上，原本需要安装、导入 Loader，Webpack5 之后只需要通过 "),S,n(" 属性指定"),s("a",T,[n("资源类型"),e(a)]),n("即可，对比来看：")]),L,s("blockquote",null,[s("p",null,[n("提示：默认情况下，"),G,n(" 生成的文件会以 "),P,n(" 方式重命名，可以通过 "),s("a",V,[n("output.assetModuleFilename"),e(a)]),n(" 属性控制。")])]),F,s("p",null,[n("其中，"),s("a",H,[n("module.rules.parser.dataUrlCondition"),e(a)]),n(" 用于限定文件大小阈值，对标 "),J,n(" 的 "),E,n(" 属性。")]),U,s("p",null,[n("补充一下，引入 "),N,n(" 并不只是为了取代 Loader 那么简单，更重要的目的是在 JavaScript Module 之外增加对其它资源 —— "),s("a",M,[n("Asset Module"),e(a)]),n(" 的原生支持，让 Webpack 有机会介入这些多媒体资源的解析、生成过程，从而有机会实现更标准、高效的资源处理模型。")]),s("p",null,[n("目前 "),s("a",C,[D,e(a)]),n(" 已经支持 JSON、WebAssemsbly、二进制、文本等资源类型，相信在下一个 Webpack 版本中，必然会基于 Asset Module 实现更丰富的资源处理能力。")]),R,s("p",null,[n("在 Webpack 生态中有不少优秀的图像压缩组件，包括："),s("a",Z,[n("image-webpack-loader"),e(a)]),n("、"),s("a",B,[n("imagemin-webpack-plugin"),e(a)]),n("、"),s("a",A,[n("image-minimizer-webpack-plugin"),e(a)]),n(" 等，以我的使用经验来看，"),s("a",I,[n("image-webpack-loader"),e(a)]),n(" 组件功能齐全且用法简单，更推荐使用。基本用法首先安装依赖：")]),O,s("p",null,[s("a",$,[n("image-webpack-loader"),e(a)]),n(" 底层依赖于 "),s("a",Y,[n("imagemin"),e(a)]),n(" 及一系列的图像优化工具：")]),s("ul",null,[s("li",null,[s("a",X,[n("mozjpeg"),e(a)]),n("：用于压缩 JPG(JPEG) 图片；")]),s("li",null,[s("a",Q,[n("optipng"),e(a)]),n("：用于压缩 PNG 图片；")]),s("li",null,[s("a",K,[n("pngquant"),e(a)]),n("：同样用于压缩 PNG 图片；")]),s("li",null,[s("a",nn,[n("svgo"),e(a)]),n("：用于压缩 SVG 图片；")]),s("li",null,[s("a",sn,[n("gifsicle"),e(a)]),n("：用于压缩 Gif 图；")]),s("li",null,[s("a",an,[n("webp"),e(a)]),n("：用于将 JPG/PNG 图压缩并转化为 WebP 图片格式。")])]),en,s("p",null,[n("例如，我们可以将许多细小的图片合并成一张大图 —— 从而将复数次请求合并为一次请求，之后配合 CSS 的 "),tn,n(" 控制图片的可视区域，这种技术被称作“"),pn,n("”。在 Webpack 中，我们可以使用 "),s("a",on,[n("webpack-spritesmith"),e(a)]),n(" 插件自动实现雪碧图效果，首先安装依赖：")]),ln,s("p",null,[n("关键在于，"),s("a",rn,[n("webpack-spritesmith"),e(a)]),n(" 插件会将 "),cn,n(" 目录内所有匹配 "),un,n(" 规则的图片合并成一张大图并保存到 "),dn,n(" 指定的文件路径，同时生成兼容 SASS/LESS/Stylus 预处理器的 mixins 代码，例如对于下面文件结构：")]),kn,s("blockquote",null,[s("p",null,[n("提示：示例代码已上传到"),s("a",vn,[n("小册仓库"),e(a)]),n("。")])]),mn,s("p",null,[n("这会带来一个问题：同一张图片(主要是位图)在不同设备中，如果显示尺寸大于原始尺寸，最终效果会有明显颗粒感；而如果显示尺寸小于原始尺寸，又会造成带宽浪费。理想的解决方案是为不同设备提供不同的分辨率、不同尺寸的图片 —— 也就是所谓的"),s("a",bn,[n("响应式图片"),e(a)]),n("。")]),s("p",null,[n("Webpack 中有不少能够自动生成响应式图片的组件，例如： "),s("a",gn,[n("resize-image-loader"),e(a)]),n("、"),s("a",hn,[n("html-loader-srcset"),e(a)]),n("、"),s("a",_n,[n("responsive-loader"),e(a)]),n(" 等，以 "),s("a",yn,[n("responsive-loader"),e(a)]),n(" 为例，首先安装依赖：")]),fn,s("p",null,[n("上例的引用参数 "),xn,n(" 最终将生成宽度分别为 300、600、1024 三张图片，之后设置 "),wn,n(" 标签的 "),s("a",qn,[n("srcset"),e(a)]),n(" 属性即可实现图片响应式功能。")]),jn,s("blockquote",null,[s("p",null,[n("提示：除本文提及的基本功能外，"),s("a",zn,[n("responsive-loader"),e(a)]),n(" 还提供了许多用于控制产物、压缩比等特性的配置项，有需要的同学可到 "),s("a",Wn,[n("官网"),e(a)]),n(" 展开阅读。")])]),Sn,s("p",null,[n("在 Webpack 5 之前，我们需要使用 "),Tn,n("、"),Ln,n(" 等 Loader 加载图片或其它多媒体资源文件，这些加载器各有侧重点，需要根据实际场景择优选用；而 Webpack 5 之后引入了 "),s("a",Gn,[n("Asset Module"),e(a)]),n(" 模型，自此我们只需要设置适当的 "),Pn,n(" 配置即可，不需要为多媒体资源专门引入 Loader。")]),s("p",null,[n("在加载之外，我们还可以借助 Webpack 生态一系列组件低成本实现图像压缩、雪碧图、响应式图片等优化措施，相关样例实现已汇总到 "),s("a",Vn,[n("小册仓库"),e(a)]),n("，建议拉下来体验运行效果。")]),Fn,Hn])}const Mn=p(r,[["render",Jn],["__file","di10zhang—shenrulijietuxiangjiazaiyuanliyuzuijiashijian.html.vue"]]);export{Mn as default};
