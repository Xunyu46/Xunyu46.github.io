const l=JSON.parse('{"key":"v-b02b1dd6","path":"/blogs/web/typescript/TypeScript kuaisurumen - hexinjichu，TS jibenshujuleixing.html","title":"TypeScript 快速入门 - 核心基础，TS 基本数据类型","lang":"en-US","frontmatter":{"title":"TypeScript 快速入门 - 核心基础，TS 基本数据类型","date":"2023-10-28T00:00:00.000Z","sidebar":"auto","categories":["typescript"],"tags":["typescript"],"publish":true},"headers":[{"level":2,"title":"一、TypeScript 简介","slug":"一、typescript-简介","link":"#一、typescript-简介","children":[{"level":3,"title":"1、TypeScript 的历史","slug":"_1、typescript-的历史","link":"#_1、typescript-的历史","children":[]},{"level":3,"title":"2、TypeScript 目前有多火","slug":"_2、typescript-目前有多火","link":"#_2、typescript-目前有多火","children":[]},{"level":3,"title":"3、TypeScript 的重要性","slug":"_3、typescript-的重要性","link":"#_3、typescript-的重要性","children":[]},{"level":3,"title":"4、TypeScript 的本质","slug":"_4、typescript-的本质","link":"#_4、typescript-的本质","children":[]},{"level":3,"title":"5、学习 TypeScript 必备的前置技术","slug":"_5、学习-typescript-必备的前置技术","link":"#_5、学习-typescript-必备的前置技术","children":[]},{"level":3,"title":"6、Atwood 定律","slug":"_6、atwood-定律","link":"#_6、atwood-定律","children":[]},{"level":3,"title":"7、重塑 ”类型思维“","slug":"_7、重塑-类型思维","link":"#_7、重塑-类型思维","children":[]},{"level":3,"title":"8、什么是 TypeScript","slug":"_8、什么是-typescript","link":"#_8、什么是-typescript","children":[]},{"level":3,"title":"9、为什么要使用 TypeScript","slug":"_9、为什么要使用-typescript","link":"#_9、为什么要使用-typescript","children":[]}]},{"level":2,"title":"二、基础类型","slug":"二、基础类型","link":"#二、基础类型","children":[{"level":3,"title":"1、强类型语言 与 弱类型语言","slug":"_1、强类型语言-与-弱类型语言","link":"#_1、强类型语言-与-弱类型语言","children":[]},{"level":3,"title":"2、强类型语言","slug":"_2、强类型语言","link":"#_2、强类型语言","children":[]},{"level":3,"title":"2.1、以 Java 语言为例","slug":"_2-1、以-java-语言为例","link":"#_2-1、以-java-语言为例","children":[]},{"level":3,"title":"2.2、Java 语言中的强制类型转换","slug":"_2-2、java-语言中的强制类型转换","link":"#_2-2、java-语言中的强制类型转换","children":[]},{"level":3,"title":"3、弱类型语言","slug":"_3、弱类型语言","link":"#_3、弱类型语言","children":[]},{"level":3,"title":"3.1、以 JavaScript 语言为例","slug":"_3-1、以-javascript-语言为例","link":"#_3-1、以-javascript-语言为例","children":[]},{"level":3,"title":"3.2、JS 语言中，变量可被赋值为不同的数据类型","slug":"_3-2、js-语言中-变量可被赋值为不同的数据类型","link":"#_3-2、js-语言中-变量可被赋值为不同的数据类型","children":[]},{"level":3,"title":"5、总结","slug":"_5、总结","link":"#_5、总结","children":[]},{"level":3,"title":"6、静态类型语言 与 动态类型语言","slug":"_6、静态类型语言-与-动态类型语言","link":"#_6、静态类型语言-与-动态类型语言","children":[]},{"level":3,"title":"6.1、JavaScript - 动态类型语言","slug":"_6-1、javascript-动态类型语言","link":"#_6-1、javascript-动态类型语言","children":[]},{"level":3,"title":"6.2、C++ - 静态类型语言","slug":"_6-2、c-静态类型语言","link":"#_6-2、c-静态类型语言","children":[]},{"level":3,"title":"7、JS 与 C++ 内存分配对比","slug":"_7、js-与-c-内存分配对比","link":"#_7、js-与-c-内存分配对比","children":[]},{"level":3,"title":"8、静态类型 与 动态类型语言对比 - 总结","slug":"_8、静态类型-与-动态类型语言对比-总结","link":"#_8、静态类型-与-动态类型语言对比-总结","children":[]},{"level":3,"title":"9、关于语言类型的其他定义","slug":"_9、关于语言类型的其他定义","link":"#_9、关于语言类型的其他定义","children":[]},{"level":3,"title":"10、语言类型的象限","slug":"_10、语言类型的象限","link":"#_10、语言类型的象限","children":[]}]},{"level":2,"title":"三、TS 核心基础","slug":"三、ts-核心基础","link":"#三、ts-核心基础","children":[{"level":3,"title":"1、TS 的环境搭建","slug":"_1、ts-的环境搭建","link":"#_1、ts-的环境搭建","children":[]},{"level":3,"title":"2、创建 TS 的配置文件","slug":"_2、创建-ts-的配置文件","link":"#_2、创建-ts-的配置文件","children":[]},{"level":3,"title":"3、体验第一个 TS 程序","slug":"_3、体验第一个-ts-程序","link":"#_3、体验第一个-ts-程序","children":[]},{"level":3,"title":"4、TS 的优势","slug":"_4、ts-的优势","link":"#_4、ts-的优势","children":[]},{"level":3,"title":"4.1、优势一：编译时静态类型检测","slug":"_4-1、优势一-编译时静态类型检测","link":"#_4-1、优势一-编译时静态类型检测","children":[]},{"level":3,"title":"4.2、优势二：自动提示更清晰明确","slug":"_4-2、优势二-自动提示更清晰明确","link":"#_4-2、优势二-自动提示更清晰明确","children":[]},{"level":3,"title":"5、错误提示插件","slug":"_5、错误提示插件","link":"#_5、错误提示插件","children":[]},{"level":3,"title":"6、类型注解","slug":"_6、类型注解","link":"#_6、类型注解","children":[]},{"level":3,"title":"7、类型推导","slug":"_7、类型推导","link":"#_7、类型推导","children":[]},{"level":3,"title":"8、TS 编译","slug":"_8、ts-编译","link":"#_8、ts-编译","children":[]},{"level":3,"title":"8.1、编译文件目录优化","slug":"_8-1、编译文件目录优化","link":"#_8-1、编译文件目录优化","children":[]},{"level":3,"title":"8.2、重复变量名 或 函数名的编译优化","slug":"_8-2、重复变量名-或-函数名的编译优化","link":"#_8-2、重复变量名-或-函数名的编译优化","children":[]},{"level":3,"title":"8.3、TS 出现语法错误，不编译","slug":"_8-3、ts-出现语法错误-不编译","link":"#_8-3、ts-出现语法错误-不编译","children":[]},{"level":3,"title":"8.4、使用 ts-node 直接运行 TS","slug":"_8-4、使用-ts-node-直接运行-ts","link":"#_8-4、使用-ts-node-直接运行-ts","children":[]}]},{"level":2,"title":"四、TS 基本数据类型","slug":"四、ts-基本数据类型","link":"#四、ts-基本数据类型","children":[{"level":3,"title":"1、原始数据类型","slug":"_1、原始数据类型","link":"#_1、原始数据类型","children":[]},{"level":3,"title":"1.1、boolean 类型","slug":"_1-1、boolean-类型","link":"#_1-1、boolean-类型","children":[]},{"level":3,"title":"1.2、number 类型","slug":"_1-2、number-类型","link":"#_1-2、number-类型","children":[]},{"level":3,"title":"1.3、string 类型","slug":"_1-3、string-类型","link":"#_1-3、string-类型","children":[]},{"level":3,"title":"1.4、bigint 类型","slug":"_1-4、bigint-类型","link":"#_1-4、bigint-类型","children":[]},{"level":3,"title":"1.5、symbol 类型","slug":"_1-5、symbol-类型","link":"#_1-5、symbol-类型","children":[]},{"level":3,"title":"1.6、object 类型","slug":"_1-6、object-类型","link":"#_1-6、object-类型","children":[]},{"level":3,"title":"1.7、undefined 类型","slug":"_1-7、undefined-类型","link":"#_1-7、undefined-类型","children":[]},{"level":3,"title":"1.8、null 类型","slug":"_1-8、null-类型","link":"#_1-8、null-类型","children":[]},{"level":3,"title":"2、包装对象类型","slug":"_2、包装对象类型","link":"#_2、包装对象类型","children":[]},{"level":3,"title":"2.1、可获取包装对象的类型","slug":"_2-1、可获取包装对象的类型","link":"#_2-1、可获取包装对象的类型","children":[]},{"level":3,"title":"2.2、包装对象类型与字面量类型","slug":"_2-2、包装对象类型与字面量类型","link":"#_2-2、包装对象类型与字面量类型","children":[]},{"level":3,"title":"2.3、最佳实践","slug":"_2-3、最佳实践","link":"#_2-3、最佳实践","children":[]},{"level":3,"title":"3、Object 类型 与 object 类型","slug":"_3、object-类型-与-object-类型","link":"#_3、object-类型-与-object-类型","children":[]},{"level":3,"title":"3.1、大写 Object 类型","slug":"_3-1、大写-object-类型","link":"#_3-1、大写-object-类型","children":[]},{"level":3,"title":"3.2、小写 object 类型","slug":"_3-2、小写-object-类型","link":"#_3-2、小写-object-类型","children":[]},{"level":3,"title":"4、值类型","slug":"_4、值类型","link":"#_4、值类型","children":[]},{"level":3,"title":"4.1、值类型注意事项","slug":"_4-1、值类型注意事项","link":"#_4-1、值类型注意事项","children":[]},{"level":3,"title":"5、联合类型","slug":"_5、联合类型","link":"#_5、联合类型","children":[]},{"level":3,"title":"5.1、联合类型注意事项","slug":"_5-1、联合类型注意事项","link":"#_5-1、联合类型注意事项","children":[]},{"level":3,"title":"5.2、类型缩小应用场景","slug":"_5-2、类型缩小应用场景","link":"#_5-2、类型缩小应用场景","children":[]},{"level":3,"title":"6、交叉类型","slug":"_6、交叉类型","link":"#_6、交叉类型","children":[]},{"level":3,"title":"6.1、交叉类型的应用场景","slug":"_6-1、交叉类型的应用场景","link":"#_6-1、交叉类型的应用场景","children":[]},{"level":3,"title":"7、type 命令","slug":"_7、type-命令","link":"#_7、type-命令","children":[]},{"level":3,"title":"8、typeof 运算符","slug":"_8、typeof-运算符","link":"#_8、typeof-运算符","children":[]},{"level":3,"title":"9、块级类型声明","slug":"_9、块级类型声明","link":"#_9、块级类型声明","children":[]},{"level":3,"title":"10、类型的兼容","slug":"_10、类型的兼容","link":"#_10、类型的兼容","children":[]}]}],"git":{"createdTime":1698505250000,"updatedTime":1698505250000,"contributors":[{"name":"xunyu","email":"2548126293@qq.com","commits":1}]},"filePathRelative":"blogs/web/typescript/TypeScript 快速入门 - 核心基础，TS 基本数据类型.md"}');export{l as data};
